(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1541631,      33955]
NotebookOptionsPosition[   1494741,      32964]
NotebookOutlinePosition[   1495316,      32983]
CellTagsIndexPosition[   1495273,      32980]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["SEI2HR-Econ model with quarantine and supplies scenarios", "Title",
 CellID->607055339,ExpressionUUID->"1d6e7de6-6d39-49ea-b33d-20b987ec6b5d"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.793463899655674*^9, 3.7934639020296097`*^9}},
 CellID->649430462,ExpressionUUID->"74910f32-770f-4414-b760-416849dc6dba"],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 ButtonBox["epidemiology compartmental model",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 ", [Wk1], presented in this notebook -- SEI2HR-Econ -- deals with all three \
rectangles in this diagram:"
}], "Text",
 CellChangeTimes->{{3.793463933373004*^9, 3.7934639875984297`*^9}, {
  3.795024707955104*^9, 3.795024715177804*^9}, {3.79516842628983*^9, 
  3.79516844505552*^9}, {3.79516849910369*^9, 3.795168499105081*^9}, {
  3.7951686164881783`*^9, 3.7951686341165257`*^9}, {3.795256403590843*^9, 
  3.7952564085109158`*^9}, {3.79526774919901*^9, 3.795267750143429*^9}, {
  3.795606399282728*^9, 3.79560639968967*^9}},
 CellID->1465880780,ExpressionUUID->"805503ea-53e9-4a42-ad7d-f1890e6cd0f0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvVV0XEmW99vr3pfv8b7M0/c0M2tNV/d0NfdM9/Q0d09NgSCZUUqRSWYu
M7OUpFSKmckWWbbAkkmWLCWLmZlZeXecSKVlUanKtlyW47dOZR1nnowTcc5W
nn/siL3jn+V76F7/zw9+8IP9/wde6LLDf9m3T3aU8f/BP1i79/t671Z4fr77
gMJbse+38v8X3vwMjj0PO2jfTiAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQC
gUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAg
EAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgE
AoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFAIBAIBAKBQCAQCAQCgUAgEAgEAoFA
IBAIBAKBQCAQCAQCgUAgEAgEAoFA+D6xsLCAXxcp8I7zzRUfrX5zg49Wv7lx
Ud/q1G+xKNKK788F+cZTL//oe9uK7+1t/cZTEwgEAoGwlZAHEIFAcEJ+DQgE
AoHwXjAajdPT0zabbWBgoLOzs7GxcXx8HN6cm5uD14mJiYaGhu7u7v7+/pqa
GjjSYDDMzs5aLJaRkZFWCtgxm83wJnwEB8BhcDB8Bb44OTnpLAqKbWpqglMM
Dg7C6WZmZuB4eLVarUNDQ+3t7c3NzWNjYyaTCRc1NTVVV1fXSwE78E98ajgA
DoOD4SvwRaiJsygoFgpf3QqohrMVtbW1zlZAtZe3AopasxVwEZa3AgqHU8Dl
crYCX5Dh4WGoUktLyze2AopytqKjowNaARdhRSvgfbhccDo4Eo6Hj6AV9fX1
PT09fX190ArnBYFWjI6OQhPa2tpWtwLq2dXVtaIVsA+tgPfh0xW3FVoB5UAr
oEznbcWtgPPC2aEOztsKdYMartkKfFu/bSvgvHB2qMOarYA6b7IVcB2gHLgm
K1oBZ1zeCue9WG6ca7ZitXHiVqwwTmcrwBKWtwLfVmcr3vBPDFqBjXP5vXjz
P7H3/VNEIBAIhI8I7ACBx9YXX3zxr//6r/CQ+vLLL1NSUm7cuKFQKF6+fPnr
X/8aHk+/+MUv4IElk8kCAwPj4uJcXV3hMfrpp5/C8/SPf/zjgwcPjh07duTI
kaKiov/+7/+GJyN8BE9VGo0WExOjUqnEYjE8H3/+859DUVDgixcvfH19r169
mp6e/vnnn8MT9t///d/hKf/3v/89Ozv77Nmze/bsefz48W9/+1t4xP/0pz+F
5zKXyw2h4HA48M+f/exn8BEcAIft3bsXvpKTk/PXv/4VCvnJT34CBUKxqamp
165d8/HxqaiocLYCqiGRSJRKZWxsrLu7O1QSjocK/+EPfygsLIQmHD16FHag
UdA0+AiaCYdBk6Hh8EW4CL/85S+hqF/96leVlZXe3t7Xr1+HywWnA9UBx8PT
/y9/+Utubu6ZM2egYmVlZb/73e9wK0A2sNnssLAwvV7P4/FAIcCbUBS04smT
J7t37z537ty9e/f+8Y9/QCvggoCC+t///d+MjIwrV67A5SovL//Nb34Dx8Nl
BAkhEonUanV0dDSdTgcdAhccWvH73/8ebsHhw4dPnDgBN+VPf/oTbgXcXxcX
l/j4+Dt37sjl8uWtgFsMN/rmzZvJyclfffUVSBQ4NW5Ffn7+qVOn9u/fX1pa
CiVDK+AsIFSYTGZERIROp+Pz+aBt8G39j//4j2fPnu3atevixYtZWVnQCrAl
ODW8/s///E9mZualS5d27NgBx8CRuBUgsQQCgVarjYyMhDKhZCgfzgLnevTo
0cGDB0+ePHn//v0///nPUB+oFdQNapiYmHjr1i0PD4+qqiqoPxQFbYF9eOf2
7dvwKbQU2gunhrbDFYASoBworaSkBErGxglXjMFgwHnh7HAlQd05WwHXGep5
+fJlqPNnn30GdwFODa2AFt29e/fChQvQRmjFf/7nf8LxcAfhCsB1CA4OhjsL
rYC7DG9CK+C+w3Xbt28fXMO8vDy4ntAKqBXYCfytwdWGa47/xJytwH9iAQEB
cKfc3NzA9nAr8J/Y8ePH4c7C/QVbhVbAR2C9cPfxnxi0AqwCLHz1nxhYEfxF
wPFgV3/729/AxsDS4E8MrA5aAVWFvyb8JwaWCdcE/o7geoI6fd8/TgQCgUD4
KFhcXIRXeODC8xoeuLA/ODg4PT09MTExMjIyNzc3MDAAx8Ar7MM78D58OjQ0
ND8/39/fD1IWjp+ZmRmjmJ2dhX/Cm/ARHDA8PAxPtOVFwUe4qNHRUWdR+Hhn
UePj4/ApFOU8NS5qcnISSoMdfGr4CI6Hw+C88BX4ovPU8ArFQuG4qOWnhu9C
ZXBRK1oBRcHxUBouCspf3gr4yuoLsrwVKy7I8lasuCBQFG6Fs1bOVkBRq1sB
p1hxQfC92OCCOFvhLOob78XqC4JbgW8rPvXyVuBTw9fxqXEroCjnvXAWtfxe
OC/IinvhbIXzXmxwW9e8F9/NOJcXtfyC4HvhNE44HvahqDXvxXczzjXvBW7F
Bvfi2xonHL+8KNyKNY0TSoD3YQc0Kta0zt8HAoFAIBDeHfhZA0+0Bw8evO+6
EAiE7wV9fX1kyiiBQCAQtgb8xDEYDL///e9HR0fty8IWsExd/breR9/h+DW/
9R1Ovd5HGxy/XoXfYq3e4wX5DhfwPd6L7+EF+R7ei7dYq/WOx3/7Vqv1V7/6
FcjR5ccTCAQCgfBOmZ2d7e3tJZ4QAuFjBivPiYmJZ8+ewW/C+64OgUAgED4K
sP6sqKj45JNPsF+UeEIIhI8T/Lff1ta2Y8eOkZERO/k1IBAIBMJWMT093dra
SvyiBMLHDFae3d3d58+fHxsbsxMtSiAQCIR3D9afZrP5iy++GB8ft5OnD4Hw
cTMyMpKVlQX90/ddEQKBQCB8FGDl2dfXl5iYSGaIEQgfM7hnWldX95e//KW/
v99OeqYEAoFAePfgZ01HR8edO3ewJ+T7//RZtDtCiWHPjv+/tEMgIPvAprG4
SKziOwB9UvhBIDN2CAQCgbA1YFFXW1srlUonJyftH4IWXRKgr/5JiQ6iRwlO
01ikMhS9yoBE2AxYf1oslk8++YTkuicQCATCVjIxMWEymebn5993RTbH4qv/
g95Y+ifWHu+tUoT3DpUl076wygYWiFl8G2ZnZ9vb2z+YXwMCgUAgfOBgT0hl
ZeWnn376oeR0WnTk/V7656J9fAZ0qDNF/3urGOG9g80CxGfn8Ez70HTX8Mzs
HDGIzYJ/Derr6//+97+T+aIEAoFA2Erm5ubwItfvuyKbBde0f3wu5lnv+bvN
h5Lrz2Y1Rj7u7hhCU17nP5yGEN4Wi0u66VnTyOnMRpHewg4yC4LNx1Ib71uG
HMcQw9gQfH2Gh4fT09Onpqbed3UIBAKB8FGAPSEvX778+c9//sH4RakKvmwZ
8460uQca6RoDS2ukq01uSqM41FpoG7STYdmPjMUlu02r7KWpjQy1kR+MhCi8
MrVGMAxNYfvM/ALppGwMvoY9PT2XL1/GGd4IBAKBQNga4LlTXV39QcwQw2rC
2D4GSoOtNYlDrEK9RRhsFurRPifIzNQYypvQkjFEjn48YBH1wDrkFmgAexDp
LXxKiPKRYZhFIVbXAEPUky47mcKxIbhn2tra6u3tPTw8bP8QeqYEAoFA+NBx
ZhT09PScmJiwv/unzyIVXfLdToJD5afnFo6k1DPURlAdfJ2Vr3MID1CnIr2Z
pTX6RdcMjs8tfqezvEn1CN8NuNrzC4t4+y63jHqdnFnwi6nhBFmQVQS/0qLI
MPQWHthGiLmpD2WKWB3ctDELS9X7SGLjJicnX7x4QbINEwgEAmFrwE/X9vb2
69evv+uVVtYKcP4uJZg7x9las0Ny6CwCJDxMoDcEwSb4pzDE7K40ltYO27+N
a3RxVWVWv0N4F6y+RYvfsj+Eb9OTxhE0QVRvRt2T17UoX4c6Ka6BhmwDiseZ
33Tha9ZjG1sF7pnabLZf/OIXJKcTgUAgELYG/Kzp7+9PTU2dmZl5d+dxysLO
4Rlj+3jLwPRS4Psmn3c4PhrtpVX2MjVGIZIZKz1gaEw22ExXGeOe9tg3lA1L
53SEXeOdmbnF+t5Jc8d4/9iMs25LSaNI/tK3jHOFgo7B6QLT4N3q/mxTv7Vr
4tWnmwObVtKLHobaKNZbBatMgq9DLnSayhj++BuG6ZffY2dmhqq2cRCxUL1C
29DA2Kzdvs2T2c7NzcEPAsl1TyAQCIStwbke/Wefffau1qN3JKK3P20YPZHW
KAtDo6iyMOvBxMY848A8pRc3sXASJRqpgxPLe+gag1BvdsanLNtMIEXom1Ad
zrxQWK9OzS7EPuveGVMrDbWJ9GbPCNvFe821XY7k/zhx5fZVH++TiNJOWZiN
pjK5BFS7KdFtvZbb0ocl3+ZMEWvRtJegRU3CYOQnX2EVPJ1JpLe4q4zRT7vt
m1G5i3YsxJr6Jr5Ob+QFmd0CDV8FGuhqo1ekLaWyb9GRVmy7qTX8a2C1Wj/9
9FPiFyUQCATCVjIzM9Pe3v6OPCFOAemuNDA1Jk6QiacDeWBhay0uAYY799uo
mXib8oNh3fi4cYTyi4LsNK90gulM4hALSJo8U7/9G4dTlwaDu0dnTmY0uQQa
2FoTP8gChUAl6Wqop6W0bvlYP3kuvx2wr3l0av5mfpt7oJELWjHEIgqxwgY3
1DWwam9C3cjU/Cado/gumzrGuEEmygxWalE+miyKrOKBBeVY+KZoekfnw9I5
IQ2Ffo0BShOGoFF+6EPBKVwDDMHFHXML+LBtOLd4amoKOqdzc3PvuyIEAoFA
+CjA+rOiouKHP/zhu8jphAvLtwy6q1CAMzXJ04w1pEgP8gOER3XkY8pbtZnS
qNfhqTmvCBtHaxTpbaujVPjICWZu6Z+yf5OUWcQOsAX76cwmF6UBRCx2qQmh
TD1oDwtXh4RNbc9WhHR9VGBtr3/U8WUAXHarQzriGDS9mepNGM/ebZqd34S/
3FnmwsLRlDqaGsnaldM2UK5Rk2+UbXAC6asNneUOJQo6eVdcLUNjFIeieSAC
HbIrARWVD9VzVRrzLAP2pX7WtgEbeUtLi1AoHBoashOzJxAIBMJWMTs7293d
/Y78oiOT8ztja5eijcy8YBMOJ6FEqQmHHbUMoLCpTclR6qAcU7/bkrjFAhJe
hZS4/TKwOoYaiv0mmbA4T42xPqodYahQ2h9nnItA53Smmelq4+mMpu3n+3qP
4GvZMTzjEWHh6Sjl70iDYFkyCdQRYGuMlS1j9s35RrFkqu2epBIpmJB/VY+7
PKgoOAtdYygwD2ymNGw2uUboPRlBdi4ZqmPHoWy15j3xtTNzVA60bWQa+DL2
9fUplcp3NWOHQCAQCITXwfrTaDT+6U9/GhvDj/639vTB7q+n9SM4/9LqiXwg
REE80FXGxPIe+6bD3nFqnciyLmrQ38jVgdhAG0tjcQs0qB62g0b4xoROi0sL
lysfdtDQNMVVAS/Iy2rm6kzSMEv3yIydpKZ8S+DL/rRxxE1pFIWs9Gzzqe6J
iAo1Cinpsn8Lq0CvlS3jHuE2msrA0JiY1AblQLEPqKWXvqkox6QN+O96bhsd
Ge1Kk1geItfUS/net9GkUfy3Pzg4GBMTMzk5+b6rQyAQCISPiKGhoby8vLc+
Qww/+gssAy4B1WI9FqKrxk9DLC5Kg/5RJxw5v/kRTyqaqLR+5GhKgzzcioOh
9ifW55kHqMB3Z/D7BgU4AudPpDWxNFQuoLUkB4/ylFa2jNq3dTKfrQRbRWHN
IE1lEuqtays9KgVTYEG7fdNWgUKJKF3YOzob/aTnSHL9/oT6Q8n1wcWdzX3f
PGFjqRD0MjO/cCy1gaU1rWcVOB7qeSNlFdvILHDPtKGhwdXVdWAAu5G3T+sI
BAKB8P3EOUPszJkzeAXqt/j0mXeshjPoEohmY/JXhxpR4+CuSkNI6bfQoguL
VNbxpXq2DExVt4019U05v42CoTZX1NzC4tnM5g20KF9nEgabTe3jdqJF3xJY
iz5uGHYLNKAFknQrTYIXDBrVRFMZQEbaN+cXdaxQYF/RB1lctodD3zcbInc5
u5WhMa3nF+Xp0Oh/bQ9Os/BtL8D3nZmZmcbGxg9iFTYCgUAgbAOwooNHz+7d
u/Go3Fsfoze0jXF1DrG3Souixz1DbcoxDtg3oTpWfL66qguvK5GNy8N6Nby0
yx1E0aqAFzxGzwkyKcKtY1Nzq89O+G7ge9TcPy2hZmOuNgk0Rh9iZmiMTxo2
tZar86bDgTPzCxMz1DY7Pzm7MDm7CK/wz9llCe7X71MgrYo/zXjZ56bcyCr8
om1QLPWlN7oa3yucOZ0++eSTnh40bYb4RQkEAoHwrsHPmtHR0adPn76jLC5z
Cwsn0xppjjzkOOWOxSFEg83sIKN3lG10EjlhlruxVj/isXScn18sbxqNedJ9
I7flSm7LtZzWyzkteLuC3mm+kd8S/7zH0Da+vIGry11cEjnWrgmUC0hnQU4w
vSNwCc9rFYdYXQONuqIO+6YyoBI2C77ymsIOl8BqsSNq7FVEm1iPVs46nNww
Nbc04QIng13GiqLaB2ciH3cfSKjdEVPrF13nG13rG12DtpgaP2rbEVNzKKk+
7nlPD576+6ouK8t1xO+MzioirCytCRktFUTvEKJU0rAvA6rTKvvsDpvcbmYB
vwMgREmuewKBQCBsDfiJU1VV9etf//qtxy7Zl3yJoPdEIRamFqV5pIKYzDih
E1dnpKuNRTXO7DGLCwvzzofgAoXdMbqKCmronQRZS1cb3FFwihFtaqNjh9qY
ahNs7koDW2O8mN0yMI7U9cJSyc7k5NRZ5qkZhqhY0K6gOQXBjuoJqTFiKnzG
tCu2rn98hhoCJi6itwZe/WBkcv50ZqNLoAGHsIn0VjFYRbAFbq5fdG1tt2Pt
eHSbXtdF83DvqCF5fPuKbEPwRXTTtSZ2EMoNi3aWbSytEV45WrOb0uAZYXvZ
OmbHEXCrbuq8wyrQfmXrKAe+i0bqqdynyDDQjAIo5Gpu89TswuK3Xaz0ew++
zrW1tf/1X//V348y9G6zBhIIBALhe8vc3NzAwMA7eu5gf6ahfUwRUeOmROKT
E2SBRzzsC4PNBVaUfnzB4ZZaWKrPvHO62uKSOKjrmVREWt1VSCXibE5okR20
Y35tC7aI9SiayU1p8o+vpfxgr1YghZY6mwlPXiwy5xfs4WWdIDygSmytmaM1
0lVGN+Saq+8cxhH023vVx/cAvgmDE7PX8lp5OjRn2DWwGl7BMA4nN/SMonWX
FhZfLcQ5Pj45ODA8ODg0MeFYJBQLp7K6ISqXggkHxyF7oIbRV25U5Dv0NdhB
Fm6Q5XnTmPN2jo6NDQ4Bw9NTzoVfHdONX7aM7Y6tgz6OW4ARNLObCjos1uCS
Tjziv/3mD+M/DeiTFhYWvssVgQkEAoFAeIUz1/2Pf/zjd5HrnmIRByUNjM0m
PO89k9Xon1B3Mr0hvLSrmcpIP79s1LWiolofHHXu3PXz566FhcYYjWb8/ujU
/G4q97gIZaS38h0J89eebYg/klDLPh5LrZ+YRYWXPnqm1YSdO3v18qVb0dGJ
tbUNdspbuuCQuouGtnHVw46jKY37E+suZzffM/RPz6KLs+BcA5SI0bfH4pJV
2FE/ZTzueXdYWVfk066yuuE5PBljyWk5PDwaF5e81/+4WOwL2969xxLiU0dG
0RyMtsFJWRjK9knFQOExdPPqYKgla7HCMXAkS2uSh5mhjzLQ1x8SEr1r50Gx
yEcq8Tty+HRWVu70tKP3MU/9aYxPzz+wDEU97gov60p80VtHxSuB0cwvLGw/
nyFuUWdn55EjR0ZGRt53dQgEAoHwETE1NVVXV/cuZogtLnNtOZmcXRGPgv4x
PT0dEBDEZklpNCGbLaN2BFyuXKUJtS/Mp1T2uSqrRY6lkZaLjTWEh1N+8HQm
SZjN3Nx3+0YAjS6i06FkKYsldXcXCAReCfEpdueI7BIghKZmF1ZUbuGbc0QR
vgWbz4PU09N37Ng5Nzcej+chEHrDXQOTcHfn++87MTU5lvCi3yUAWQVfhxYP
XU+I4pmolNkgLzpTYzqQ0lJaUbPT74Cbm4DH8xQIFLCxOTI3d8GZM5dHRkY3
UzeHI38bGQbWoh0dHYcOHcJadPvpbQKBQCB838D602azsdnst7jSCh7SdirO
mfnFntHZruGZzqGZrpGZ3tGZ7pGZjqHpjuFpeH92bnFubu7WTTVIDrHYWyLx
FYt9RCK0A68urvyYiKj4571uVEZ6wXpiY62NrbVmvmg7c/K8m7tQIvbBBeJT
CIVebm789LS7UMWhibmu4VmoW8fQbM/IXM/IbBeqHlR1dmhi9lW4E3kuvwHL
AtOozK7zCw29k6aOcUP7eHXbWFXrWJXjdbSqfczUPt4K1797wH/PUQZDLJX6
wY0TCb3grsEO/BNE44UzF7JfdrKCcPdk7Tylqzc0mh9WU/CiYZePP4slk1Im
IaRKFoJtSH1p7sJLF28Oj8/W9UxVtznq9rKFqlvrGLxjaBu3dE10DDuGsJc6
cNvHNsbGxoqKisgYPYFAIBC2Bqyvuru79Xr9W336ONyNbYOTIaWdx9Ka/GJq
fCNrfKNqfaJrvKNqvKNrYMcnqkYRbgkq68vLL2bQRJLlwsAhPHxAl7KZkqz7
j/cmNbM1RmGwddXiTWsnS3dXGS7mdcTGJbu7C6QSP5Hw9ZLF3gLYEXg+rrCc
utvuEW72jbL6RNl8Imu8I63esIO2Gv+4uov3mvJMg3j6KlGjb8CiMxlBgXXo
WEo9N8jEUJkYahMKQFOjicTUq4mhMX55p+rM3bbYuDQ6TYA7Dis2eBO6EolJ
mXDvGGqDcHNCFFmF0hBY1K3T6mk0kVSy47ViBQqhELoqviymKCO7eFdi81d3
qqAydFRJqnoqE1VJtJaTPMx6M7+1uR+tXetw8374M4qXxy719aFEAaT/RSAQ
CIR3jVOLhoaGvkUt6lhbxzYsCrG6q4xMjYkbZOZpzbwgCw92lja+zuISaAwu
ajt35iKLLV8hRKlNIRZ7M5mS61duBRV3oJSPaKWeb3aNCvRmptac8Kz98IGj
qGSxzwotCiWDnqHRRXpd5IWcTvfAap7ODOoI6slBr1SFqTgXEB40pfFUetPQ
BMky+gZQUeez8wvqwg6cBkEQjKLPUEjRsg3ekYTANTfEP+04dfQUe22rQF0J
Flt26uTZ6NI2msokXisR6JrTNrjB1sTSxn17D7O5ULLP6pJBi7rTRIG31cqi
boa6WhRiFunR6mBCFOlvEaD4OBTsz9chWSsPt1a0vP3sE+8XktOJQCAQCFsJ
foZarVYGg4EjlN/8qYqFaFndMF0Nig7HvJuF1IQ9AeXVdG7wlGdoLFnl7Xt3
7ONwPYWiV5JAgJxUjjFZFkd+0P9gyvNON6WJp7OsXrxp9cbTmQShNUkPKr09
d/H4CuGaKlfkw2RJL56/qi9qY2hNwhBcQzQNgAq7RvtCKiRfRIVBHUpqGEUp
L+3LV30ibBJ8wSIed7kqq4XUvM31pvvCxWcFmRMft+zdfYDD9Vhbiwq9OTzP
3X7+6c/baSroRGzKLwpWwQerKKhQyP34AsWq7omXgHLFs9jSM1+fDytqwUsv
CXHc02s1RBYCApitNcFHlg70h7OZ9aG+5zhz3f/oRz8iue4JBAKBsJVMTU01
NDS8lVX/8LOrdWBaHGLm6FavrWlZqTp0ltSnzbt99nB4Hsu1AWhRkQhekRZl
czz2796f8ryDpjbeyGvZaJXwYBOOlaarDYFFPXmPKmUSP1QIlCxY6RdFKhdU
x8lzoUUtdM3KxceXKV60A8LDNdAY8LDN2cYPfUB2K8E6zdY1iWZZ6NdYCnaF
VTC1puTHLft2HeQg7yXcLLh3y32YaO4om+uxZ8eetGetdI05paIXbhDup+AY
pdclqJnqVlgYKkNCxWBpuVHisIqVflER1fdhsKVnvz4fWtyCeigOS1i7wqIQ
M11jPJ5WP7/gTLbwwUPWACUQCATCVoI9IZWVlW8rpxP+dvSTbncU9v4Nczvh
Ue6uMiY9bTu09zCX67naA4YiVpBfVHby6MmYsnZukLm8aYRSHes7vtC0QAtT
bXpUP/rC0uLt5c/le1CzAVd5wMTeNLrw1k2VsrALtOsGEpfviMo3i0MtbYPT
S1dpWyiPLQFbhbqwna4yitDyW+tqUR41q9NNaYh50nn6xBkWW7amX1Qs9mGy
pefOXAwtaRPoLS9bR+HW8HRr60ZesCO/KFtrKqsfrazv3r3rMJeDVe5r3RNq
5oaPO02kDAy6U9jjrnLMRN3AjNG4f5DJ2I7i/j70YW3nisBubm6Dg4N24hcl
EAgEwlYxNzfX39//tp4784v2g0kNnFc+pXWf4yAaQZzcvN+p10XQqNil1+Qi
Uo8o5p1GE0RFJp691+4Vaa1qG5OHWbnraFGnS1MYbC2pHapomTh37jqdKZaI
/Vb7RcViXwZdlJaRdySjnaGu/saQKCE1jzHbiNajmZ9fIFL027IvoZZaxmjl
kPcaflG18WRmW0rqPXc3gUTsi53YSDqKsGIEq/ABq0jLzD2U1uodZbV0jcvD
wSpM1Hqda+hbtKND9va8ceRR47hGG+7uLpRK/Fa6ylEPxZfDlmY/eLI7oYmt
NWAv7gZmLKKWfEp8gUa05+c/bJvAvwCgQqOjoycnJ993dQgEAoHwUeBcA/Q3
v/nN21oDdGHRviOmhq1dY6LdGn6wIJM4tPZ+ef0unz0stowKpX81YCqV+jLZ
sv17DuZVNNG1liPJdY29U4pIG0dnWlc66iworWioFY6MfT5w91G1h8SLx1VI
xctKFnlLpL5uNOGZk2czK7qYmo0cX8u8uJYvAwzpVSi+eH6BZBz9dswt2PfE
1bHQBMtvnvGLp4xmlHfcvnbTzV1ApfmCzRv7ycEqXN0FVy9cSXvR6RJoOJba
2DU8o4iwglXgWb4ry6fUKTfYLAm1dA3PhpT2ZJa3nDh0wp0uRgkWRI5ioXw4
i6sbX6fSRD3udVcaqUmtqCiBfu0KU+vGmr8KqIp91m3fLlq0r69PpVLhDG8E
AoFAIGwNo6Ojjx8/fvMZYvhJPD694B1lY2vRQt7rPcSduhHEA1NdfSyjtfS5
USH3pdHFXJ4nHkPn8z3pdKG3Ynfxc8vBNJRg51J2S/fIrE9UDSdofS0abOEE
mT0izBPT86GlnWfvtZcUlvB5ciZLiuOhUL50nqeLK//E4ROlLxu8o+u4G5X2
yrcmQlNGDTFPkerYfus/vjvwpRqemPONroUeClxqjtbE21CIomOCTNKwmlJL
16Vzl+h0EZMlg7vG5co5HJmLK+/2jQBT25AkzOKqNJy72zwyueBLWYUQ29tK
1yi6v9DrkYVZp2YXEp53K6Ibnxqbjh487ubOZ3NkUCybAxYiYTJFOnVQVlUv
P9iKRvyp0qiJH6Y1qwpnFKHVZquDizvsH75V4J5pc3Mzn88nY/QEAoFA2Bqc
M8T27t2LR+Xe5Omz6MgpOi0Nox7l1BzLDbWoma9Hg7YMlfFERtvD59Y7N+7s
8tkjEij4Ak8Pj11XrwV2d3VpSnpcA6toKsPt+62Ts4s7YmrZQStDjZZtVpbW
5BNlg4ZkGwf+dqPqRn5HyTPDqVOXJFJfHt9TKvb237E3RBdaYmzbm9TEVBvQ
CpJIrpgEOqyRXg+wogSJWG9BY/Rq4837rXbnCvWETYAVWmPfpCwU5cgS6a2g
GymX49pdAPwmqEqu1rgnoT77ZVdaRv6lsxf9dx3y27H/2PFz2dkF87MzV/Ja
acoqhtp0NbdlZm5xV2wNWIUwGGdsWNGPQGIS9VDCaxZRqrHBz2+/3JXQUGLs
TE/NOHjw5I4dBw/sPXL98vW7uSXxT7vl4TbonvD1r3TsygJ1DsNQRNiEwSjp
6KXsZkdrP3yrmJqaslgsc3Nz77siBAKBQPgowMqztbX166+/np6efsPSsOqo
bh+n3FBmWag1vrzHM9K2gRtTjHLmmNxVhozK3gs5bVdzW+MeWosePSt/XtHd
3YuLPZBYQ1cZ4BhtUTs86/fiod61tSh6n6U17oyuhS/eN/d/cfvlZzdfns5q
m1+wt7a0PH36PP3+s6iiunP3WvcmNdzIa6IpjSjGSo8UC5Kjqxa45+pMinBb
8oteYbCVqTGdSG+cnluwk0SjmwaHmFc0j/FB6gdZQOkZ2sd3xtauexMpdzo3
yPj3Gy+b+yduP2jzjKpXF3a09I6BiTp9j4eS6r66XQVWoS5sn19YPJCICnT4
RVfdRAEVuOQbWQO37VHt4D9uvvzfW9W74+vRSMDi4vT0TFnt4J2Cds/IhoNJ
ddFPO/9xsxLMEieeEq6RRgwpW9/omtLaYSGyN9OhpPrxaVzY+7vQb4wzp9On
n37a24v++ohflEAgEAjvGvysGRoaun///ht6Qqil3VFpRTWDoAZBf/pE2pr6
pnyikcNqbQ+Y3kxXVXGDbX7xTVPz9ozqgcMpjVfud/YuC5uAEjUlvZ4xDV8F
GkNL2+GNIykNTI1xXb8opQ3842rhwfqkaXxXQvOl3HbVw47ZpYfqw/qps3fb
j6Y1pVcPPGuZFITVMTRmPKNgddgLiqPRGPYl1hvaxyShNg6o3JiasakPXnVs
JdgqimsGGRojT2fyjKhp6J3cEUNNtNCvjHyHd7g6I0Nl3B3fdON+x8TswrP6
Ie3DVuWD9sY+xyJH8/MLs3MLmVWDl3M7BKE1EaUdcDeOpyKrECEX6KppIVR8
PZzOP7YGSmganL9V0BH1pDfpeffo5CxeIeyhdTDwfmtwYVtJzZCpc/JUVpso
rIauNoiW5gyssFuwsQNJ9eb2MY9wG+x7R9n6x2bt28Iq4Hegr6+P5LonEAgE
wtaAnzgGg+EPf/jDm8cuzVOP9azqfneVkaszgd7oHZ3zjlpbi8I7DI3hQm5H
1tOGlLuFwcFRWrU+OChUq9ErA3UqJWzBGrVepdaHRyZlP3gWXdryuGkCqnc6
s4muNgrXmYkqRPrWcDSlAWpiq2+NT8vX6SKgHFSUMhgXG6TRB2tDtJrQqNjU
e0UVcU86vWPq4VvUevevCQ8BysZvPJne2NA75RVpY2uNklDzENaib+cObH+w
VeSZB6A3AZfUK8LWNzq7I7YGZ1qgvI6vrjZcYVGoLfppV3bBM+UdzdEjp48f
OXX6+JkzJ04fOfT1wYMnqe3rQ4e+Pn/qXIg+MqO4uq4frRd27m4TQ732FGUQ
oqIQs1tg9fl77TPTsw8LS29du3Xu5Pmvj549ePDUASjwwMkTR0+dPXnm1PHT
x4+eOvP1+ciIhLxntdCLoamMKK2TbsW0DWQVX2c0tA5M+UbVsIKM0ARolP0D
16L418Bms/3iF78gflECgUAgbCWzs7Pw6HkTTwh+YmHVkfyixyXQwNWZd8XV
TVBxTBytQ4u+Uh06C11lin7Wl56WtdvXn82SsFhSFlMCGxM2FvWKd1gS+JTH
lhw7cqr8xUso/+K9JncVSgcq0K0McEbJHnVGbrA1r7o7LjpRKvFlM0W4TEfJ
sMNa/k+xgCu7dO7Sw3LbsYxWuqpa+Poao0jZqo0X7jWPTM3viatlalBmp3ZH
itG3cu23P9gvmlLZ56Y08nSW3bG1IxNzu+PwkDqa3snHWWGDLVytSRZRl1vZ
GnDjFoctZTKlyCpYUia1sdgyNlvq3BhMCYMhEgo8khJSofyrea3uKHnpGkH6
Ir2ZpTbsim98bGz9+uQFGk3IYIgZqHAo0FGm4yyUycE+lOwp9y24Xxj6uMdd
aRS9ng4CW8XVnJapmYX9iQ1MLep5NfTi6dbv+Wq/CVh5TkxMlJeXw2/C+64O
gUAgED4KsP6sqKj45JNP3izXPfoWnssXXtoFWpETZDqa2jg9u+AbbWMvBThT
Y7JUsJLaGFs+EBMZ6+7O5/E8RWJftGQ8bI7sOj7LN/wRiAcuz7PyeXlwabdL
wEuR3uHyWj2kfq+6L0QT5OLKQ2vroDJ9lpfpOIsYbWJq340u8vXe+ajctD+l
mfm6xxWqCm2586Ad2nUwsYGhQcFNVdQS5B960PTW4FwuVf+okwZWoTUeT2uc
ml3cE1+LJlq8NgJu4uos96u7rpy/5OoqoG66tzOP0xobdfsEQm8XF35idHzq
y343ZTUVhvb6ep16lIteFl5bVN1y/NAJnMbWaWnrbVAyl6eArkpGWtatgk7K
Z75Mi4agbPyBD1DsPDQHjBna9bRxxP6Bp7vHt6qtrc3X13d4eNhO/KIEAoFA
2CpmZmbgAfRGEfSUQwgXcDO/FZ7OLK3xSk7r/MIiyjWKtKh12RxRw4Wc9vT0
bBpdKKS0Ilrkca3ldZxrJAlEXmKJD4/nIZf65D82K6LreUErM1Ui3ag0KIs7
o8KjqKSUfmsu2bN6A3HCYEn27jyQV94kDLEtj/0HXeqqNOgfIdVxLKWRoTGy
taZc04Cdmrj4li7/9mS5OcEuGAOYBEtjvJbbCm/4x9cxKC2KvNA6tECnm7JK
Vdwdog93dRNIpFQWeioH17pWIXIkoRWLfVkMUWZu0aHUFpbauGoCqoWmMkY+
7rp17baru0Aq9duMSQipZbl4AoVA4JH/6KVfbBNbaxQst4pAQxCVx+lMZjNd
bYJPM16ixLMftFHgW9bd3X3x4sW3lW2YQCAQCISNwX5Rk8n0+eef4+zW3/np
g784M7d4Mr0RBBtdbdSXoIe1/6uwdxN2XXJ0loxnTXt27Fu27idaYXwDLSoU
+gjQ+oy+NLoo4FagrqTLTYlyMQl0r5xg3CCTJKI2p8wkkyAVsXx1+403XLK7
Oz8yIvZKfhdN9Wo9UFGIxSXQEPOsCxpyNquJpUWDszFPu+xEi34bwCqOpTZw
gkwgC8NLO+Gd/Yl1TFB3KF4MZwQ1iUJsmWVWX8UOLt8Tra+E1ovfzO3zptYD
lZ0+eS72aacbNUzPX+bD5AYZPaLrs4srBHy5o9ezOatAnRSxD9ib8o5aU9y9
3CpAi34VWB1ehhpyNaeVoTExNcYQql3bwCpGRkYyMzOnpqbed0UIBAKB8BHR
39+fnJz8hjPEsBYdnZzfHVfH1Vnclca0ShT+cDCpgYVVB+XGZGoM/snNyZn3
eVy5iBpjpdZe3JRCgMNAvu7y9U970sjVWQXLxuhBJzDVhuOZ7fGJmTS6UCLx
2ZySWdpE3myu/PDBE/FlLXSNWbhMi34VUJ1cgRpyJ7+NpUGDszrKITb/4auO
LQCnYZ2aWfCLroHr6ao0pFUi/+GRlHqwBDzdF82sUBn2p7Ynp+cw6ULQllhk
buLGIcepSOTF43t5yn3THtkEoTXYGF4FGakNZ7Lbw6MSmQzRUsmb84tC4SJv
Ll/hv/NASlk9k7I3p1WAGcRRay1pCjugqwUa+9b9FvsHbhW4Z1pXV/e3v/0N
fhPsxC9KIBAIhHcPftZ0dHTcunUL5xd9Q7/oyOS8NAw5plwCDIVWtHTL8bRX
KZiEeitNVX0quzsuNolaahxrA6RFNzGejo4RCBQeUt+0gnJFdD1n+bBpsBn0
wO2CdpVSx2JK0HTQb6NFBUIFT6Dw9vDNed7MDALVYXJ6wNyU1ZlV6LkcUdbN
1JjooDoK2uwfeJTKVkBdH3yVxqcW5OEoiatLoCHfjKziVLrDKvB8UYbKcDKr
MyY2jeYuEEt8N3XLXo3gg1V4S8ReybmP/eKQT16wfNqGynC7oC3gtorFlIrE
vhtMBVlZvgiv0uUtFyvyn9exg2tES30fPOE5jeqhxJX3sDRGxlK6+21gFdAn
hR8EktOJQCAQCFsDFpB1dXVyufwN113C3+sdnRNSD2u3QOPTehT+cO5uE1Pt
jF0CLWq4fL8nKjLO3Y2PV59fWib+G0QCFYLkI6CGbnMLn+xKaKIWN8dj9BaR
3uKuNIQ8ar9zS0kH1UHFK23aKQqbgstXeMp88p83iEJr+a+0qBkkU64RTRDN
NqAMmSyt8VRG0/w8le7+Ld2FbQy2iq7hWUkocowz1eaSGmQVl+41OcLEqEzy
dHX1xdyO0NA4Ok0odgQWbcqHCUciKwI5ypMnZRb4JzZTIVEW5+1zQ0sktF27
fIMJPRSRtxiVvCl7A6uAHo1A6C0RemSXmSURdXwdWpmLEs9oUD6PmjZcYBlk
UbOIj6Y0zMx92FaB9afFYvnkk09ITicCgUAgbCXj4+MGg+FN1qNfXIraqOme
RDMAdWj570oq3vxaXitdbRI5tCioDsPNgo6AwCA6XSQRe3O5ch7PY0kebCQ5
4DA2W4bijBiihJS7+1PbkMQNtjgSSAZb3FTGsJK20yfOMtkysciHy/Hg8z3x
dzcoFjZqoXMP+KdY6Jmc/9wntpETZHQmoeIEmUpqh6AhTxpG6WojV2feE1c7
uF0Sm79rcEInU8c4tY4AulnYKm7db2NqnFZhpqkNdwo67tzSMOhoJJ3NloJh
fFNvQgF6ksORMxliicSPQRfGxqYczWynq4zOQDlRiNk10BD1pOvsiTMMlhSV
zJJS9uYt3NAVDx9xODIuR4ZC9XmypOzHOxMc4UtY6IJVlNYhUf2yZRz6RLwg
s19MTe8IynT6oVsF8YsSCAQCYSvBT5yXL1/+9Kc/fcOcTlh1lNWNcLVmns4k
DbXU9iBHq/JBG0pNH4IzPVoYGlPQw7bLF66xmTI+z+PIkdP79x2nhMe6fjAk
F7nygwdOXrl8my9Q0Gj82LjUk/e6GKpqnCldEAyqxuyqNCY/6zq87zCHKwcV
cerUJV/f/SA8Npa4IHuOHD59/Pg5DtcD6hObkrs/pYWayvgq/uVFM7oypo4J
mgpla5eFWjpIitHNgXsohbZBNrIKsyzc0tSPgmI0Re00NZpFLNBZhUiLGoML
my+eu8LheLBYEp0u4sZNJZMp3kAugkqE7sytW5q8vIdwE2k0YUR4zLncLhpK
EmtZNkZvjH/WdfTgMTbXA1SrWhWyf/9x6NRgObqeVcCpL1y8ce16IIsp5XPl
MQlZh9PAKqqF1JxntMStzlTVikR1Xc8kiGoBlcW0gTL4D3fGKP41qK+v/+tf
/0rmixIIBAJhK5mbmxscHHzDnE5Yi2a+7GdpzVydyTe6to9yHoaXdrqrDKIQ
JA9EwWaG1hxV3HTi6CkeV8Ggi7JzHuhDot3dBWLxurMEJRJfFxducnKG1VoL
R7KYkiBdxJX8LpSaHmUEQkH6sMPSWlKetu7ZuZfPV4BKyc8vPH3mCosamV09
JotnG4rEPu7u/IiohITEdDpDxGbLIyMTT2W1IT1DecBAPklCLY1UGvOargk0
Q5Va7765DwmqD1d1bBWLOK48vbKPoTZwgoy+0TVDk2ip2cgnXdSSRkjXIS2q
McWWNh07fILHV8AduV9QHBGV6O7G3yDaaMkqMnt6+tzdhQymWBWou/Wgm46L
RW5YNKTO1VkTShv99xzg8RSgRQsLS8+dv7YUx7S2FhUjqxDEx6dkZGSDIYHQ
DdFHnc9uoympJUH1lFWEWbpHkRe0dWCKq6PmcqiNtq4J+5Ir+EME/wIMDw+T
OHoCgUAgbBlOv+jPfvazN/SL4gjiyLIuutrIDkKrdc/Mo3ciHne6Kx1aVIi0
qDWlrNF/536+wAtUx6Oy8tDQONiRSNZN/AjawNWVFx+fWlVlcncTsDmy69fu
qB6205FjzcwLRuKQpzOJQuuSi60+XrtAi/K4HqWlT0F1gBYVi3Dy0teEBzUr
wFtE+dZSUu9mZeYymWLYDwkKvVrQ46asEuGl0oMs0lCHK6+pd0oWhgZ/mWqT
qQPlvyJa9JtwWEXUk27XQANHZ9qbUDtHvRNeRmlRR0SbmaY2Zzxr9ffz5wu8
XVy5pWXPI6OTwCo21KI+oEVjY5MbG1tAOrLZsksXrumK2hkatLSoI3l+kEkS
VptUaPLz2gUql8fzePrkxcWLNyirWLdklCSKIUpOvXv33n0OWoNJqg7Q3C7s
cQ2oEoZQufSR+LQ09CHl2T404xGOQuxpauOLJvQX9OFaxer8ogQCgUAgbA0T
ExMGg+ENZ4hh1aEubHdTGpka4/HUBvw+vOMYjaW0KEtnzX7W6Cn1EYl8XVx5
RpMtMjrR1Y0nWT96GquO9PS7Nls9yEUuz+P0iTMRxc0MjRmPjepLOiUhFo+o
+pT8F3KJD4/vKRH7GKrNly/fpsZ5fdabNSpCEwjFWfce5BeWsdkSOkMccFsd
WNQL4tmZMl0QbHpJjcZ2j8zuiKnhoqWdjA9taK7gh6s6tox5St7oqXywHK3p
SEo9fp/qSpgE1PLxjpSzTxt9PHcKBN7ubryKiuqY+FQ3N75kfW85KEYXF15c
XHJLcxvcOA7X49jhE1El9UwtNW1Dby6uHfaNssnBKvKeIKsQeIrF3jZb3dVr
AUyGWLx+rlHovLCY4sycwvzi5zyunM6QXL98Q/eox51KaYsd5lyduaIFKc+B
sdndcTW8IAtdY8oxonHtD9cq8C8AWXeJQCAQCFsJfvrU1tbK5XJQpPY3zul0
Pa+NrjIxNabzWc34/Rv5rfCYxpKDrzNJwmsyHpllYoVI6MOgi221jdGxya6u
PLFkIw8YHJCZmd3U1MrnK7g8z3279qU8bqJr0OQ9cai5c3hqV2yNT2xjcuZD
IR+FLCkUe9rbu27cCGQyJWIxirNelcKUyggk8uZxpDkPnxU/M3I5aIHyC+cu
64vb0LrzWIjqLLwgc1k9Wt5xcmbhcHIDS2tmak2xz3re5Fp9NDiuz808NGeY
rTVduLdkFXktyIGpxxMhTNKIutRCg6fMF7Qojyt7UW2NS8py27CHAsKSRhOk
pt7taO+iEoF67PLdk15Wxwyy4SmdzQOT+xLqvGKa0+49gDIFfIWHx67e3oGb
t9RMpnQDjysKlONI0gue5z0xi4QeTJbs1IlzEY9asccVzytgB5lwQoDp2YUT
aQ3sIDNDbQotRYsgfOhGAb8Dz58/J+vREwgEAmFrcOYXvXnzJs4v+gbloMmB
57KaWRoTS2sMeICScM4vLF7IbmYi1WEFhcDRGn3iGlPynokFnnwBGig31bbF
xaWC1NxQdaCR9Ny8hz09fXKP3Ryup4+n371nTawgG19nlYSaByfm9ibU7Els
TU65x2KKeXzPHTsOTkxOBdzRMlBWSaw61tAefBC6As+UQsPDilohV8bmeh45
eDymBKQF6A2TwJHTyVRgGaTaaD9/t4mpMYIWDaRa9+F6wLYGbF3Tcwsn0xs5
OhNLY1AXtuP3QZQyUA8FtKgVrMIvrikxu1QiUPD4CpnM96mxOSnlrtuGVoEj
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
/ROzJ332/8mvLtyy3GxruO2qOV89OjVnttsnF3dNO5QgS1pvzXpT9sbKQGhZ
Y3Rv0YtONr1ijb65Q+CiaCbiophW1LZ0UwtS3YYcL917Nd/fc7qDow+5jLey
csnYvo8iObj/qKW5s4vIRR2cvKd5zzh1p8AqPtslWemamm0WlXXk4RP78/Sb
W93hlKyyT5T77oRU3HRzESiuYfXf5eqVWxRz+tadlpYGqbB1Xxy8NPFC0SbR
Chkz8OSKhi7Prci84APULkHhuy2X/IiNDi5KvUFOTs6HH37I9aIcHBwcHMOJ
7u7uN+v1T38gt1XjlKhySFKITEDlk57dT7UYfr7ywJVsL1fBSg/tF7W2djty
+AQ9PXr0lK2NaAhU5gvW4Sbzycqv8NoueHsEDbCJV2Sr23XSKWbxp6VLOy0j
d3Jk5vTdxfuOfSdz9nIyWIy0tXXPzFRQzPv2HTY3d3J1FU9L2XksnLco+Xxe
0lVyNKPPfFN7j/e2HHvR3L19otIzLae8oZMNiot25K71l/0fq9mcFGods9Ls
eJpH5ErzsOBJmoJQ1pV449DMTUumCOvmDVG7o50Fyse2qS7Mi15lfjjJdZb7
xxf2Tt8abr923tezPT7OvjC/53HYAt/PhJNK3UkHElxiQixYbRTIYcJaK5DG
lXO+qrizhHUmzPH8pFkRwmoiF/r/rSt/3WzPjxuzVrGW2AD3v3TlhbKy8PCl
U5JCrfbEyHraEx6cmI283Tg0Y/2CiYxtLbu9FFkK9ptQn7kyYZ118fVFXQWh
SLSrZMOK2V82PFyJ1HWvvUavr7q61m430RGSsyAVimkZeXVtetUiVW3s5co9
l1Q+Hn4Ojt7OTt40Xzh65DRFcub0Rbsn/gt8HRw8C4rLV58on7jlkWWMwi1V
VVzXr5mEw2irjpV8s+mhV0bh/uPfOTuSmS/BVhi4qFyupGDHjp6WpMLO3mP+
3AUp53K23hQomVard9DQ1tUrelsQpAJ02iMtu7i2f3IjFyT57e3t9+/fR59g
7OxwcHBwcIwJEP/E0DN+/Pg3ZeueGYbm8oYuR1Ep6pisso1XCg5AuwwmmMQA
GXdq91zIFLWXvmTA3N7e47vL1yiS69duOdh5Si6THBy866qq7j1u907PAY0h
n+N9bSzRZX51p39GTtD+0oPHLjo4eEjWy+3s3IuL9eePTp48Rw4fBbujDl6B
AUGpZ5UHH5HHeX2MPb06v+25tnGCkx1HweK98rG4wUA7GC66LsDjL23Zq1n1
llVzv7ae+P6uKKeQwK/bc9YyXcr5nd5blpmx2khw0b2xsu2bHbVdCfdPzE5Y
Y3ks2W110DfV2WvuHQu4sMtnyazPK+4sbc9eE+T9KSvbwFjK1nA7UFZh72hj
dOI6q/O7fEMXTAQX1ao3LZr+N5DP7sL1y2Z/0Z67Jth/QkNWiLZsw0L/CW3Z
a1pVa6NXWcSuNs+IdGBs1/mdPqCmd48FbFkxVduZmHtpftSKqYv8J1TeW7Z5
2dSCK8GsIyE5zDpswcStG21Z9WbD8aXXW6MnOlfRoHFJJvdYSpsExbx9BSQV
BqFg+x427DqX6eXm62TgovZ2Htev3aZY7ty+7yju9hRc0sumWdm6l5eWNnfq
Is+XrTtZkq1u6yfDdNXU0RN7sSzuau3xU5fsbF0l/0rW1q4FBUUU8vKlq2Zm
T6Rizoy5qaeyDj8ynKsyuI2asyffSvRC65iklCWp8qra+8nhyAXVW1lZma+v
b1NTE+N6UQ4ODg6O4YJGoykvL39z446eVhTWdjomKhzFIyrWcYpVx0p69DaY
9GT1Ql7rjtN33WTeghsdgYsKJugVchXFkpuTLzOssOPXydErP0+gDa1dPQb9
av8MG07H9HRotMePn7WxcZW56B2AIma1Wu9u/sKFK+R1FDE7OHrNmDZr6+nM
87nCFoVeOkLDdL06FrS3wEZgHQpxc6CCNGCD4qJr/GV/astZrVOHt+at//f/
56entnqd3eG9LOCLHSkegd6f5l1dqC3fxJqid0U5pm6wYz1JD07O3rBocl3u
2uBpn+3b6rlh0aSr+/yXzf4y73Iwa4lN2WCzbsG3B7d5W3/7PuiocOCoWVij
R5whgd+U31oC0hvk/QnIZ2/x+oX+n3Xkrp3r9Ul9Zgir2DTH65PW7LWgx2uC
vrl5eLq79e8zUtwXz/h805Iptw7NDFs4iWkScy/P37R0SqDXJ3WZK1PD7DYu
ntyjjqh5uPLPv/9/5acDWc0WRDsom07C/wqqOzGVEPSiKcJR9DXHH2t1BqER
L64Xt+84dcfNxYts2jtBKhy9cnLyKZaiwseuLn6ieVhBYY4phlKZY2gOgy2n
Z8RRaq8zp89b6jd++JJLr5IS/VmnmzfvWFvrvY46Onr7+cxIP3X/XLYwQevV
H1sTfhcdLLISDrUJ2n6IR04lcdHRwNmooqqqqkJDQ9/gjh0ODg4ODo6XgPSi
CoXi66+/JuvWb2T0oaFZqW6zT9DvCTSPkUddKGcGpkC/imrNtqPXXZw8nQTX
8L6Ojl5ubn4VFWqKpLq6xs3VT1y+Fx0n2Xs8eigXqaJoyVziHs8kTaf4Dx08
YWXYFIqYfXxnV1XXUphbtx84iufryYmPl7vv3vOPrhdKpEKIFqQ05FixTazC
UTBIpQD9yK8SPUu+LhcVjcar7y3Vkh37ik11j1Y2yENAIOVn5p7f7lP9YDmr
jBAsO5WFNylCGuUCY+zKW1f9YAXugw2ez/DKPDMXN6sfLOsqWM9KBTuid47O
urTbt+r+sjbBPNRGVr4RzBPXtQ9XdBcKhpjwqLdIMBNac385Iq+6t5wIZNW9
ZdpiIScIgLdU54PObfeqvLcc77Zmr0HedEi9YH39o5UIgDy35ay7d2y2Tszb
gmmfacs2vcqi/gvX6PWbk8vaaAuxLEVwfxB9saKfVBQ19G4/+p2rs5dIF33I
F1JVZTVF0tDQ6OU1S2o+W1u3u3cfCYYUBOu4Oq1W96xQEMvt6RHmL8eOnTYz
0y/EIxJ//8DKKn3Mjx4pxGmLoImFQLq7+uw/d/dGsTgBkcqhY6EnH1vFkisx
lUW0UlExergooamp6fDhw52dncbOCAcHBwfHGEJdXd3Bgwff3A4xHa103ylq
sY8XjkuDdZhFZW2/IQz6Wt0Tvai6VZe6/5zM0UMm6kUdHDw9PWe0NLdSLK2t
rR7u08kVjrix0/3a1ZtMtP/50oFf1yOqsfbuOWguGv8hHhsYuLi5uZlC5OUW
uLkJrpcoZpmD+/GrmfcrxCV4kXVQ9qIvlFvHKkSzTirrOHlfg1SUkPAzIFv3
GwXDTaJheb2ZpvJwEEJhj2h9JP4UrsliUnm4YDQJYUA4KyJ0xaHCvtD6KFa9
RVeyUbguDRcuEFK04yREVSbZut8kmGmq2KTPSUWEPvUK0cw+mWwSLNiHC2am
9PfDRCNOUULgsnBiuYIBKITEU8E+/0bhfkNUvSJkjscnNw7NZDVbxNy+xOj9
S9bohT9vFjSJu3BVgoP46Ky0a2pmMMlFhLRJw9IFqfAU9eHCmXdMSZoa9W2n
0WimTZsDUSEz+DY2bpcvXWMGovsi60oCFxVdORw+dGKqmQOmPLRtY978pW1t
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
vk3iojdu3BWcwzr7QiqsrV1Wrlz/yrajp50dXUsWC6fhDAbtPRWKbDFR/eo/
5M3SmvSiftY2ruHh0Uy/UXRwpRlhoEooKyubPn0697vEwcHBwTE8oNEnLy/P
zc0NjJQNu150XehmcWegv0zmB5Jw9eotekQHRu7ff+goetihlfRVy8O0Bs9N
LwLlv7WlbcG85aLln2nOjj6I//FjsqmuZx03b961sHAycFHXdesi2GDLriPF
mY7xf+w5q+6vXZn43bghyspSJp5Z87G397h2TbArK80j5FlKFzSrE5rVD223
eHEInXd7SfPRo7bW9qCgZYjQxeCNq7xczfpIxcOHcktr8o8AaXQLCQkbg1wM
/cDt27e5P3oODg4OjuEBjdEVFRWbN2/u6uoa/qRXhWywtHYRvToKqqpHj/Ta
S1ouLy5+7O4xw9HRm07ZL1ywkqyPvoR1EFltbGgKmBXsANYhm+bk4OPhMb2x
Ub8DgfYcgnVIZ1jAZ5YvX8fG0mrsUOEN1d66NZuEc/Su05xE50pKvfZSv7+i
vKzCx3u2o4MnKKWdnce8oKVk8emVXLSlpW3mzAVkV9bJSRCq+nq99o+4aE5O
vrX+7JI/uOiiRavGlDhQJeTm5v7+97/nNp04ODg4OIYHNNbU1tbu3btXo9EM
c+raXu3SZWsw+ru6THN09PL0nPH4cZmQKwPraGpq8fObK1BKl2n29p6zA4Kb
Gl+2dCjZLa+rrRet2XvJXHydHDx9fAI6OvSW/ImsKpXZTjJvZxkIiZ+NtdvC
hSsZ56LGBrVdT2/PimVrbUXbSg6Onu5eM9XqKibu5tWrN9vaAwKC7eyEpXY7
e8+ZM+Y31Deyl0mFgYs2t/p4Bzg4eIgOQL39/AIbG5/iooWFxUjU2clHnPu4
zQ5czMaeVPT09KBD4DadODg4ODiGBzRGK5XKiRMnvkF/9ANMt7Ojc8GCZTa2
rq6uAtWcMXMeOQCVDj739vaKRuk9ZSCrDl5+0+ZWVFS9PJNkKLKmps7dYyb4
hsxFcNwTGLi4vV3PReldkF4fH8GtOWiwrY37/PnLxxrlMEHorXe2dwTPXy76
P/Kzt/fw85/b9rTaExdoL9r26eDk7eMzu7RUzV4mFTrDCfEWdzd/RydIhS/k
bf685a2ttC9FP/dRqyv9/YMwhRFYrp17wOyFvU+Mi45+EP/Mzs7+n//5H64X
5eDg4OAYTnR1dZWVlQ2nJsTAOtrBEu3sPVxd/BwcPAMCgp+11xQUtMQeXFTm
5+zs6+k5s7S0gr2CiwqPqqpqRG9Nvi6yaWA1y5at6+7u6RugpaUVydk7eCJp
OzuPuXMWSqZHOYwF/Qyls3N+4FK0mrv7dMwj/P3mGgihTgqzeHGIra2bm5u/
k7Ovl9es8vJKNgAu2tTU4iLzdZb5uLtNt7FxXb06vK9PJfx2dHQGBULePNyE
pD39/YLIi/0Y4aIE9Aagoz09PcbOCAcHBwfHmACNxffv3x8/fvww23SihDZs
jJw81R6sw8zMEdd9MqDnD4mJW82mOoJ1mJs7r169saurcyAnpkEqFgavtLCU
ubv5T53isHv3Afa0Yg2/oaGbp0y2E5Ke6qA/Ma19cgiHwygggdy968DUyQ72
9p5Tptjv3XNQXGTXe9okzfbJk+fMzR3t7T0mTbaL3BKvfZkFWD0QANON2NjU
KVPs8OLUqQ6nTp2XUpQutqXvFpJ28Jw0yebgweNsLK3RUx2WlJTY29s3NDQw
rhfl4ODg4BgudHd319TUDPMOMRrmKqtqlixZa2Ptunjx6praOoFSaJ8wRqCh
oXF9aISNjcvs2cF06nmAHnby8gpmzZxvY+WyOSKuu7un76hKMVdV1yxfKiS9
cOGqurp6xkdeEwDtoejp6dm5Y/+C+ctBSvs80/+fBOD8+csIEBub0to6oL0l
9Lyntzc1NWPBguWHD5/s9xZJRXdPz67dB4KDV2zftouM3I4dqZB2j8fHxw+z
VQ0ODg4OjjELGtazsrI+/vjjN+sDdODQaLorKiq7up5zckpvory3R62uahW3
s74W2lpb8eJzF98pZnBUJN3ZOdyHtjheCv1co1vzHLNCfeVz0HaHuvXH9PqL
uuTUfvjP8ZkCqG4bGhrS09M7OjqMnR0ODg4OjjGEpqam8+fPG2WHmFb7ZE38
uTS4n+Zq4DG/MnBf/arOgIHHzzFk0Ek7NF6y+E7N9/qtpg//grd0rwowmkFV
WlRUZGFhwdfoOTg4ODiGB9IOsSVLlpAH6uEffXTk2/vF/jd1ZIlJ+9r79ui9
F1BcSlr38qQ5jIiX80yy1DQIcR3IW2OZg2k0moKCgmdPEXJwcHBwcAwFaMwt
Li4ODAw0FhcdIHSDOVX08vAmWtIxj2FoF970z4Fk0+ndd9+trq5mJtwbcHBw
cHCMGhjsLjZfv36dW3Hh4OBAPzD8Jxk5ODg4OMYsaMTJzMz86KOPjHV2iWPk
oq+ZrH4ms95gEs9G+MqtxcaCKeRh0KDeIC8v709/+lNtbS0b4cXh4ODg4BhB
6OnpqaurG+C4gwGrtw+MsL+0T4qSj/I3mA0pzpcEeFNpjQ70a5EhSsK41f5K
kRgFtI2KgDnplStXxqYlAQ4ODg6O4Ydk6/7dd98dtK37UTAKc3xP1NbW5uXl
SUaWnqsm1YqQXiF62TdYvz/73ZHC0E1MoPoG6Jtiv4ReEqEUmxSgL+l9thR9
Az87D8IdaaPLQIpjaqC8VVRUBAYGNjc3Gzs7HBwcHBxjCJ2dnYWFhQO0IZ+f
n3/48OEjR47g98KFC7SyT0/7aUolDao0jtOf7Gk1lzRAU4C+9yVS0e8RURH8
mZ2dXVRUJOVN4ipSolKu+kUr3ZFyQiFx8ejRo6oqweu99KLuaVy6dIlK3TdA
v5hNmXK8QVAx4+PjfX19g4OD3d3dUTkDefFZg1rPfSQFwETp6tWruN67d+/R
o0dzcnJWrVrVN3xGRsa2bduYqOTvm7eXpP66bdTV1TV//nzIxrO5Rd40Go1a
raZc9Svda6ViRFBWUYpFixYNsxc2Dg4ODo4xC+nkrKWlZVvbK/zXUOCwsDBr
a+vIyMiIiAgMzdOnT29sbBzS9dOXZGnLli0pKSlMpIWv9eJLAgQEBJw9e/bZ
+6A6165dw0VsbCztphvjoEZHnXh6eoKn4frKlSsuLi7t7e0QCaLrmObU1dUx
saqzsrJyc3Ol18F57t27J9lUh/hlZmaSOq67uxtcCDHgFXIAdP78eVtbW1R7
SUkJXrx9+/bixYtBCx8+fEjK2FgRFFVeXh5mTP1y29TUBLoIUa+sfOK8vqCg
ADEQfUUGkFs8ValUFKC+vp4+CtzHNV5HScvLyyk25A03cY1fOzu7ixcvIrBc
LqeYEQylo8zjdZQFRUMBqbymzPGQVdQ2X6Pn4ODg4Bge0JhYXV2dnp7+Si82
xD3Cw8N37dol3XR1dcUozETnTevXr09KSgKLIGUjgi1ZsuTo0aMU8vjx46tW
rUJCePro0aMLFy7QfRAY/ImLAwcOrF27lnggyAyiPXXq1MmTgq9G/OLRkSNH
dAY3hWChu3fvXrdu3d69e5lBG4Z4Ll++jCSQSeIJuJ+RkYF0jx07xkTagPhP
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
DtMHfa21tbXo1bmte45hgaABhZT1Pj1SdGh6u3oE2ZNsNKobNafkDTmV7R3d
T8mkqCwdxvwOLyS/S/PmzXvw4AEbSptOIKIffvjhSDw5S7n9+OOPTcoFp+QH
09vb+1e/+hVm96PP4ijZ1Orq6vqv//ovFJOZzG4EzkUHDeoN8vPz//rXv/L9
ohxGBL7inJwcDH/GzgjH2ALG6YqGrqt5jQmXKwL35i85WJRT2UaPapq75+7J
nxold0lRBe3Lj7lYfjmn8XF9R0/vmOgk8UlmZmY2NjYOdSoNDQ0jcdyhPGPo
DAsLYybDRZlh4yio2q9//WsHBwdm7HNVbxxE+Tw9PcFFUUzTIduUsfT09Pff
f5/IlYlkzPQhHWE+efIkd3nDYRSQEGLIc3NzI4eDXC/KMaTA2NXU0ZNZ1rrz
VvXKoyWeW7Ot4xQ2cQrbeKVltNwmTn74YW1zR8+qYyUTt2Q5Javwzy5eYRmb
ZRkr90jNWXa4eOv1ypuFzYjE2EUZEkg2nT7//PPz58+zodSLPnjwAAP3CLJ1
L4Fy+9lnn4WGhjJT4qLMULeFhYVvv/12fHw8MxnN4fcH1fOuXbveeustUxsv
JC7K9aKvC6qoqqqqVatW0SoJB8cwQ1oQTEtLG2qHgxxjFYaTR6Jo3X/c4p2e
7ZiktI4VmKdTkhLXtnEq61iF77ac8DOlt4qaHtd3XM9vjjhX6pWeIzJVpXNS
tiwl2zFRaROvMIvKckvNflxnOP09GgUW5cIMcai3cOPDVyqVpkMnBg6SJdD1
NWvWMBPjosyQnwMHDowbN+7u3bvM9HI4CJCcFBUV/ehHPzK6i4Fnwc/RDxrU
smVlZTNnzuR+lziMAhK5trY2TCc5F+UYWoiS1dmtTbyitoxROCVl2yeoLGPk
smTVyqPFJ+X16iY99cqr1m8XqWzsPiWvW3W02DUl2yJWbpugcExUOCYpbhaS
/bGRR6JeCWm97K9//eu5c+fYUOpFc3NzXVxcaHPOyPrwKbdffvllSEgIMzFS
RCA13ezZs3/xi1+0trbq9OYgRipo7wHw29/+1sbGhpmespfrRb8n0A/cvHlz
JFob5hgFkNboXV1dac1l1H+/KN8oPvliktD1sd2k/3vr9UoQ0Tl78nfcrsqt
atcamoRG7Pzqju4++0K1Ol1+VcfO29WBewvtE5R770lWR0YhFyWAXOXl5dHq
+VCAPnO1Wh0VFTUSDWhQ/r/++mvJ75Kxc9QfdI4J5O1///d/zczMmElmcuAg
pjdnzpxf/vKXEEvT2SYqgaqXuCjfL/pakGamf/jDH7hNJw4jou/ZpTEihLpR
bxvIVCGtqT+u10iEU9fHvhP+LKnr7NWSZoP1HfR6tCyn0nDCbpS2n7RU4e/v
f+fOHTaUtu5ra2t37949crnot99+u2zZMmaqNE9a+vzxj3+8fv16Znq6xJdD
+vCoek+cOPGDH/yAthyY4L4OyuS2bds4Fx0cIJzoEEywZTnGAkjwIIH/93//
Z1SbTkO+gIXYe0VDlpVNXUp125O7HMZAR7d2393aS7mNHRqDZVGtyEXFJlE3
arR6K6N6dgrUt3Yfz6pbf7o041a1qEo1WuaHFPQhdHV1paamDp1bXopTpVJN
njx5JPqjp9xOmjRp8eLFzFS5KDNk7MyZM+PGjbt27Roz4ay+CKQCVavV77zz
zsaNG5mpFkHiovwc/etCsnX/3nvvcb0oh1FAIoev2KRs3eteBbF3fM2PxRA8
4lypZYw85VplRWMXV44aBS0dvRtPl06OzLSJUyzYX3BKXtfUoR/diIJWNWu0
fU4l1bR2771bE7AzzyZegbemRMrTrql7tNKZKKMVZChAgo2P8eDBg6WlpWwo
xwUwXiQxEjUhVCdTp04NDg5mpsqOCKQLXbp06U9+8hMM9LTr0tiZGijImigu
Pv3002+//ZaJxTFNosK56PcEeoPc3NyRpbrnGDWQluq++OIL8gFq1H5yqLoO
nbC8q61v675R0GSfoHRKVn0d8XDHzWrG+N7R4QPVdLdWF3629OuIR7KUbNfk
bBvBXpM8YFf+gfu1NS1603YNbT20Rl/ZpMm4WTVte65wmj5BjpCBe/JvFTQL
C/pPtp+OqiaU1uhlMtmNGzfYUJ5dun///vjx40euTSdzc/P58+cz0+aiEp37
mwg2oiyOEjNZvnz5T3/6UzJFa7JEmnPRQYMqqqSkxNbWFq3MeNVxGAkajeb6
9etkzMGoEBRd3d09XV2azs6uTvyn0eC67z+Nplt81EXXA4mUzsVcz29yTVa5
pWQ7JarsE1T+O3JrW4XX+Tc3zMAwnFnWsuF0qV280jI2yzlZ5ZKisouXizad
clOvqTu79U2SfK3CMVFhESt3EE05IeTOW1U1zaL2Xkf7Tkdt42EwLS0tHWr3
E93d3aSpG9JUhgI0VlpaWgYFBTHT5qJMbE2gurr6Jz/5CXgdM/kMEyiTV65c
GTdu3MWLF5lpZ5tz0UGDKqquri4xMXFMHRvhMB1IBmSCg4OHbnPaQDIibRnd
tm2Pu/v0wMDFc2Yv8vcPnD49yN9f/0+8Dpw9eyGeenrOjIlJenmGdYYzSh2a
3sA9+VaxcsckpSw5xzwma/fdKmagqRxGwcPS1tBTpTZxCqtYhSxFBcJpGSs/
9LC2TaNt6+otqeu8V9ISfqYUdNQ8Wr7iSIm8ou20vH7XnSpxZ6neYqmxC/Hm
QfKMieFf/vKXs2fPsqEhADRYZ2VlIZWR6AOU8m9tbT1nzhxm2hyJ0JfXnT59
mpl8nmmbaENDw89+9jM6IGbiq7eciw4aVFH19fVpaWkdHR3Gzg7HWAQJYUtL
y5o1a0pKSpjxuKhkf+/8+e8iImK8vGbiX1xcWkxMsvQvOjopPj4NpNTFxTci
Iu7YsdPSmy+Klpye779fDf4pSxHMqjsnqWziFUsPF9GpGd5bDT9o/f1SduP1
guYbBU0rjhRbRGd5pGY/KG3Nq+7YdK60okETtLcg5Zq6qlmjqmi/kN2YrW6P
PF86ccujyPNlbHSS0KcAkcbQMNRbuMF4L168aOIc47kgsmFraxsQEMBMntcR
KJMbNmz4h3/4B7Vabcrr3WSQChcTJ07EbIUZqKmx8/UycC46aEheDKysrPga
PYdRQCLX2dl59uxZjH3MeELYL9klS9asWbvpuSE3b04IDFxseOtluaWH1c1d
nluz7RLkYKFOSSpZsrA0vPbkY02Pln9wxoD+aPyG0yUWMfLYS+WZZa1X8prK
6jX3S1qdkhSzd+fXtHTP2pk3OTLTOz37yMPak/J6r/RscgMad7mCjWouKk0P
J02adOnSJTaUNp0w/Vy0aBE+fzbSRh+qEwcHhxkzZrARwkWZQbU4efLkP/7x
j7SP1DSrnfIZHh7+zjvvkA8Uk6XNEjgX/Z7AzDc/P3+kfEocowySch4DX1ZW
FjPq90sp65jQRS9ctCokZKP2aeA+fjdujJo7Z3Fv7yuOc5JpSlzEXqwA53FO
VjgmKZ2SlPaJStDRsvpONqopjSmDuGj0pTLLGMwLFC4pqm23KnfdqXJIVJnH
ZAYfKKxq1gTsyrNLVKCxzGOyzKPl9glKBLOIUcReGuVclAAycP369draWjaU
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
0We9KmB3fuT50nPKhsKaDk3vs602wHYcAc0t6UU///zz8+fPs6HUixYWFk6f
Ph2fPxtpow8Rj8WLF3/xxRdsFHFRZiCKy5Yt+6d/+qehIIoU2/Xr10F3SfE+
OmqPc9Hvic7OzqysrJG+VYNjhIK+1r7+6N/U9/ta8dC2T7W6ykXmF7Y+Uqvt
fam7eT1x3bI53s3dr729o7tXN39fgVW8graJOidn28QpA/fmd3YLuk86X69U
t3luzbZLULokZ9sngvZkCx58RGNBHMMD/UG5Vs3dkuaMW1XLDhV5bs2xjFVY
xSns41UOiZg+yCdtyUq+Wlnb0h18oGBqlJyOoYGL2iUorMBLY+Tgq4sOFcdc
rqhspuGGPX0M7UUH0+iO1vTpqHSuJDMzk3QUQ5dKWVnZmjVrhtrT6FCAiAcI
24QJE9hoYVME2jjKxAV0Kt0btDhKq/MNDQ3/8i//AibPRlHVcS46aNB4mpOT
88EHH5ArcF51HMMMEjl8uUVFRW9EPTIIqyAitxToZVhYpKurn1pdyV6lC6Kn
pY/Ljxw5iYvjmbXS6jy5nreOVdwsbGIGzSctxz8qbRGW7xNVshSVZax87YmS
/htSOYYMOsP5srvFLSCWFrHCUTLhZFmywjZebhWbhdnBuhOPz6nq1U2akrrO
qubuc4qGNSeKXVOFxrKJF9rXJVklS1aZRcnn7smva+tluv7iSvMUcS7TK21D
1d/s1Q5COIcflMP29vb58+cPnWkLaRJ64sSJkeh3icjGihUrPv30UzaKCBWB
BBWs4Kc//eny5cvZmzhYRF0dxTNlypSPPvqIjYptohI4F/2eQAXW1dWNgt0a
HCMR0qblP/3pT2/Qrt1rdQKkt7x65YaZmdPp0xcGngdKo6Gtx3dbrn2C0ll0
Pe+cnG0VK193spiIiqQg6xEXdk9k1VrGKsBFQWysYhW3C5sZX6kfRlBNf5fb
6JystI5XoAnAS4MPFOy7W11c++T8pkrdJoUvruncd69m4cFCu0RQVoVFtNw/
I0/daHAV9Kq2e/a5iY9QlL3Ozs4tW7bk5OSwockwfWJyuXzChAkj0R89kY1V
q1b95S9/YaOOizJDia5evTpu3LhTp06xN1FGiiEqKurtt99+/PixtMA0OsC5
6KDxXL0oB8fwA19ueXl5V1fX94+qurqajEIMlE/q9TONPt4BK5av6+nuEaN5
2RtPviAxXPJVtVlMliwl20HYC6pyAh1NURWKp2D6kEwd6eUQdcixEqvYLFmy
0ipOvvRwESeiwwyq72u5TfP3FcZfrnxY2trV80RUROdKrLAW9546St/1/7P3
HXBRXNv/aoymmJeX+H/JSz7v99KbxiTmpWnyjJrkpVrpHRRFbNi7sSJ2LBQB
QSliFxVsqIgUG0rbXXovyy67sAVYYIGd/5k57GQFpCwMuwvzzWQdZu7cuXPr
95x77rkNjUklcr/bpevO5SUVkuu+m2gHpRr/ZGflxsXdu3cv4c6dB1Cp8KJY
XHknPuH+/UdxsfdysvP0f5oeoFQqr127xufzCSaHVHiLQCAwREKCZGPr1q1j
xowh+iIXJdQftWvXrhdeeAFrQndKivacMHDgwLCwMKLPZRrLRbsJhUKRnJxs
iLMkLPoMpFLp1KlT09LSuh/VkiVLxo0b17muQEUvWTrsF2Rqak/xhGY1aTvP
IJCo5JTXNNuINluKpk314ByJE7T19mZukyWoMfchZ4et/XjmPjxOSTWh4dOS
RS8AS7iq7q+hsEG9PgMLraCinjKrUGFgSqfdXDb5IoWmAwQNYYM89T8cMnmS
hYWFo4mxfWoKF28lJaaamjpYWs6a9IfZYb9goi3/DPoD/BC5XG5sbBwTE0Mw
uXbp0aNHH3zwgSH6uscexs3N7auvviL6HK1CqNRT6n/88cc333yDbka0KyYV
ZSZaXV395ptvzp8/nzB8b6KtgXXg2LFjLBftKjCjioqKZs6cCWSAoHhpNQsW
vQ6xWAziZEFBQTfjqaqqysvL+/bbbydNmiSTyVQdqThxQOTxMoyNbI8dO0NQ
3LTjhoMufSh64na5YLoX5dzel9xoydSHMycws7K6ofXaFXwSOeeua8XTPDl2
AelAXP1jKfNU/eUmfQ9kTueJatefzz1wsySNr3jcuSh5zpfUo9NYWjBpbFQ9
LJDvuFw042jaitM5VzhiNLqgdaf4YFDgSWNjOzs7ZyvLWZxUHt5KTeZZWzvZ
2c01MrI5euQ4od9cFAGfIxAImPY7XV9fz+fzDXHIRrKxffv2L774guijXJRQ
mzpDX/r6668vXryY0NbCE/PHysrq448/hqzrS2aiNFguqjUwo4RC4e7du9Hb
8IQJE4YOHfrcc88NZcGiF/HMM8/87W9/e/bZZ7sTA9bbF1544V//+teAAQM6
XKSJLs3r65Vr1m6dP3+FTFbVIXdtfgyipX5jMqVAJimNKNfSj2dD+XG6kiom
WpmAqtTzufhgfI7U2JtjjVvVH89WNqDzKLbjYhwoI3BLq+cdyzLy5hh5k/a9
u64WJhbK1ayT/Ecgr6eVn3UNTVBemy/mW/hyjb04UOKORzKucSuba4u60LDm
BB49YWRka2s7x9LCkeaiKclcK6vZtrbO06dbHwkIJfSbi6KABvRj7Nix166R
W48xQbRoe9Eff/yx2mDtRXfu3Pn5558TfZeLEuqSevjw4cCBA8+dO0d0/WMx
fFBQ0NNPP52VlUUwo2nXOVgu2k1IpdIzZ86g/JuXl8flcnk8HpcFi15EQkLC
hg0bbt261c14YGhLTEz8/vvv//Of/xQUFLTPLdGP09WrN6dOtYqLI3dDblJ1
todsopyK5pYrlp7KNvUhWaidf5qJN7kKpr6hvZ15MDlVtUqn4AwzH3LRPZDY
fLGCvsWCOWAG1zU2bbtU8MeBFHMoOH9Smz3dKxXON4fn38mVofNQWW0DcFFJ
TUNUeuXasFyzQ2mmhzggPlj58nxul4qqqIVLtPRA/fYZLooAttALetGKioqL
Fy8aooUYko09e/Z88sknRJ/mooT667y8vIYMGZKdnU10hUxiyPT09Keeeiow
MJDou3nF2otqDawkOTk5P//8s1gs1nVyWPRrxMbG9oibwfXr148cORLrc/s+
QuFHIpE5Oi5w3bobfZh0sutAl5Ko+fSLKZ3mmWrhS+6mZOzFSSykLN/aeKbl
6bZL+cbUgnqTQ9zoDLXfe7bv6hUA1YxIrXA5nj3dkwOihF0AuUOBySHOFI/U
DRfy65TN1cb9evGv+1KmeqaCyAAhV5/NuZMjE1U177SlSUGJPsRFaXtRIyMj
5uxFVWr/otu3b0fGa1gDN5INd3f3jz/+mOi7/ApBG45aWFgg0erkJDuaiQIg
l6BVEH06o2i9KHwsileGVaV1Dsi0oqIizMYmFix6F9CtwW95efmPP/6YmJgI
51AVtYsKH+RwOKWlpcSTOz3sH9AOMDDwOLlkKSePaK/fUNuGagAfL6qscziS
buyduvJszuFYvvetYrhYIa6sq2tv50Sc+w2+WzbVgwMsaKon58QDcq1TY1+c
t9JnCKTK84nlc49lQEGANGHkzV14PDulpDpPVCuUKm+lS3NFiqj0yiUns20P
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
AwZlN2iS8fHxTO+Bgj6dDHHcwc7z8uXLwEUN0T9qd4CqThcXl3//+981NTWt
1RqYOd7e3kOHDs3JySH0UsPQ42C5qNbAjAKZDvocQ9wRmDn0h4ajJ6DtRY2M
jFAJo1eZT3PRVWdzp3mSik1zH5JPahx4hWdG3SK3UvJPg8PmcJoVtYl580GR
UiuKnVr5pmnGYAFcyIuz6ER2dV2zS3wWzKB5ZEgqqgKGOc2LYwLygm8alAj8
SdpR+PHWhuWdSywvENWSh7gOzuEKFByQVSgpKFMoWagDUw6mzg/JFMioreTJ
MahpzZotU6dZz5+/0sVlzZIl6xYvWbtkyfoFC1dZmjsaG9sZm9g5zlq4bPmf
S5auX+iyeu7cZfPnrZhLulwg1Z5WVrOcnJYsW/YnPAhPwbF06XqXRattbOeQ
dy1nOc9Zunz5Rvru8mXrXVxWGZvYR9+OJxhoLyr12qXff/+dubVLhu7rHonH
1atXgYviVryGlX6tQRvKDhgwAHdtbq32pBUdFhYWI0eOxO0w+nz+sFxUa2BG
lZSUgICDbsbZrCPUmcDn8x88eKBQKKKjo+vq6tCMPzMzMy0tDYgTsHe4ePv2
bWDy0J0WFxcXFhZCw6yqqoqJiYF6GBcXJ5FIOBxOdna2UCi8d+9ebW0tRAW/
cC4QCEBahLsQJjY2FsJDVNAhJyUlFRQUQGwPHz6EmOEivAXeBW+E98LbIQ13
7tzBV4NACimEdObl5aWkpEAJYlSQADiHK3AdvwJCYlTwLMSQkZHR+ivgjThF
rhNAtoSFhaFyXq/QzEUbVKvP5QBdsfIjeQt9mFMHkEkLXy51Qp5TGjbyMCMv
kgecmPmof32oYBqRWPpxjVgu2ru4wq2AnDf14Rl5AyPluIRmBcTxeaXVDQ3N
uZ9R1uzjTtmo4pZWH4krW3Qii9q2ngsM1vFoRp4Id26l1uA3Na1d57p+vWtt
bV11dY0cegF5tVxeraip3bplN7l3kpm9l5c/3JXJqiBAdbUCblVUSJYuW2dh
OdPYyDbs3CXyrlROPkiFKSoqcXJabGk5y9x8ZtTN2/RdiEGhqE1J4ZqYOMTE
3iUYk92gGxSLxUybcBvuHqBIPCIjI4GLQjdO9I/RE0sKhpXnn39+3759xBOI
KKHeDA6GnnfeeWfWrFlEPzAcZbmo1sCMKisr+/PPPw1RMmUIUKPc3Nysra2d
nJygnxw7dixQx8mTJ0dFRcH19evXAy/95ZdfgDh99913ubm59vb2UP2OHj06
e/bsrKyscePGwa0ff/wR2N3KlSv37t177dq16dOnQ/uFqEpLS42MjECadnd3
X7FiBdBXCAnh4SmgmhDDkSNHTpw4YWdnB0wS4i8vL//111+BQ0IZwdtv3bo1
adIkSM+3335bVFQEUuf58+e9vb0XLlwIzHb8+PEwfEyYMIHL5S5YsODQoUNA
8CAM8GT8CngW+LCrq+uGDRsgTogZ4sevgBi2bNlC9HodoJXz+/fvB7Go9xOA
aNGjqu0WcA9NVX1D09bwfPuAtDnkRHzG7MB0OJyCM2YHpVNHBnkeSJ7PCkp3
gj/xOnml+fpsvA6PU4E1jzkhGTOOpK8Py2+eo2ebIHPQcNl0nVcx91jm7mvF
cdlSmULD2o2ab8wR1jY0Pra+Xl7bGJ8jdY8sWhCaFZdF6sFof1zwwOo1m//c
sK3ZNal6yhJq0ebNu83MHIxN7Ly9j9BTmfhbo1AsXbbewnKGiZHdxQtXaXMa
vCsUlDvNdgEuamE+Mz7urobtDRkJl5duamIfw6ReFH3dQ99FMOnrHoTiKVOm
GKK9JebJjRs3gIv2jjM6fQCW2pgxY37//XeiI3qJWQSD0aBBgwIDA4m+bjiK
XwfDN3BRFOL6Q5XoQQALhQ6H8SXMBoXDhw/HxMSATAdtDfoZaIAg+YKkU01B
qVTCn3CxsrISqp9MJqulACfwJ1zEWxCsqqoKwsODmuGhk4crEDnchfjp8HDe
IirNV7eICm5hVBBYoVBAIbaICq7AK6BYIQydqja/AqPi8XjwyYSOuCgkEsgz
MPneTwB2ICACAEXHKzt37gwKCmoRTNFAyOuJiiqlRNEkV5Ln4iol/OJRUd1Q
RQWQ1akqaxqqqADwK66qxwDVDWSYimply3VPcFQrRVX1EnLtEmst2ktAd6FA
L+krjY3Nfu2xCAoratE3LLnovom8S4fMFzdbNdPrlkguunrz5s07Wr9om6u7
mZk9cNHD/sGt765YucHC0tHIyO565K0Wt2pqquc4L7a0cLSwmPnwYVKLu7l5
hSYm9rExDOpFIdri4mLm9gDFZg6y8LFjx6AvYugtzAH7jaioKOCi/WG1hYra
2RNO1q9f/8orr8DYQctH7QBzCbrTp556CoYYQs9MsHoWLBfVGlgrsrOzv//+
e7FYTLBZp8bVq1fR4rr/ZMipU6cmTpxI6IiLAkNOTEzUiXKeNrO3tbUlJ1fl
cnNzc8gNqAAHDhyIjo6Guzk52Xm5ObnZJFWuqZLlZGVkppP9qrCsNDszvbS4
CM7zcrILC/LKBWWNyrrC/LyCvJz8XLIKlZWW5OZkwbmqsY9PURkMcD5IWr/j
ckFAbBnQTvXlv9zd8yX1Tc1TjX89l1Za7RFV7HI8a3N44e1MSaPaLRR0pH/+
uW3WLJfQ0DOhx84cO3Y6JPTUsdDTIcdOzZ+/wtIS+KTj8mV/wpVjx07hcTz0
zJGjoY6zFlpbzTI3m7lp80549lhI81049/E7am8/19pqNjy7Y/u+48fPhoTA
dSqG0DP7D3ibmNjGxtwhGNOLQluwtraOj2dE9Uq/hc/ne3l5GeKEJvYb0D8A
F+0PHhHxe2/evDlgwADUWnRSyYkM1tHR8a233oJK1YcNR1ku2k1AVSkrK+vD
0ooWmDNnTlhYGBpga06r0bNsmrNpmivTu3pL80/N8C1CMvpqvAXVQCe6cUyD
SCQCgQgt4Xut/dITqQTVgWzevBkSkJCQsG3btoCAAFdX1+TkZKCjN27cWLFi
JZfL27x5S2FR0Y2bN7dudfX19RUIhWvXrcvIzNy3b3/07dsLXVwePny4b98+
Xlra4sVL0tLSXV23RUff3rvXPSU1de68eVnZ2Y3oxlTDv71K7Wud6U3GWSAw
m3NFiqWnsqd6php5cR2O8LyjSzLLHlMACmX1jept6OGR5OKq3ZGFNv48Yy/O
pIMpVn5pYYnlDWrmCsW6adMOY2PbGQ5z7e3m2tk629nNsbWD37nW1k7U6iRy
Rby9/Tx7uGXrbG9HHra2c6ysqMXyVrNsrGc7wF07Z+pZ8q6NDdydbQOPk7/k
XfpB4Kh2dk7GpF6UQS4K/PDcuXNFRUUEM00S48zMzLSyskLtq2EN3NhvACsD
LgoDKGFo6e8S0AFLZWXlyy+/vGnTJqIrs+04jML4MnLkSHQA1VcNR1kuqjVo
X/cffvhhf5DsOo/c3NwOTYA6f6tHImHu1diCjh49+uWXX7b/CHOAqigQCHTi
zIH+/PDw8KCgIGChUVFRy5YtQwMnIKJw0dvbG85DQoK5XC6MPkBQIyMjgakC
IyUoH4PHjh3D8/3793M4HE9PTzg/efIk/HnmzBmC0rtCQyPazF40YlQLCCyY
g9orgmrH5aJf3FMs/Xh2/hkWvrzpnqnWh9P2RhZzSqoaKS/2MkUDnNQpmxLy
ZdsiCi19eCbeXONDHNNDnL3XigsrUGojpUaC0p2uXbt1zerNFRUSoVBULhTB
r1AgEosqN2zYbmY2w8TE/sAB38pKqVBQXl4uEgjKRSJxcUnp4sVrLCzJhfZn
Tp+XSKQCgRDuCoXk3aysHCcnF1Knau545coNuFtWRt4tEwjhLffvPzI2sYuN
ZYSLImpra/39/ZmeHlIoFBkZGYZoRohpjouLAy7K5/OJvjv7rFIviv/555/H
jRtHqM3pOx8D5gzUpSFDhnh5eRF9lI7SXBRYN8tFtYBSqQTh1xB7gx4HXXOM
jIxCQkKIvm5rrYnq6mrsUXsZtF70u+++Q71oL3fpWMSkPpPHA5EfToBk7ty5
c/v27Tdv3ty7d29qaqqr6zZIFfSicH716lXgokAyi4uL161bFx0dDWGAo7q5
uUGYbdu2weM7duyA7wJGevny5YMHD0KYRYsWZWZmwsilhz5U+xugxglk9Sce
CGcHZU7zIH0g2PqTHkSNgW16cXZeya9VNtfAAzeL/9ifMtUj1cqPN92LuzA0
61ZGpbhKSTy+xAzKes3aLRs3bG/1JmLLll1mpg7GpvaHDh1pcbO2tm758g0W
ljOnG9mEh19tcVdULpo928WKWkd/586DFnd56ZkmpvYMcVGVejnhvHnzEhIS
mHgFHSc0+Y8//tgQV85iv3Hnzp133nkHF132VS6KX7p79+4XXngBNcBafClG
cvbs2YEDB+rtnibdBH7jyZMnWb1oV4EZlZub+8svv/SflYCdQWf0on0G2CdE
RETY29sTurMXTUlJwe1XehmYgPz8fBh8gV4CIYeREbpcENBCQ0OBoEL+4KKq
goICuCUUCuEuesoCSf/48eNAMqEXwjBwRSaTQf2B87y8PKlUGhsbe+vWrc2b
N5eWlkJgQ9xipq+iWFx37J5gxtH0qZ6pln4800M8x6MZCfkyYKqV1Q0PcmU5
5bXnE0XOIRnmPrzDsfwcscIvln/oNh+NK2jA+Zo1WzZv3tX6Fdu2uZuZOZiY
2AX4H2t9d+XKjZakXtQmstXaparqaqc5iywtgIvOeJjQcu1STl6+qalDDDNz
9Aio0lCxkSUyB1wcaojNAYnHvXv3gIuiJUPfI1eE+qOguwMOCZI10Q39DOpC
ly5d+vrrr0PHiPP+PZhUnYPloloDM0oikZw5c4ZV1xAaNWfOnDnnz58ntG13
3Z9v1TT1ZBr4lrS0NGBKvfC6Nt8OldDZ2RnGPkIXXTpz5nDAsY9TAKoP57iL
DQvdQkVaeJKr5k8+EJ57JOKVVh+OLbX05a06m8uX1t/OrFwXlgcnc0My/jyf
yympKpPVp/Fr7mTLVpzJ+Xlviuct9Dz2V4RQY9evd507d/n169GRcFy7RR6R
UXAsWbzW0mIm8MkNG9yuR5LXr0dGR0ZGX79++1JEpLPzUmsrJ3OzmXv3et6g
HsS7N67fPns2fMaMebh2ycsr4MaNmGvUXfL3RnRg0AljE1uGuChWXRCpvv/+
++vXrzPxCjrOpKSk0aNHG6KARpO0d999F6RUoi9yURyDoHT+9a9/LVmyhOje
RCE91//VV1/98ccfBMVODavQ2wfLRbWGSu1VY8+ePejhjQXi6tWrWvgXQu++
dI8EDa2roh9t5k3/iZF0PgYtgClMT0+HRsToi9p5O1Q/T09PHfoX1UwPlgKi
xY6rTc2Lj/7a45UOQ4dsYYgLf+qhD/9+DmxTeyKLftmXvCYsNypDkl6mkNQ0
nEsUTzmYuuxkjlCuXHQie/JBjtkhrvuNYq+oUtNDPLNDPGNPrvetUuJx51tQ
0Js27TAysjUzJd03kRstNR+2QEStqW3lSY/3xvZwmBjbUQd5YqXe6NPMzJ6+
iCfwrBW5pskJ7pqaOmg8aGdiYkvpWpn16QT1Fl3AMRE5DeA5jx49MkRTKMz2
hw8fvvPOO3l5eUSf46IqtRMnExOTzz//nOi6mWhrYBZBP//888/v3LmT6FtW
cCwX1RpYMQoLC2fMmNF/do7oDA4dOnT//n2iK92LZsgW7vI6mauaMUBNRsuc
1rd6HBh5eHi4ra0toaM6oFAoTp8+zfTm162B78rIyAgLC7tw4UJ8fDyyTc27
LQK3uN46tXAlPz+/tcvBpKSklJQUBj6CRZeBXgs8okqMvbmmh8g9WF0vFW6/
UmjizTP24q48myuQKReGZpn7kBu5TvNKneZJbrll40/uHOrVios2kevot5uZ
zsD177a2TvRhYzMbN/qkrs+xgSsaB96ytia3pG9xCzcAtSEX4M+2tYF4NG7Z
kIv0zUwdYpnZd4nWi06cOPHGjRtMvIKOMycnx9nZ2RDX0dP2rsBF++SW68is
fH19hw4dCh0a0UMfSO+d2lXfUPoPlot2E0ADkpOT++S6Nq2xZcuWmzdvEu22
Pk3PSDSr37Rp07hx4z766KP//Oc/NjY2OMPVfjx0bPgLjOi3336bPHny3r17
P/3005UrV3I4HM0wDAGGA4FAwFz8TwJ+VGVlpampKTpD7k2fTth77Nmzx8fH
B4ioq6srGirw+XxamVlUVIQ75OJ19MRLUNI9JJugRI+qqirUI+H6r+Dg4MjI
SMhPWl+alpbmSaFPDlsGB9wy6WBUMbBQYJhAOI28OXBY+/OMvTkrzgAXrXcJ
zQaaCresqcPSD37TILxnG3pR0qeTqYk9kEY1vWT2AGrKnL0o7essNTUVdRRM
AN8CjcjNzc0Qd1rBbIehE7goTqL1pUZN74o1aNCgEydOED268h2j2rBhw8sv
vwzdbJ9xIcJyUa2B9S0jI+Ozzz7rfZWUPuPBgwednC+miWhAQMCwYcNA1nvm
mWc+/PDDV199dQAFc3PzDpdBIV2Bgvj555/hkeHDh1+8eBEaqZWVFUa4ceNG
NK1hooDojYe++OKL9tPJBPB1QOdyc3NBLOrlBOC3e3l5xcXFoW72zJkzXC7X
19fX398/MzMTfTrBOXB1qBWHKUBSYQwKDQ2FYFBPoOi3bdsGMbi7uwOthaci
IiLWrl0L0gRIFvii0tJSECsCAwMhHraV6RyaXBR5JnJO+G3NReEuHv2Ki0JF
XbZsGXOuLfAt0DeGh4cb4r5LmCdA14GLQtdN9CEuioMasKn33nvP0dGR6GkX
TPTs/8SJEydMmED0FcNRlot2E5CBYrG4z7Sj7oCuOUAC0XiynekDlYaj+AMH
DgBpfPPNN4ODg6uqqmpra6EqPnr0yNTUFK7/97//lcvl7diO0hulQeCnn376
n//858GDB9PT03/55ZehQ4fCxffff7+6uppR+RHSoENf9yAKffPNN73v6wO7
RMjt5cuXAyO1tbXlcDibNm0C0njo0CGgmkBNoXDv3LkDZQphjh8/7uHhAXQ0
JyfnypUrINoDWd2/fz8MRj4+PikpKfX19cBOofJcv34dCt3NzQ1fdOvWrcWL
F8Ozd+/eRcrNQodALuqhwUXx6AwXbT1H3ye5KFR4aBe4nJCJbgeTDc3thx9+
MMT96On0v/322+g6uM+MofROSTDuwKCgabbUU8DRUCQSDR8+fN26dUSf8DjK
clGtQetFP/nkE1YvqomioiKpVEp0lCFoyw0MatCgQSNGjEDPHhKJ5H//+x89
k7t69Wogky4uLsSTmS2STGiMY8eOhcCDBw82MjLau3fvG2+8gcpVJMYMtVZM
1bFjx8aPH0/oqA5AGkpLS3ufDOO3A5lMTk6Gk2vXrgFd3LlzZ1RU1P379+Pi
4nJzcxMTE7dv387lcjdv3gxX4uPjHzx4AMHgd9++fZGRkcBaQQABUSIpKQlK
Pz8/H8oLnT7BgwS1mh77WwhpaWlJsA1N10Auuu9GkZE3OUffSS5q458G4Q9G
UTMmGrH1MS6KgEoL0hbanDBXXeEtBrrrHz2LDVy0L+20jl0iCN1M7yCP0cbE
xMAABx0vYfiGo5j+U6dOARdFx0RsP98lKBSKlJQUQ5wl6XHQNcfMzCw0NJTo
qHVgazIxMYHWFBsbS6g51WuvvYa8FPH1118PGTKkffNvfNHFixd/+OGHrKws
6J+zs7OFQuGBAwcmTpyIpJehik1rJlNTU5mIvzNvB+r+66+/YgJ6s0uneThw
UTiHvjcwMBDI5549e4BnZmZmnj9//uDBgwEBATKZ7O7duyAgwHUgqGfOnPH3
9/fy8oJOOzg4WC6XFxcXb9q0affu3XACBBXaFLQsCIMvunz5MsQZEhLi7u4O
JUuw3ZROgVw08K7gjwOpZj4kBbXyS7Py41mTHu+RiyoXHs8iuahfmqVfGjl9
70euo/9jf0rIPQEdAwK46IZNO0xMSS5KbffJ9DHL2maOCcN6UajS0LNht8bc
2iUQ5D/44AND9HVP71oIXBRN+vsAF8VPyMvLGzp0KG4kxyg/RO0KyP7Dhg3r
Az5aaS46cuRIlot2CZhRhYWFDg4OnVED9h8AKepwi2F6telLL7302WefEeqW
BQ++//77VVVVQDmA0yYlJZ09exbIalBQENHRpD9IBHV1dWvWrMGp+dGjR9+/
fx9n53v8G2lg8799+zbq7nRiLwot98aNG7gUqJfR5vdCc6Ad7wNLp0tNIpHQ
3s+wyWgqq6Hs2vGBAxFiPIYu/hs6VJR3UPitrmuKSK5YfDLLyItn7M21JlfK
k7svrThNclGX0EzTQxxrf5KjwkUTb86SE9nhKWJ5baPqMbUoFGjDpi07zM1m
2NnNtbUlN5pn9qB2ujczc2B0D1BoF9CVMe13GvWihjjuYLaDuApcFP1jGDSP
ItRmnAAYzkxNTQkmeyp6rS6+YvLkyV9++SW6yDPEyoBguajWoBVi7u7uhmix
wxxWr16NswbtdC94i8vlDhw40MnJibbHhq711Vdf/f333//9739bWFiUlpaC
7A9hVq1aRbTbuvHxXbt2AQuF8E899RScvPLKK8DQGLUUxQ+5e/fujh07CB1x
UaD0W7ZsQdVx71dCegEa3UPS15903mYkre/S5y38RPWZpaOGCzr7q+oar/Mq
1pzNNT1E+ncy8W726bT4eLaZD0lB4eKac7k30iuBu7YZFTTqtWu2Tv7DzMTY
zsjIVsO/KDOHka2psf2kP8yjoxlRWmKE0CTHjh3L3OQpbW85ceJEQxx9aJ9U
wEWTkpIIw+eiWMpLliz517/+1f4Chx6BphcaqGyvv/76okWLCEM2HGW5aDch
kUgg99h9lzQREhLSYfeCt3g8HvDG2bNn0yIeNKuffvpp1qxZyKwAcXFxEAb4
LdGRySicfP/998BCBw8eDEQU6ei5c+faebD7oJ2r3Llzh6FXdPh26PrWrl2L
LqN7uf1q1nyV2lm9SsObPf5q1gQMhldoB/iEul9FtAhAnxi04N/HQJaXuijq
GprismSbLuZP9Ux1OZEtkNU7BWUae3O3hhfcyZbWq3eob2zChx4TN6CoIyIi
jxwJCQ46GRx0IijoeIsjMDCU+iWP1ndbBe44WHDwiaNHQgvyiwjG2gtEKxQK
mR4XQNCOiIgwRAsxbNS5ubnARfvABus4vly6dAlGnAcPHhAMT99oCuP4oocP
H8Krz549y/SrmQPLRbUG3Zp+/fXX/rP9emcA9I/L5RId+RclKOY5fPjwUaNG
Ea10XwQ1aQvnAQEB0MqA3xLttjJ8/H//+x8Q1yFDhgwaNAgZaYca2m4Ck3Ti
xIlffvmF0FEdqK+vj42N7WVDEXjRli1bdu3a5ebmhlsttw7Q4srFixdxZXE3
kZ6ejqvb2Banc6jIxtV83tCkisuRHYnjAxf1jyt7kF/V9JdmW9Viar6vghYP
p02bdvv2bYJJn07FxcXbtm0zxIEb8yQ/Px+4KPAowpC5KErcfD7/hRde2LNn
D9Hrykkcg7y9vYcOHQqEhDDMzGTXLnUTIJMWFhYaqCTCEBYtWhQeHk501CIw
09ALKPrGB06F7RraMpyj9PfFF188//zz7exZrFI7l4a7QFkHaGD06NFMe3NC
QIJx95NeBmYIELOffvoJF7P3WvuF7mL16tWQvSBQLF26NDU1Fcgw5D+IIQKB
AIWRlJQUENOgcEE8gaT6+vpCsMrKSn9/fxim0YsCEFSUF+CpW7duwZ8cDge4
fUZGBjwCf165ckVF+Y+9fv36yZMn4S2rVq1C+2G2s9ITqB5fjqTS+ENTDQrS
ZYtmAn9iq8fde5XKBmzIuIeskgJUMDiHX3gcg8EjuL0vhqRCNeAjdIQdgtHF
jJCgGzdudGg23823APGYO3du7zsW7j6a1PubABdFRaIh0idCbSYKv//9739R
HaETb584mFpYWIwcORKbiWHVB4LVi3YD9ErAjz76iPXppAmgDa33cGyNJrW7
4+eee+69995Dga4FlixZApRy+fLlREcLl+iu7Pjx4+PHjx8xYsSMGTOEQiFe
ZE5YwJgDAgJw02Gd1AHo/UAq72WfTvC6TZs24Rre8+fPA73cs2cPsMpdu3ad
OXNm//79MEQePHjQz8/vyJEjp0+fhl8omoSEBAgGRPTQoUNXr16Fko2Li0NP
jHfv3gVOGxER4eTkBOP4vn37IAw8ArQTKChEGBoaCpEAO4U4L126RLAtTs9A
6Uhpu9/HWCg2E09PzwkTJtAe24CqwQgObYdopUqiSxa4pYuLC4xNUG2gr2hh
Tqz5J/YAW7duxf3adKUfoJcTuru7o+dM5mppVVXVw4cPDVETgoVVXFz81ltv
3bt3jzDwmWXoCV9++WX0NK6TTgmFMuhygdsz4WC/F8By0W4CSlwgEBioTNez
oGuOsbHxsWPHiE50LxgAqAWuM4KT/Px8qIeVlZXx8fFTpkyB6z///DPutvOk
mklfz8vLAxEbWA3QGyBFHA4nJSUlKSkJ9QaM9hJAzJjb768d0AvoxowZ08tm
V1BMrq6ueA7k08fHB4glUEQvLy9ICfBG6FXCwsKAmgIDOU0BasXZs2e9vb0J
yh0NUE24hecXLlyAIQmIKBSWh4cHXNy9e/e8efMgHqCjcBeekslkILBADJ0x
AmHR+0Du2dzKHm9qWFIgdHz77bcoRxCUCDN27Fho9fhncnIy1AG6TKFBgXgC
jXrhwoVQ9FlZWegpAkZ8EFVoYw+oMHfu3IH6gJ3J+vXrQcYhdM1FIVWrVq1i
blUOxgnxjx49Gn1WGNbAjaktLS0FLoqW9obIRWknKjBORUVFETr9Cnw1j8cb
NGhQh25n9BAsF9UaWA+zs7NBtO+MGrD/oLCwEIlZ+xlCL3IhqC3IQa6EFv3s
s8+CZPfaa6/hJLuDgwPuZv6kqPBxGKRsbW1fffXVp59+Glri0KFDn3vuucEU
4GTEiBHIjZkoIEwAsCMjIyOGXtEhQCCCkbqXNySqr6+fM2fOrVu3gFps2bKl
qKho69atQCeAOgJbSExMnDx5MlSDkydPnjhxArproBk4Nb9z504YfYCyguAA
zAHO4QrQUbgFfBWa0vbt2yFX4Rfo6JUrV65fvw539+/fDyMXRAtFCREC+yXY
FqefaEtsxIEGCnT16tU7duyA8oVK6+bmtmLFCpRHDhw4ALLMBgoQuLi42NHR
Ec6XLVtmYWEBgdeuXQvSZUlJycyZMyESaG4gb0IFgy4CKt7KlSv37t1LUPt0
65aLIiDBQBSZdrMGb6moqDDEVoDdZllZGfT2cXFxhK7LSwvg+AX5P3z48D//
/JPQg0/ABMBgCgOfwe1mhYmHIYDlol0FbaMeGRmpk/0f9Q10zbG3t4caRXS6
bWIwGGX27dv3+++/f/zxx2PGjFm6dCl6iibarZNwCzjYhAkTBnQEhhbU04Zb
wJp6NubOvx2GPBsbm7S0NKJ3Ox9gicA8IyIicNYV5DJfX9+bN29CGmpqarD4
oFeBygDdI9AGIMzQXoC1AimFAQjCbNy4Ee4CoSUoJQlIMdCUUOcJv/BdED8w
T3gKulYoaLgCWc3n83FViCFC9dg//QXY7kBmCQkJAQEEGnt+fj78iVseQJUw
NjbGAWj27NlRUVFwETkqVINp06ZBjVq0aBGcA+FEtTmIJ0FBQfAgVh4QUoCy
wsnmzZt1y0Vpn04//fQTmsEzpxeFr4be0nB93QuFwrfeeove6ETXieoCVGon
hDBgffvtt4TebAqP2QiNCEh+dXW1ARmOanJRQzSB1iEwo0Cyg64VewMWiJiY
mC75uqQdOrVG+xPr9IZruBM9CIMDW2HQoEHPPPMMnIwaNQp7j56t4RhbUlIS
brTRy8C3A6kDsicQCAjdtd8239t+YqCrDAwM7EzIPgacwya/uN98NDbVDRs2
gOQCDfbs2bNowgGCBnBOkCymTp3q6uoKTHLBggXh4eGrV68GtglPVVVVob3o
ypUr7969C9cTEhJoWzioQkePHoWLa9asAREY8hRiQKlQt9wGUgJyUzt7N/QI
YMjGJX6MvoUJYHsXiUTARVGuNCwuiql1d3cfNmwYCNGE3mggcTCFBgJCipmZ
GWE4hqMsF9UaKrVjycWLF7c/j9zfsGfPHi02v1OpvVPin2iM3f4jGMDS0hKo
Jio/8YT+UxNwkQmLSowtMjJy/vz5hI583cOI7O/vz/Tm162BnZ6mT1HaL6im
fIELnFVqd6N4C6/U1dXhgmhCYylKC9ejGI9mGM2lagYKkoeqDGnw7SZoveiF
CxeKi4uXLVu2fPlykJ5CQkJ8fHyAXtrZ2UFlAM4Jkix0qkAv0Vki0BVbW1uo
JCtWrEhOTl63bh2wWYKaibh16xY8u2jRIhi5CgsLZ86cSVBrl/TBXhRGhHHj
xkG3QDCpFwUiCr0fuiYwrNEHU1tRUQFcFDXbBsRFMfPRpefFixcJvSGiCNrb
5NChQ728vAgDyVuWi3YTQAPi4uKYln8NC3v37kUTIO1aKM032g9GW4q++eab
wDO//PLLGTNmDBo0iCafeA7ioaOj4/PPPw/nMBQSzMiJUqm0TT8ATANzSSKR
wLczvWi3O2idKvpK+2X9JHWrfn5m56AiVA3ApqlzPRrCGAUONKtWrcJV89On
T8cp9QMHDmzbtk2pVEIjPXXq1JUrV2xsbEpLS2/fvg0Bbty44ebm9vPPP8Pj
s2fPBi4aHR1tb29/6dIlCAa0Fviqs7PznTt3XF1df/vtNyCxa9euheuErsdf
6J1ycnLonXB7HPSsnLe3tyGOPnTHBVwULRkMgi8RaiUJlOz//d//ubi4EBop
159OCZOE22cbivtWlotqjSb1jrpfffUVu3ZJEzCOdGmOHhcydJVgYNW9fv06
Ms/IyMgHDx7gdkuoF8V9lyZMmADBxo8fD+c//vijFi/qTDICAwPHjBlD6G7t
Ulpamt6qR9qZvu8qCzV84Py8sjZvWYMkmjpv6g+MFEsTyCQwNDiHE3TQBP0n
nBBqWuXh4YGehAFAO0GqjY+PT0pKghqekJCArvNAzgUGiwQGSGx4eDg8mJWV
Bd1OSkoKl8stLi4mdFd/8L3AVZycnO7fv08w6eseMiQkJMRwuSiI8MBFQeIg
DIeL0p48P/nkE3pWSNeJagP0nqSvv/465LP+zyWxXLSbgNoIHYKel3LvgK45
Dg4OnV+7pJl1WnBRkEyBef7tb3+rrq52dnYGwonbLdHz8k8//TQMc25ubvDn
sGHDYCgkGBgdIEKdjAj4ISAKjR07NjExkTAE+bfPoIXFp0rjt0NUp0yQxTxf
z/dVR9X42JN9qw/u6pjSjrSoeV0/hypMVV1dXVBQUB5j2/JinOnp6VOmTNFb
IbQd0IwduChaMhgEF8VE+vv7DxkyJDs7m9DjZNNWUl999dUff/xBUIKbPlcS
lotqDdrX/YgRI1hf95ooKCjojE8nGllZWdevX+9Sj4qjFXT4n376KZDMyZMn
Q3F8+OGHtDoUgechISFpaWl4BZ0Z9mAHolu9qEq95xTwbUNUj/QloP1nk+Rm
deKXNcnjq5P/+4TjO/iV3/u3LO4FWcxTNRm2TfW4I4Pqr5j6XE+CahnaNhgt
gTVPcOik/yQ0DIbxCm2KjMooOhjaHtNbKenK2TgNfDs0xlOnThUWFhJM9gm1
tbX5+fmGKH6q1Isu33zzTX3wwdUZ0CM+DCuddKCtW2CCS0tLhw0btmPHDkK/
1zGxXLSbADoE8pGe18neAV1zOunrHu9evHgRPYt+9913AoGgkxPo+Oy9e/ee
eeYZePbQoUMZGRk4O49ApSheQc+fwFThfOrUqQQDykPg3jq0FxWJRBMnTmTO
sTaLdqBRXcmT2rLj0ugBsthnZTFDnnRI4Tfub7K4l2TxL0tvD5Q9GCUpuSyp
IqqqFUql8gmRGyQ6tMTQLkJ9Br2c0N7e/u7duwSTa5cePXoE3Zoh+nRSqXen
Ai56+fJlQu95HcpKMNxDhjs4OBD6zetoYK4C24cBUc99Z7FcVGtgRoFYOn36
dPRpzGYdIjMzszMGtFj3xowZA81k6NCh8Hvw4EGic40Fw4Csh96ccnJy4Fl6
gp5eR4/Ll1577TXoQ1xcXOD8//7v/3C9eQvbAK3LTrfr6BH19fVAy9GZA4ve
gWY5Q22srlYIy8v5Qrk4N1Ae96w8frgs/qUnHnEvyeNeBDoqjfu7PO5lWexQ
SewL5WkbRWKJQFheWiYQV0gUitrH5qN18Ik9CaFQCEMhLq8j1GpSPNf0kNBC
L0orSwlq6EfSJRaLsflr3qXD0+pW3RryQQIKCgqAkTL6FpBcoKc1xHGHtmQA
LoqOEfSWIxEa3kTnzJnzzjvvAIXWWzPR1sCUb9iwYfjw4eXl5XprOMpyUa2h
UnulCAgIMESLHeYArC88PJzoSCGAdz/99FO06gTeuHHjRkJdJ3E0oZ3/tBnD
2LFjgV6OGjUKzseNG9eOo/uYmJgbN27geQtb1hZjYldBb8bn4+ND6GiOHljo
8uXL0RSWrYQMQzN/VdUKhaBcxC8rF4srFYoaqAx1wjPSmMFyknC+2OYhxZP4
F4GOykkuCucvy+8Mr4oeoMia1dBQRzLbGmC24tIyoUhUWadheqE5i9+rH60t
sHVcvXrV3t5+69atMJSvWbOmw9XlbXpd4HK5S5YsgQihlwBmqxmmRcvVrU0p
vSrnu+++Y84SEj85JSUFZHnD3QMUaBJwUXSLpM9clN6eEoYqXGqnn3SuTdCG
oxMnTsSVvPqZ1ZiqM2fOABdlCVWXgBkFQrqfnx9mHQtEWFgYj8cjOqpL2JxH
jx6Nuk3a55KmrqMFGjWgVCrv378fGxubmZkJfdqDBw/i4+PvtMLdu3fj4uL4
fD4Is/AnhC8sLKT5Ld0lYvxaVH58RLf7LsFgtGPHDqaN0/orNKbgNfxQSaTy
Er4AGGNdXZ2qieztJVKZQKQQ5hyRxQ6Vxb0si/t7J44XpfF/l8b9XRozsDr5
v6KCiJKy8nKRWC6vUlGyWHW1oqysHLiuXF6jmSKDKGXaJtDS0jIjI4OgmvzS
pUtv375dXV1N27SADAVtWSAQQF967969hIQEDFlcXAyc8/r167gCCHjXwoUL
CWonJlSblJWVXbt2DeOBJlxUVCQSiZAqgGwYEREBAQgdtQgVtTsk0ybcIISC
lK2f1KJ9qNSehIGL6oMPrnaAgxH0roblrlMTOOkA7Wv48OHr168n9NLAgOai
I0aMYLlol4BVND8/39TUlJ2j10RQUFBnbBfx7meffUZz0c2bNxPqZvLo0aN5
8+YZGRlB88fNAXsW9FRFYGAgVP7PP/8cXYt0VeDFFqSr/ehps6vLly/jRpxs
JexxqJpJKLVMrKmpslJWUiqokMhBZoL/ZPIqfpmQXyaSSCV19Q1K0VlZzNPy
+JflcX9r8yAtReP/hgpSafxwaexzkpghtdkuqkZyPpfcPlVRW1EpKy0VCITi
qmqyT1bWK8tFlSWlZXIZU/4qmQC9wHDGjBlubm5AR7FpQ3UF8XDZsmUE9b1O
Tk5Qdffv329hYbF3714HB4ejR4/CLSsrKyCuW7duhesg2wJldXFxgfDOzs4Q
HmKbM2fOrl275s6di9vOwp82Njb+/v5AUBcvXrxt2zZ4EIL18qQkNkC5XP7r
r79GRUURTPp0gtFnxYoVhrh5N51a4KIM7c7cI1Cpd2D54osvpk+fTuj9avTW
oNe3wm9sbCyMs/q5WIzlot0E9LSol9N1QvQIa9asgeGA0JaLEpT5JXqnR0yd
OhVyGOqnh4fHAQ24U9i3bx8MZPCL5wj3x4Fh8BzGO3ROCMjLy8NXA959993q
6mrtbEehGqDrgF4GbSgyefJk1Aix7bfHQavQJRJ5cYlAIiUJoVLZIBRVlPAF
lRIpnGNA+L9BDFz0mXbtRUmNqBR+IcztwfJ7/2ooP6F+UYOmZaiirq4cXlEq
BGpK8t7GRupPQXWNQh2+V/NBC2DWFRcXA2UCmd3Ozg41SzExMTQXnT17NrQd
aPuurq5wpaioyNLSUiqVTpky5d69e3AlJCRky5YtBQUFCxcuhPDAbEH2X7ly
JVJWGF6tra3r6+uBKuAqmCVLlmBU6enpEBuhi0YB/RUknjnxEOOEPFm9ejUT
ojrT0OSiQD8IvdTUEepUQe197bXXZDKZpj2zAUFz+m/nzp3Dhg0rKSkh9MzS
gOWiWoP28DBy5EjWp5MmUlJSOjM71pqLbtq0iaAEz//85z948amnnsJbERER
VVVV7ViEdhU4FMKYOIBaOTVo0KDhw4fn5+cTXWyh2IICAgI+//zzDj+ZIUAa
YLgHPqyrBPR5KBR1xXxBubgSsrdeqRQIxfyyclRaNkNF/QfZrxQ2SG81SGMb
ZDFPOhqlsdVJ30puDajm/NJYQy3nUSnVLFTVQhqC2iiRykr55WKxpKlJ1dDQ
WCYQCQQiJTWy6H9pKxQKNGgEynT79m0QmmC4SU5ORuNP+NJZs2aBMAVD5MWL
F1HkhLbJ4/GAeUI3AlcePXq0ceNGLpe7aNEiqOpOTk45OTnz5s1zcXEBjrp+
/XroN0QikbOzMy7N4PP5y5cvB4IKEih6+e7NRkFbJkCambMtpK1Sb926pZ8s
rn1oclE04NfDr8C+/cqVKzBGoFikb7rErgLTD23wyy+/1Pn6vhZg7UW7CWhB
0A3qlXyhK9A1x8zMLDQ0lOio5T6Ji1ZWVoLgRrtmGkwBBh0Y0ZA0AkEd1A3Q
GzOVlpYmJiai6yf48x//+IcWXBSBY2jX86y7oH3df/311zBkE3om6howNIxD
gYKW8MuVyobGxiYhsFC+oEbxlyZKuw6zhvNbbc6i5h2Xnrwxvaa7KKlUXlLK
r5BICdJlUE1RSansryl7fey0sSrm5eXhdp8If3//3bt3czgcNP6Uy+VGRkYy
mQwaOOo5gV+h5tPS0hLb4+XLl11dXQsKCoCL4ly8QCCYO3cuWmgD87xx4wYI
YnAFRWBoCFAoQH0XL14MdJTo3UaB9QEYuJubG/BngpkhFb8IuO7YsWMNd+0S
QXHRkydPEvrHRVGEgZr24osvonNOQyeihNpnLzS3119/HVoToU/ZznJRrUHv
AQoiBrsHqCaKiopgQCG01YvCIPLBBx/Qi+vR3ROQW6ifGIx22aQ10NdTMoUB
apf4/+///T+t9aInTpz45ZdfOvzkHgc9+QIjtSFO1ekrVJSSk6ivVxaVlFVS
9E8ilcG5XK720vPEclaR3FLV9ISDvAVEqVGRpg7ecWXTXD4vBmJcKlBAWasI
cgm/oBwYMqGvnQ86w1m3bt38+fOBOh4+fBgEVWh0YrHY1NQUyOfOnTsnTJgA
gyOcTJs2LTw8fMWKFUggJ02atHr16vPnz1tZWT148CArK2vmzJnQNiGGioqK
iIgIZ2fn6OjoVatWHTx4EK4D48WZxw0bNqxZs+b+/fvwUlwX0/sCGnx1bGws
0/NlhuvTiVBnyxtvvHH8+HFCn0gRAjt2qJw//fQTQSXPQPO5BbAtPHz4EIY8
tI7QE47NclGtoVL7NL579y675Q2hUXMsLS1R1O2qXhTtRSEef39/TeoIYUD2
h459yJAhPcJFMYYe4aL41TAI3rlzR8uM6wZoe9Hp06dzOByC1Yv2BFQUP5TJ
5MUlZUBHgeyVlgmFInFTk9r3Qrf7SFXzjzYRQZL4ZcLy8gqCdKFQDYmsrdVT
8wxMElAmoI7u7u5+fn64oB7A4/GAi6ampiYlJYEYtWvXLl9fXxiJoOuAcV+h
UADVRPoaFxdHUPpSCAkRwjCKQxWQvf3791+/fp2gqj1cR3Gsrq7u1KlTe/bs
wVs6EQ/lcjlwaaDKBOvr/gnABL/55pu4MYpecVEcubZu3frSSy/ps09O7YBf
5+3tPXToUK2nAnscLBfVGjQJWbBgQWfUgP0HCQkJqKBoP0Ow7rXgorRx16VL
l0xMTMaPH7969WpUO/P5fNxlSa/0ohj43r17OI+jkzoAQ/CFCxcwl1j0CMQV
lcA/oTyryNlwPr1c6HH22J2ybtLCfxjOHOIflRI5JAx4KZBlOJFXkQpbg+iC
2tymc82aNeiUmMaMGTPo7Rtah2+xVwUDyewWIEnQHtGEmzlA/IWFhfpAJLQA
JvuNN94ICQkh9ImL4sAUHx8PgwI6V9ETzWEPAr/IwsICiB/UIn0wHKU90owa
NYr1dd8lYEaVlZVt2rTJQCVThgCUEheqd3UdPc7RC4XCmJiY1NTUu3fv3rp1
KzExsbS0lGCAi6akpPQUF719+/batWsJHSlhqqqq3N3di4uLez8BfQl01pUJ
y0UiUusoFkv4ZUJ6Y6DHzDe78yK0Ru12QdXW1hUXl1VVkTqEEr5Aiuaj+lf+
KvUGSS22SaIvEpSSMyMjA84bKIBs5efnB/0qOhMm1E7YVGrH3YTGhvX4Jx1M
1Wpr+17+WILS4n777bfoToQ5X/dpaWmTJk3C3Z0MruHTXDQoKIjQGy6K1Uwi
kbzyyivYpfeZ2XlN4GcCC33nnXdA6CP0gG8rlUpIQ0BAAAzEwAHovqLvZT5D
gN7yypUrTMu/hgVfX9/79+8TXeeibm5uIpEIJDVcnQQXhw4dCszz1VdfffDg
AXTvQ4YMgT/h1sDuAWPowTn68vJyXDPby6AHPhcXl+zsbIJtudqjecacXLFe
QU5z8AUikbhS16l6IlRqb+F80ukT6U+sTAAplxCGsLj+SaBlq3/+85/05Luu
E6UNINklJSWo3mECmFHQWx4/fhwGcYbewihoLopr1vSEi2IyJk+e/PXXX9PO
RXWdKEaA5JPH48Hwpz/iAJCHv//976xjoi4BmxIQgPHjx7NuxjUB5DwzM5Po
+told3f3a9eutanJ3LJlS01NDZLGnkIPrl0KCQmBatDhJ/c48HX19fUPHz5k
lfNag840cjfPCnJeuKi0rFIip+7pMF0dotnstLxcjLS5pFRQTml0Da4aoM6T
NsL/4IMPcJtyg+OiNJ22srKKj48nmPTpxOfzPTw8DNSZG2bLm2++GRAQQOgH
EcLO/ODBg88995weeuDscWCeBwcHwwiIWyXqRDuKVRcScI3C6NGjQcg6duyY
gQpZugKUJnQIfbvGdhXOzs7nz58nuqIXxUVJW7dulUgk3333HVBTuIJ6UTgZ
MWIEcH6on9BFDB48GK4P7h4gTvhNTEx89OhRN7koApqwTnTjtHrk+++/x72u
DG5I0g9QI7tAVFFJakRJ80s5+snRcbLaAVXQlOEAGq6XCUtKhQSl15XJ1ZP1
epz+NkFz0ffffx8d1xtc10ov14I+kDmzGYwTRH4bGxsDXeiBJfv2228fPnyY
0AMuijQsOTl54MCBYWFhhB5MWzMN2uJl1qxZUBBQkdq05WYatJ3bP//5T5Dg
gAD89ttvX3zxhdZbz/Q30L7uP/zwQ6GQHAXYTEPk5uZWVHSsnGm9dmn79u14
q14DmhwP/+wmamtr4Rc78JSUlB7Rix45cgTaToefzBAgwQKBgHXm0B2IRBUi
MTnBXVxchn479bw5q5P3VyIFQpGQUopS+9cbwCe0Bs1F33vvPQPlogjoZPz8
/HJycggmSwE6sbS0NAOlTFiy7777rq+vL9HrXLRFoaD9JJTam2++OW/evN5P
j66AHw5VaNSoUWZmZoSO7GOxMly9ehW1Ul9//TXuY2hwPZgOAfIvCL8G2hv0
LOhqY2RkhEsjO+/TafDgwfBraWkJA9C5c+cuPY6LFy/CxfPnz1/qOYSHh8O7
3NzcekQvCqMnsEEtMq2boPWiIEsmJiYSBjt26wS0zC2RyIDIEaRSUYgszgBB
2S2LxOgNtYh09ETKJs1fqDIMNakmF4VGShhgfaY/YcGCBQkJCQSTPp2gyX/8
8ccGapyDo8OHH37o7e1N6IL7aeYYvt3a2hryE8Z0nagHdQWsSzD2AQ/ELXp1
wmfwpdDqJ0+ejFXa4Nq+roAZBZLvzz//3Bk1YP9BXl5eZSVpvdZ5e9GeNQTt
KnBZvXZ7gGJgYLa2trYdfnKPg54QTE1Nxe1XWHQeuJS9VlFXXEru1yMorxBT
c/SGiWZizS8TyqpqGhobi4rLGhvUNbmlDlVP0Qe4KAIG1oyMDNonFUMABgU9
rYGOO8g9RowY4enpSehID4lTwPjqo0ePPv3007gCtL8pl2h/SjAO4v59OskB
zcZuoA1fJ6CXMEMJslveEBo0zMnJqTP2Ni24KC5v76YhaFeBHBidRHVnHX16
ejq69+9l4NslEgnkOa4XY5twV0CaSxUDZ2tsksmqUDVqoCM78ZcFaVNRSRmI
J9U1NXyBgS1H7QNcFD8BWOj48eOZcwWAcSYlJUH/adB60Y8//vjgwYOErufE
ExISYAjA5eS0czAdpqf3gfm/dOnS119/HWqvTtz7k/arTU3ojq1/5X73gHVV
KBTu3LmTVUlpIjIyMisri+i6XhS3hu/OXvNagNaLdoeLpqWl4U52vQx67Pb2
9kYvrP2tC9UamFHAP6uqa+qVyqISvgr3oDfk/KP9KhSW8OGknJyxl+EN3Sas
k+gDXBQBHwISItMm3JBRiYmJBqrEw2R/+umnuOVrL3NRfLu/v//y5cuhjgEB
mzhxYu8nQ39Ar2P6+uuvf//9d6LXm15rqwgttgPpn8CSKioqcnR0ZO1sNQG8
6N69e0RX1tHrdo6+O3pRDBwREWFvb0/oqA4oFIqTJ0+yPtm6ACqX5PKaMgHp
ja24pKyunvIfYviZh+UvJdW8pOEQuY2p0mAWtfUBLkrrRYHb4K49zOlFc3Jy
nJycDHQdPTKf0aNH7927l+j1SWF8nY+Pz08//eTi4jJy5Ei8bnD1rQeB387n
859//vl169YRvVQopAqAznaRvKFMWl8mqa+j7ItUGjvNsWgfQAOSkpL6rTDV
JrZu3RoVFUV01K4119EjF33llVdG9C7eeuutbupFETB6lpWVaZlf3QC208rK
SnNzc3QQx7bcdqHWe1JKgKKSMsgukRhESWbt+noXzVWgrExUXaNQ1NZSm5my
a5d6CfgJULu4XC7uDc3cW0pKSnbs2GGgO61g///ll1/u2bOH0BEX5XA4L774
4gsvvODv7x8aGmqg1g49CGxuly9fxkLphayg2WamQLEnsmh2UIa5D9f2cNqa
c7lXuRXq3rr/lkhngKWWkZEBbIpVSWni/v37nXGs19rXvauray8lUY0HDx4M
MGSfTvTapZycHHYP3y5BJKqQyavrlcpSvlDXaWECqsaGxuIS0reDoFwsM5Dd
6vsMF62pqVmyZAkuA2HO131FRcWFCxcM1CU4rYvAbr+XuSgWilAofJ7C559/
PmnSJJHIsC3GewS9/Pk4ER+dIbX2S5vqyTH35Vr5pln6pRl7c6d4pO65VqRQ
NrG60c4AWpBYLDa4DpMJ0PXF2toaF/J0fu0SvR89rmpUMQ/c3C0uLm6A2qOU
4fq6B1Hom2++YW7g63uor1eiZ/gSvqCurtn3UV/q8PBbJFK5WCxpamosLhUY
xNf1GS4KvYGnp2dnzOa1A2YLl8v98ccfDXQ/ekxwTExMVnYOnOrEOLC+vj41
NZV2iM2CUHsc7Z12h4WeVFht4p1m4cuzPZxu6celDp714TRr/7TJHqmet3Ad
RC8kx1BB60VHjRrF6kU1UVRUhJNTXdWLbt68megtARnfHh8f3yN60ZCQkHHj
xhE6qgOQhtLSUtbXffvAosHfMoFYUVtXVa0QlvdBb2zk56iaJ+RLSssaGhor
KiVSqQHYIfQBLoqAxnj58mWmlxPCWwxo1z+V2tUt/tOafKqw4uq/KUn/huqv
E7IQG5vIQ7MwO1nhsaSVjU3rzuUZeXOBfFr6wcHTPKz80sy8ubxSUtrqqrSC
Ag6krVmvqiL6dtWqra3lcDisvSihUQNNTU1DQ0OJrutFdc5F8/LyiC4Ofyq1
t3moBgwltcO3i8XiX375JSUlhTDYsbt3ABI/Qeqs6vllpPBYVCro8y23qrq6
vLwC6klJqYCqG3pNu/sAF1U1L4uTQzcYGxtLMLl26dGjRx988IEBWTmq1P9g
YhuaVIXimoR8WUZZjby2udvv5e9AHWAfmxZhEihLoCjxWI6pujiXjmELK2qB
cFr5krSzBREFampzmDflYGrwPQHR+Yqharswm9RX1cJQ51Oq78DvKiwstLOz
Y9fRawJYGW5C1Bm96OjRowcOHDhkyBD43bJlC9HrXBTeO3jwYPj9xz/+ofU6
+ujo6DVr1hA6shetq6uLiorC/QVYtAf041QurlHUyquqy0Ud78jQB1DKJyl3
RaVU//c27QNcFAHJLisrQxNu5qBUKuEt+lygraFSM9H7ebLlZ3KsDvMsfOFI
mxWYcTSOj4xUcwqDhZ6BUl5T7j+lNQ0x2dIrqRVXOZVZguaq3nntJboQjc6U
mPlwW2tE1XpRnrEXZ/uVos6nj05Arqg2kldxmVMRnSmtqGq2qVapp436EmhT
vf379xuoxQ5DWLly5dWrV4nO+XQaNWoU7VVp48aNhC70ooi///3vWuhFMfC9
e/d27dpF6IiLymSyTZs2IZFmK2H7UDY04LryEr6wQUkpRft6hgHrFokrmhqb
Svnlel47+gAXxQRDkxw7duy1a9cIZjo0fAtI/RMmTEDv1obR8NV2oWGJYiNP
jok3B+dhLXy5QEgmHUxddS5HpmhQ6bn6vj9Dbf5zMVnsFJxp7M2ddCBlqgfH
5nCa2+WCEilJ+TpZdshF43KkUPRWbRFRtBo18ubsvlrc6dSRqKxp2H290PZw
2nTP1N/2pxh7c2YFZZy8L2ygXtms0f3/7H0HQBRX/r8m3qVeEk3ucvf73+8u
uTQTY2JJT+5nEnPJWelIV1EQNbEm9gLSmyCwC0sTULBhCSKKDVGUIlK20pe6
lbaUZcvMvP9785YVERASVgH55mUcZmffvHnz9s3nfcvnO+YGWEtLy9GjRw29
/h1dkpiYWFRUBAanF50zZw4EgX/961/hFsO5h4lF8/LyJk+e/Je//GXKlCnw
9VdTUwN+k42+vr4+KyvLQE194NXb2tp2796NgfToeCU9GqH9GZpbFW3tyi6V
RNb4qNvzcASNCGSgpyiprLmzs3umGpHDZAxgUSzwRmQymaHjGZubm9PS0kaP
n4nOR/RWpcKMiVRhdtFI8WUXxUf22Uje0liBURjH42w1QY7TnI9EoT0wka07
7qbEKIS9hIWwon0Mzz4GaTUXhrLXJZU3dQyW1QE/YlGryi6GR+tF+/AXhSNk
cSj7xG3kUvXAMYE/r23q2nC0zCiMjYKhogQQJNtG860i+YtDiw9cqtOgsTXW
VKN4kqysrFywYMF4PvqekpycjJ0nB36P4O6qq6srKyuD3Qi3D9/K3NXVVV5e
Dq9eUVEhFAp/AzsKRs7Hjh2bN28eeERjQK1WZ2ZmDiZe7HEWrGypF0nhsJTJ
mpRKhBPu7S34BzkmSo9b0jHQIgO9qqtLSuc5HbEyBrCofnlobGwMf5XAkJxO
tbW1Hh4eOAO1YX/4dN0QDGCXQAhI8Cv9N1SjJqityRXm4Tw6VuV+PRjPLJyb
XakAg9ZfUd1bAgWAo/bhdg75HsflQYJ79QK3eWEI2x6uI6LveXYQlJoyOFtP
VHRpsKPFgyvE4UXeaTXGYVz7aIF1JFqS6KzziNkJ+W/YRfGE8q4BK7z7AUFS
rilVxmEcBxoe2+pri0aAeWFo8Yl8DGtH6GL89wiEAdXV1aM0C5uBZOPGjamp
qWAUvkd+s6D037SfxkMW3MONjY3ff/89jl0ax6IDiFLZJZUhBrZenKJjusvQ
zdGOhWgSxlC8+/CIkzGDRWGHX716dTBu87/nKnAR/eOPPz4EYmHkIdjXgxhS
1nCCPpnf0EmrQ/v2D4SAwSiMHX6tHtC44sGhz90g+f7TqNGf0nfkCdWhJjYc
q7DUhb33ZVJncC/zkE5pMGMDP+Gaxq7lsXzzCPj0BbZIjYlU5Q70zuJQ9vE8
TFL0gIYR2AlZ2GrO5Dh0t802knvX9TSaZxXJdY4XKLq0Y2xY4N+mQCB49913
xzmdegrsk8F3CNlDHkkH9mzAb/g6XobExsbOmjULPKIxoNVqRSLRKE2/8jCl
sam5o7Orvb2jqblXQhySVtk0UK3XQGvWKC83KKJNpwXGISD0P2KJVKPRNjUr
2mje+5HpkDdmsGhXV1dgYCCfzweGxKLt7e15eXmG1oToW18lU6Zzm+Ozpcdv
S7MrFZ1qOkvjoJ8PQaOTnEqFMZODrbp9ghljBjvwYg2qeDA1dzugwj64Xd12
8o4s/qbkHLupRNyJP6apM0biUB91grElu77dMgL5V/S5mrCP5hkzOAcuI/dO
YnALFZIeQAJRx6qEUhMGxzycaxHBMw/nmTG5Zkz2sTzpYKqius85lCOBaxl7
HRbl9mqkbRTXisXNrUKT/2ibVx4sEAbAxe+omzANIfop18LCYjCcTmNJIA40
XL6/AWSc637wQiGtoBi+uSRSeVdXLy5WutMUuVTlTiD0BFX7RnNxA6p63R3r
wpHpoFdFm0KBHGWlcprWexyLGkbwLSiVyh07dmC3ecNxOsH64RLYkLFLOh4c
+KKPzhLbRfGMQjimTK5JKNuIwd58rCK/Gl96kG3G4fNtZhCLIlbzvrEoxBJB
lxCYGQyWwZeulCl3na40ZXAgEDJlcozDOFYs3v5LtZ0qEozriIZJMObPr25b
DMFejMAmsjcWtaYfnwmD7XsBhb0PutcpPDAaOzSJ2ZItJyo2HivffKw84EJN
cV33wB6MnwZ9vf0Xa+AA6NbZcm3uVd7aIg8QTmox8lMabfPKQIJng7Kysi+/
/HI8d1hPqampeXxIrvAwOHnypImJCXh0etHy8vLxALqBRaXWSGWNWoIQiaX3
PSb6ndV2hxJ6gZogUBPQowTCLVHlT1b7E0J/qjrg3k9/fwnsse118G6hBl8h
bKFapL8pvWg0WpFEBqf1epF0xNouxwAWxQJ/knBtaOhsPoiqq6nJcHMOzhWu
0VL7L9YtDGHTii8+nRAHOQeaMzm2UTxOPeaQGURtulgV9co4PsSKdrTOyrZH
sYnk2sfwIZI8mot8G8gH2ehxheXSrpXxJaa0rtWObh7csY3mLwwp3nWmqkNN
UtTIXHiNMtHlSKptNwvnIkt6n3rRGD5cpOxPp/Wi92BIPVq8R2h/Ubxz9zMt
Qd17CmKQ6ukAfH81QMcyBWJviI2Q6ykeTigYylpnrIdHBPCgJYubWYq9kX9v
h4wc0fuoX758edw8CnoMp6VLl544cQI8HnpRfNdVVVWYv+WRXL25udnW1hYb
BEfpu9ugggdma6uiVdHepVLJ5PdHGtKd1nYHCD1oHOivL1S1H9ppCQPSA6CZ
AUT7KaH+UwQR6eKPC6hF++CeEtBziz+l7h6Bxa97G3DvV/wp/Z/V/qAuENQF
gN6V91MwFr1XnwD/kEjkBEFKZHIIyx9e7w9FxgAW1XM6ff/991euXAGG1IsW
FBRMmzbNQFz3VHfY++k7skUhbPtY3l3iHVontjRGYBHBWZNY2tKpoQbXAHwK
42qdUSgXRZdE3o1SgWjBDsU7c5fGCkQtajAIfAuv2Kkmt52shEDUIUbQixcI
1r84lB11XQQeD62IoQUvDBo71GsOly2J4Nrdh0WtaSxqwuCcLsCKx+5e772i
0K2E9WgQRzBpCAKiUC2JPD/hVkNQai3R0xNYR1bfBxKlnTTo6jIEzcYMNvYA
0S1w6IyitlE40oq/NJYvb8fEU2NnSOB7EYlEO3fuxLPBuGDJysqqrq4GY+tx
9yf4HuFLISIi4lFdvbOzMzEx0XCBEmNDZPJGZVdXS0u3w+Q9MgAWRQgzKcTG
b9v8wB0L6/J2A3EQUeWLASRZ7QfBKkSnZDXCmSQNXEmhH/1FX/hdVIT0R/ig
0I8+6IfOr+7ehwchFkUaV4g/A4gqfDwAVV5DK2NrAhVcd2WJJ6gNJJFu1l93
XfQt1LwHYlGdL4cckfwr2ttbFArdCSNMxgAWxQJvBK4QDZ2WV6lUlpaWGqiL
8OhRKLVrD5daRfJ7Ij2dTiyS1oOFsruNng/WtmMVpbxNsyGpHAU7R+tonVCY
MwKiPBMG+yIXLRV1erD+hyhGMtmVClMm1z66T0YgLuKJiobI9n7GjHH5LYL7
PDFHsiiUvbQ3+OfCR2kRwV2VIGhVdsfR67zWSbroMnHicYXt8k2dmjNFsr1n
qn5MKvsxsfSnpPIfk8rXJqItvVMGy7YTFcdyJeJWNcDOpXo9KkXp6qR0rkhw
295FrD9SZo7XJpE66loMSh3oOPrwa3Ra3rHFL6onlty8ebOCntvHYQAWf3//
69evg1H7HhmS4Hu8ePHiunXrwEMfA/p3d1RUFFwWPfwGjCIRSWQERUokco36
fj7GvrEowpzNYQcDLIP3LCop3Jt60NHBdFZ7qSeQHwA0XATi/QgKNgRBgIr0
lpIghF1lB0B9IJAEg4ZAtCMORudIgkn4ETwNHqlHZwIR/Mp+UL8ffoS+VROI
FKGwElkwqrA+CEhDkFK0YT9oCk3Yb3X9+Gp03Qb6K7CIg5DOlv7iILAo2ra2
tbcq2rq6VDKaW3UEDpUxgEX16Sf+/e9/w2kBGFIvWlJSYmVlBZeiwABPk+x2
xbSM6B0D0q0dRZpM83CuT1qN7jsPDjHRgUwILbadrDQKKzZjcGD95hFcHHJy
vbRVf87A1eFTIjMbzJkIytrei5bpguz1pozi/Oo2MLZsso9KsEldpSX90msX
hrBtaUUoLvRIYMPtXT4udPZdwygGoPix4efLrutwOVS6OKzYIpwLxwBdePcW
3XHjMK7jQUFWGR4bOCLtnprRn908Xtz6Drsonnk4ot+3jy6xo1Eo5indcaqi
FWdSGFtYFAucNiHuMvT6d3RJcHAwJn4fde+R3ywtLS0VFRUP/7r4BQSvvnLl
SvhiAiMSYIwEwTxOcB4Tixv7GpZ9Y1FtpS9oZ+748dvjDFu4A6jYvLPr6rJ3
HmHYIUhZG3A6emkrz0OUu8tny3yfrfNSYpZTsqBTrKWev8wL3LlQfMdVXuS2
f9dC320LzsevgJCSc3FziJvx3g3/uZLoXJKx5YCr8b6N/7kAPxIFIcWpOLjm
5vakAzZx/paCy78ccDXa8/MPkd7mlTd3mP13uovd551C3zvn1vtum++/YxHv
8mYa3+oUqg+00QMUYaeWypo0Wq1UMkJZRscAFsUCm11ZWYmjigwhuKPEYjGL
xTLQ2we/2ovqOqxZvPthng3NUQ8LBBK7TlfqDa8Dtxory7BOTE1QV0ta9l+q
23FSuC+l+mietLYJKTD1D3xguIDnuYD0GtNwDsaivaAyPAKbZxbOySjpxjDj
8rsF92Kbigi6WGcVyVscxoaLCLg1YbLXHi4prEUDntS7gcLzNSqgaAStcqDU
2Y5pZgPAF3U6RAvgOsIhRqBLdkCTOPUsdjE8zO9kHyNYEgnhJRcOmLsabmUH
BWtWyIFKn79Dx73Aa+jYcLTMjMlZHAYLG6LQJSyub1qNjvlhzMFQPEmWlpZ+
+umn47FLPeXatWtVj00OIOwTGx8f//nnn4NHF7vE4/HGE9H2KbhDIAyTy5vV
Go1E1mc4Sd9YFKkrG/Y3sfd5/PzDFpdvPDbPK83Yoqn0XWX7GdJw1gTs2fBd
xfVtO9Z+C6Gjuso3McQGAlG3jd+TjaG3Tq1Ni1u5Z/13V5JWKSr9Njp+VZb5
y75N3x9n2LcIPC4lOm9c8dWvUY6KEq/kCHuCtt0DeWju2XXzvp4q4rrnn92Q
HO4gb9j/i8vXGUdXHQm1u5y4qr3C29n609rbeyqvb//J4ctGrjvVEEjpPE4f
jEXhlFUvliImAYl8ZGK8MYBF9WxLTk5OOTk5wJBc91KpNCEhwUBYVOcJL+9C
cUY9kJ5tTziK9aLnq+kv9B1V0lPoIJQH94aOrH7AmUynF70hMmPiDJK9bfTW
Ucin0YzBuVODAdKg73xceki3hvquplrPsFRc15GYK426LjqYJUnnNLd1EbpP
sdGcIKiLh0hPG2rtZ+TqT8hdxuTJYARK4Q+8S/NTUpl5BNe+L5LSPgudOwni
Uq4QLiy62ohfmZSrGbnmM3LtZ5TbEio1CnTRLF4URdADDMLOK7zm+JviqMz6
Q9mSO9UYCVNEt2527AmEATKZbNRNmIYQPQpydHRMTk4Gj0fsEhY4AB6JbhwP
PLgU+vLLLwsKCsAofHcbUrAfEeqQ9vbOltY2ZVeXbChYFNQGkJU+5de3AnFw
E8c9+8KmNfafXzmyavf675CFvcY/aI/R1aOrA3YuAvIDZLUv6GAx9plmJa9F
UU6ykFaOx4olHx/0X3LogHXAzoW5KeskxW6BOxf5bJt3PtGpMntn8O7Fvtvn
X0hYSdUFkEJ/0BR6PXlNwM4FgIwRZu2I8DL9NXrZxhX/B1HokVDbm6fWll7Z
4mjxcVKY3aEgG99t8yX5u4Eo8L5oqX6xKJR6sYxEjgqNGs1ITBw5ZrCoSqU6
fPiwUCgEhlke4joFAoGJiYmBbPS4ug41sS6pfAnrbty0dQ8bPR32zr7Q08Oz
35p0LoJQNARV36IWNiqrZMrqxq7axq6axi6hTCmUd9U2qTpVxN17fJC/aH5N
O80Qxb/fRm8bxbWO5DkeFEgVQ0iSPi59SDcO1UUPPfh8CnS0kMFrSOvXiWXv
kSs/JJ1mkI7vk7ava3+ZB9qlv/LajEIL7WL6Dsbvp3CtWeylCRUVvFLKy1pj
/Rq1/D3K6UPKeQa5/H3S5g3KzRK0SAZzNySOzB9D40HPdf/ee++Nc933lOrq
6seH00mvF/3ss8/AI/IXhW0Qi8XjjiJ9io5qoEXR3tbZ0dHZ2NTnyOwbi6Ko
Imnw+uVfXTrkjELpOyJ3r/vuBNMOHukq81ZwPczmTRfe3LHF5eva7J1AvP9I
mG20n4X/jgWgjcm+uPlYmN3OH+eyL/6sFe8/FGRZl7PrbOyKxiK3xnKvpWaz
mV6mHQIveamntdGH0sK9yIm0KTTzmIvnz/+lqFj3Td8nHrAGRNSuH+eeDLeH
VV1OdGrme651+KKjwqeJ7RYbYKEs84YgFlQ/2F9ULxJZI7LRy5q6VCNxtIwZ
LAp/jEePHjV0CGdXV1dVVZXBYpd0LT/PaV4UysY+gbqYoCiuLeJfQmbTn5LK
FUghRnUDle5YlbvOyt3GeQBqm1XMjIaNR8uc40uWxwkgUHQ8WLKCLujPOP7K
uJL1R8p8L9SwMVVUrxb1qBlrYdUEtSdFaMzgOMQKeulFUaxKSPGhbJoe6jF4
ExlMekQc0VLX2FUm7SwRdwrEnbyGTr6ogy5op0QM1xcqtUpF7Xcirf9Jrf6E
XDWbcp5JOM8iV80iV3+itXsbuJvmFpRaRpfaRHLu8/3ot9hFcU1ZgusFQuBm
pLV7k1zzMekyi3SeSTrNJFd9RMAL2b5JuVupFIqqRiVqm6iDJ+rgNtDbetTC
ElFnqVjZ0KKb98bekIDr34qKisdHATiA6Kdcc3PzxMRE8DjpRVtbW7EO5CEL
7nO5XP7NN98UFhaCUfjuNrRgvai8sRmFkCvaWxR9EuD0Z6P3A6L91dk7NjvN
2b35+20uc/x2LCCkQYeCrX+0/yLa18Jn+3wFz517+eddP33nuvE/cfutNNID
TC8Tt5//u23N13W5u8syt+1YM9d7+3ympyklO3A9ec3OH7/13bkAotbME2t2
//Sd786FsQGWWqwXlR0ovLApPtgKKFlZyT9uW/31/n1G7r/8l+luUnx+06aV
/+4s90496Lhn3X+8tvz3XNxKIA5C36oZrL8o7oculaqpqbWzYySy0Y4ZLApv
wdHRMTs7GxgydunOnTvvvvuugTidcDAISSGra2RmA8R1KCQ5GjlhIi++aL4Z
k7Mslg9f90Afq9Lb/q47gjWiN8qaUV6eMI5FONeaxbNi8axZfKtIZHu1iuTC
Yo12eJbhPFMmPId3qqA7+SN1n12VoroZJUF9s2r1oVIIR3XpI2lXQ+soHmyw
3/kapXrsgY6HLRSliwsqqG7zSBUui0EPqLuw0ZbBNUFbjtGBorUn61ovnQD2
bxIuH0GsCIEo5TSDcp4Fd9Cfqz+hrP8Jkjy80kVmDM79xFB9A9FonhmDvStN
ok4OIWz/Ra7+GFaoA6LOuMwiVn9E2b2hOhuzMUW8KLjQjAmbRLeNyYVbeC3Y
SHhwRXzJ/ou1ZRJsSnjUPTtMgn/7EIGYmJg0NzcDQ65/R5eUlZU9Pg60+KWQ
np6+Zs0a8IhuWaPR5OXlYTKHceklOs86eZOyS9XS2trW0Wc4Sb+cTgDCUTEK
k29h72sXeKIg91p/IAnqFHiRVf60ad6PDmn3h6AUnQk/lQW38z3Q8fr9yJRf
7d9Z4gmkdLC8JJgS+rVy3CHEhUdIoZ8C7kvoYHwIKYU0jyj8SOgLxAc6S73b
uB5AHoLqadgP6yErfeG3VKXe2gofVCHyFPUbEhZFKLRT2apoV7TdT2z16GUM
YFEssNnw1YBduA0nWq22sbHRkHOOziYLYd/x29LlsQLLCK5ZONc8nLskgrv7
dGWFVAl0QFT3mChVGyUuoOpyqE6p7gj9BG+WKywiEOa014eodLM+9qC75+Mj
dogKkmcUxj6WJ9NjTqBsAvV5VEMe6Grpbp2OwrK2Se2ZWrOEBRuGAJJFBMqW
HndT1DMcf0wZZR+q6MbXqTtySxp/4vxKKKQIU3LRCxNYHGL4EJHCZQsIXkU6
TMUaUcpZDxd1oFHjOB1sm3sxt3oxAzFu6VMj2fbjO2pLXwVCysRsCfA01y59
l1r1EeU8W18huoTTDMJltnbpVOC3LO5GrXkEF6WzjxLQDcOt5dE7PLjeMUaM
DbzMUmwge8SdOyyCn1BTU1NcXBz22HnMRT8lrlu3LiUlBTweelF810VFRdHR
0Y/q6q2trZs3b8aB/KP03W04wSt6mbwJ6QObWyAS6/MstOkLi0JIqa301Vb5
IbhYF0jSQUZkNdqnjfi+JPyzyh/BwnodZSiKiK/bT7OJYqp8eHIAOljbzZyP
6vGlGUcDIc6keUQDcKgUSVOSIlZ8dP5+eCaiG8UaWkRhGkAIaULRWrpCXa6l
IfiLNrW0trV3tLV1QFRu0G7/bTIGsChuMPxJfvXVV5jTyRDTIL5KcXHxZ599
ZuAcoEirqfNLb9NeFbQczpaeyJdx6ju0BDpIx6rQfJIdcip9MxHyBuH/Z9L/
FXL/38kTFqQYGWtkbSqXhLIlETqQOdhwlSieOYPNkZCgtUp7xpEM+gfp92fC
/xXiwGvkWSeqpZJuH0G3AjW0VNxxqkAGEcsFXjM2xcJWEzoGSqrbV8AAnTSm
Bc+fF7hNRgyObRSd06qf5wUB3qIwbnKeBOyer1k+DRnlewNRVDQrPwTrPsm6
xbWMLl0SzrXugUJt+xkedpFc08iSK5lFYOtccvkH1KrZvfAtAUHvqtlahHK/
v5LFMYkssYvm2kTd74+KwtxQSgUWH66q8oQKMCaM9fi3D5elLBZrHIv2lDNn
zvB4PPB46EXxPUIciF+dj+TqbW1t/v7+tbW14PHo8yEJ7hCJrEmFbNNDxKIQ
AUqCQAsDtIYBeQhFE9SDHrmWECwUByOlpeQAoNnsacJPOigeA8haOhlTtT7F
Ep1ECedgwuT21X661EsoudJ+lNep2l+X9xPx2Puj+qu7fQZqcOU0rWh1dxsG
x+mEx0Vzi0LR1o4iuVpGohZ9DGBRLA+H616hUGRlZRloyY90nYPqfHpgtVQT
rNnE3gmE13NarxdI7z+R3s8Tbk+qvV8E1emXytWLQgppl85BBk3z7KJ4lhHs
H4/X1PNuUGFvEK4TtF7PE6jaPxFwx3UCEfQaJSm624ABhSB7zIvjE+SgBXda
fYtqaazAGoWxD/QE7WN4i0I5J3LFYM9AWFRLY9Fb2dzFESXH8qSrE0uXsLh2
3dFwfQDRGJ5JWDHzulRYUkFs+pZ0nH4fFoVlBrwc4fgB2P7D1escE1aJHQ07
e1Voq0sGyrWPFliEc9cfLVNpKDD6taP4dyoUCq2srMZt9D0lPj7+8Ynpxi+C
U6dOWVhYgEcUu9TV1QVf3Dj59fggvEe64ZhE1qhSqxqbWpTKrr7O6wOL0oRO
gRXXt6bFrzifsDL313W0rTyQEvoRQqQsJav9tVV+dbm7mjn7hDd3kPRHEEPS
ulM/+Kmm0k+LtZpCeNCXqPIjq3TqTbLKrxtzIjiqrfLVVvu3sN3F+XuoukCs
iSVr/JVlXrU5uyDW1cKqKn2IKl9dniY63RLawcrVwWPRVoRFOzqU41jUQKJf
Hv73v/+9evUqMCSnU1VV1c8//6xUKoEBfvi4vi41WSZRXua3nOc0nec0prFh
kaexm+g/m9LZjcX1SnVHMxn7hdZtIun/Z8L3JdLnJcIHbUm/V7QeT1Oh/1vC
yXeIq7JmDTZWxRaFR3EsI0vz2CUgcqpm3yTC/xXS9yXK+yXSG1Y+mQx4hdw3
iQqbqm6qvlPXdYEjP89uQm0rbjwHC6cpjdN0jiO/VtJSIVOqtdjNgBqHoUMV
7B5xqlBuzEBJ3vvEinqYZxeNktGzrtVRB1yIpe+SfSDGmRAxIhv9jv9cyBPO
C+XmCxWbjpVbRnDtIrGHxr2sXBg3xvCNGZzThbIqmZJ0NSOXv0fRnqj6Qruk
ziRcZhMO74CA5bE36hG1Am5Vb9ZZOmtDJNeWpocyD2djS/0YUI0COnZJIBBo
tSORIOVRyc6dO39PwhGCFp2fEknCvh3qNAvP7/ktWImhvQUgGsTrkYcseuW8
kZERh8MB41j0PsHdIR26XhQR3beE/bT0yz0bvksIs/PeNn+Ly9edZd5UbQDy
4WwJA02hLRy3zSv/rzxza+pBR6BkIXs6BIeSYGTBrw9ACtVmBkqlhBSnQaA5
FEiDUf204yhCtjX+ZA0yuKMKyZis5DX7dy8CTWFAHorqb2WUXN3ys9McoGAA
6QG0bQxBKBTu19G4F+V7uqs1HZyNnlaLtneO2+gNKnD+ycvLgz9MYEhOp5qa
GjjZwsln2OvHIOQSr3nDkdIlLJ5FBAqZt4jgWiBnUY5FOAf/aRRSuD5ZpLhx
gNo3Uev7Cun9Ig1EX4SFpOEo4feKZu8EkOKwP6PRlMEepI0exaowi3efb6Qu
b9XunQAr0Ver9XkBV074/Zl0m6C8uHXnOcmiAwVLYHuYyJGVLjx6y4YgZwmL
u+VERVZFdzqn8elx6LLvbLU5k2sXjSBc/08NsStYRbBXn6htvXySsnuDcPm4
Dyy65mPS9l/UER/3dJE1i1tU2/HLiXLk33s3fXwfKBeecJnXmNNAtB4JIe3e
RGyl91ZLOc8gVn9C2L6hTo3ZdFZiySzGdv/7MyCgZGH0XTjE8I1CiuNuikEP
xtRRKnpOp2nTpo1zOvWUoqIisRg94t+AIfsDjYN/JfU8E87SPf80xHsNNzg2
NnbWrFngEY0B2Iba2lqItR7+pUe+6FKxIxYjVXNLa0dHn+40fWBRQugLmkL2
rPtOlLcbqCKBMiLC0yzc3QR0hJ+NdTyw1zjr1I+aCp8tzl8389xv/7qu4NwG
5FYqDs4/u76V4y4rdGV5mUX7WXQIPGtzdhVf2JAUZH3r5I8ImoqC7pxb31Ts
hiBlXYC6wjshyIoVuCTc0zQ2wBJIQ44xbENcTXgZ2+pzdu1cO5dsYRwPtw/c
tfBszHKIYHPO/NTG86CkQTXZO/lXf4G16dxQB4NFm/X+ooZKCfR7ZAxgUXwL
nZ2de/bsKS4uBobUi7a2tl69elWj0QxbrfgfetzA1/TiUATnbKO5uiAjFHbE
7442Qq6DZmHFoZlNIHmR1vVJwvdlAmJR7xcxaKQR44uE70saz+dA+FvXcgtM
WaW2URxaMdWvz6FeL2rM5J+8VQYOfq51f5rwnayv827xnax2/yNI+DQxR2zK
4DjE3Juyh46mwfsQPJsxOacLUDgtOcpRx0MW3FlbTpTTWJSPg8uwdvR+alBr
9HC5pkzu8VwRiP1Fa/M64fIJbU+fRayig4xWf0zYTwW7/3s7v9QssmzNIUG5
tGvbyUq4cEAB9ajaPsKXbJG3Bo9X33G6uCkluwp4W2psIBz9mI6NmkUH1KMg
eq3NG8DPLu2OyCwcjdg+x5U1BMw4PX00Gr1GYWwUaaXLK/poe3oYBK5/5fIR
msTkIYsehllZWR05cgQM0Wlf//WCggIPD4+FCxfOmTNn2bJlCQkJcModZG36
pCeHDh2ytLTctWuXk5PTunXr0tPTh3o7QxI4DLCl7CELHnhwKfTpp5/euXMH
jMJ3t6GF6o5d6lSqWlvb2tpoDNZ75ukXi+5Y+03xhY3a+kBSFCS4usVr67wz
B1cc2Lu4iu/hv33BmUgHv+0Lrh9f7b9jge/2+SUZW4mGoG1rvq3N2bnjp7lF
l3++derHUFcjlrfZUrPZ2embfl45p+H2blW1//Y13yh4HkgjKjvgvfW/yeF2
lcVujhYfs7xNDx2wPhRkLSxy9d4y7xTLIXjPYu6VLft3Ly4VeGxd83Vh+qak
A9ZHw2yAJjJoz6Jrx1xAUygpHCwWlTe2KDuRgb6tfSS6uI8ZLApnA19fX8O5
zeNuYbPZX3755fDFLnXbsilwMl+2OLQYZfTun3WHzvrNS7pRQ8X/G5nR/ab0
gRh9XtR6vwgCXhTkZ5hGCW0j2TrPwAHJfOyiuEbhZdm3C0HYP7RefyK6laK9
sKjW42nAevf8LZ4Fq2QAlR2O9TYO45znjHsxDVlgd208Vm4ewYHduCSSZx3J
7VPfaIvM3wjmWUdyrGNL88tkIHglsHuDWPoeYrnHxfp1aq9xraBkzXGhSVjx
L8crmtu1O09XmYVzMNC9L3MWj64QHWxoVt8obTaLLuXzqoCXBWnzOrV8GoWq
na5Z+i6wfR0EOBSVNiyNK7dicR+00uEvoZkWTJlsn/M1Y2A46HOAzp49+/Gh
MBqM1NbWYvQ4+A7RT+AbNmyYQMvzzz//6quv4v3XX389LS0NdPd5f9XSXMsU
PPP999+H3/r222/Lysrgn5MnT4Z//vDDD3DqBsP9dsMI+ejRo7D+AdpmIMGX
g0i4pqYGm+rGB2Ev6ea7aOno7FS0tzf3PTL7xaI7135bfGGTti4QSIPLrm3d
s/4/bpu+99+x8NfYFUF7FgfuWhC4a1HmMZeDAUuyT689EmLDvbQpxtei/Po2
e9OZpyOXJ4Xa+m5bsHv9d8nhDgAkJDPtTrGW3UndEOltikz2tQEtbFcId5Gy
tDM888Rqn63ztrjMYXmZn45e7rdjQeDOhRCFtpT7HGfYpcSvcLb+ND1hZQvP
Y/e6uQoB3H5H1gVQQ+F0gphcpVbJG5uVypGoRR8DWBQL/ElmZmZKpYjXyHA/
SY1GA9ehw1g/1hpWN6psIvnWUXoXvr7z49hHIcLGuBv14NAchEV9p9A2+l6I
8UUNxKKBU/j5140jq07mi9cfKbMIH4hYEoIECyY74kZji6icCPoHClbqB4tq
IBaNnHY2u9ScJbDrx8Krgx/RiLnUKb6kuXM8B9NgBXdSu4pcm1gKwRscBs4J
JfYxPKTW7kOHidTdKBVXNN+GxXE6VHqxSKw8fwj4WoMt3xEbv6V2LtYmHwAK
WfgNuUlYkWUEd88ZIRxvrilVevfO++3p6MGxeEtj+K1K4k61YmFwgXNS1S12
HZkaQew2JjfPhZUjTenZqKtForVHq6wQZu5/mUPDWjhOXA4JHGL4EGD/fKK8
XYUcLEf1kNDbYnJzc4fPSjKKRT8l2tjYQGwGhqIXhW8c2IfGxsYQNM6ZM+fC
hQt1dXVNTU0cDsfPz+/pp5+eOHGiPq9on3MvBqKwnk8//RRW8tRTTy1evLik
pARWBaHspEmT4MF9+/YB+jUxPDfcfV24bWhowLzWD1n0xGKw67C/6Ch9dxtO
cBcpFO1tbe2dnUqZvE8XvoGwaF3OLmSjl4d4b51/irX0wN7FZ6KXd9Tvv3bM
5XzCCq+t826eXBu8ZzElC9674T8+W+dX3tguzNr547IvW0u963J3XUp0Dtqz
CCX6VIS1sPdBAOm68fuKrO2UeD9V499V4b1xxVeIuRTExvot8d02f9/G73N/
Xd8u9LuU6HSa5RCwc+HhYKtIH3PQEe67ff7JCAfYGIa78fa136QeXAEaD9B0
94PFoiJJI/wFSaVy1YjM0jUGsKg+dgnOP9euXQMG5rqfOnXqMHLdY8e5hGxk
9aZ9O7k6g+x9Wkc6VoUHQYX/1SZwxkbj+gTpN4W6HzT60drLmJmpOWVm4TyB
qP3n4+Xm4Rzb6H4jshGZJIOTzmuukrYpD34H3P/Qt8YVYtF9fwCJ38TclBuH
FTvEDKQKs47kotYyOZf5yKt/bMSqGFpwJ9U1qVYcLLGicxNkVyi2nao0ZXJt
+3HvRByekdwf9heeZ0sDL9ZZx1eFZ9RXVsuo9maK0GI04P5r5fygQrOwYq9U
lJXM53yNKU1631eFXBqLch3jBGoNVVitMAopnh9csCSqpIWgR3yHorikgXml
zvmY0OVw+SWO3DikyI5+1v1oRFE8FETLxXXta5PKzMO5EF3L20b98gT/9uvr
69euXTtUNeDYlvz8fNgtYNAdgufVvXv3Qrjo4uKCseLp06c9PT3xCQUFBX/7
299efPHF0tJS0P/crg9pn9Atrq6u5ubmeP8f//iHIdTXuDEQiHp7ew975YOU
rq6us2fP4kCJcelTOju7mpoVXSq1VIbtdL0+7wuLVvmC5tBfVn29xv5zr50L
d66dCwEnkAVzL/68bfU3kWG2bpt+4Fz82XvLvOzTPwbtXgzIWJaX2XKLjyFq
JesCQ/cZh7gZB+9dlBK9LCHICgU3NYaAptAob7OlFh+B1jCyyg/x4cuCz8Wt
2L52bnSYrb3JrKMM27yz63f9+G30ARu/HQvunF0Pt+mHnHb9+N0hlsMq289c
N30PmsOqsnZ89fFrrZx9KK5/0LFL8ECDGKnRJBKZZkSGW44BLIoFNhvONoZ2
4Yb119bWDlsXUTq9qH96rUkYSvKuf4Pfl+odIgf0xreK4KxMrBHln6a8/qjx
mUz63OPYqYXF7xXt3gnaq7t2pTVbszjVTV0bj5ZbhHMHUF7Bas2Z3LzK5vPl
Wvm1UMptotbv5fuw6Esav1eIfRPasyM2nGywCGffX6Ftjy3tJciF1TKu4BfT
8HTY2BbcS0W17bBvsZJcIOraerLcnMlBjri96JKQkZ1rwmDbHxLuSasvbyZu
CdvCrjUEXxUXi2jFY3e15/gK1zSRWWyVbxrEotT+S3XGEIvGYI1l74cIMSrE
os5xfDg0K9qA3yVJVLYsIUfaqdbVl12jCrwkirguOstuKZVrdqWKrA5WmqHY
Jd79Rn+7KJTbyzGWXyLuRPr5CA68C9lYwaJisdjd3d1QWdhGp0AEePnyZTC4
94i+G5955pkPPvgAzq44gsnDw2PevHl6hXNKSgrEk6tXrwb9q1spXUJkMHfu
3OXLlzc3NxcWFlZVVbHZ7JkzZ2JkO+wB9fger1+/vmfPHvDQx4DePzYwMLCu
ru7hN2C0iEajlUjkWoIQS+V9ualjLFrQm1+0NqCN71mWubU0Y6v49h4gO4A4
7cVBssK9Rec2KHieoGF/h8BTW+mrLPUC9fs1lT5wBwXa16HCu7S57NoWeFxV
7qMq9yaEfoQ8JNzT7PIRJ6oxhKCdPBGSFAdX39xRlLZBWeqtqfABkuC6nJ3s
tI1d5T6wAbB+IArkpG8qPr9RXeErK3KjJEH5ZzcE7FwAmkJIoe8g+UUBPfgb
JDKCJCVSgybr+e0yBrCoPqroiy++wG7qhuO65/F4CxYswNmdhsVfFFfik1Zj
woRYlKuLVem/QNxozCiOuikHVzZqd09AxnSIG31fonemwH0URB//+bWialMm
3zlB0KrUbD6GsGjfNtlue7opky2Uq47nyw7fEoFfzTV7JiAHAIRIJyM3AN+X
IcTV7J4ATpsm54mMmbA27v0OqN0olG9Lh0pBQGXM4PpfQCTM43rRwQjupRtl
LRCzWUfyHWIF0jbNluRys3B2N9JDZnSchsmGxTWL4IVlSqqys6h4N+BpBTws
gI8VKu7m1F4zytUcFrDXHPhYU4fd+TduZAlRhAUzo86IAQdbH1pWrM22YBav
SaokKKApygQxO4GvFfBaAlzNSVdT0tWMvsoS4G0JPC2Bt53mWCA/747XRbEZ
k47Nv1f9Dpu9JIK75nCZRKHZfhL5BsBLVMkxJdoj7u3fLwqFAs6Z4yHMPSUq
KiovLw8M7j2CtaAHDx6EUJPFYgF6sQ+3/v7+9vb2cOf8+fMQ7cODEKn+9a9/
HdhRH8NR+FCqq6vNzc3/3//7f6+//jrExs20wPYYgIUPVSiVSouKioa35sFf
Hb74Nm7cWF5eDsaxaD8Cu6VeJIHgDCJSgrhfJUhHUiruUEJPGosG3C31gYhD
SXZAn/wdoUdREDpST/PSwxPolEw0WX0g+lPnwBmAvigJphMt0cRN0pCUaEev
X+Zp6gIgXtX7eeLcoHSFgSglE0KndP11gboG4KpgQZUcqLy5c7PTnLqc3UAU
TFZjrvu7BaFltYgeBHhzd7ezU9nY1KJWa6SyEapCHwNYFAtsdkNDg+HiGXFH
yeXyY8eODZeHGB4pSg2xJbmCTqNJp4yP5OFsNf1CxyiuBYt35o4UXPgJeP4R
kdJ7PEN6PkPse1K7dwJ1ZC63tNwhvsqcyVlzuFStpbadrLQIh9ijXxs9jUW5
4lZVVlmrcXjp1eJacMqMcHuScHuC8nwGVq51mwj2PQEurLpVIrWK5NtFYtLI
+8GMzoMRliUsrm0035TBcf21CowJ4PEQBDtsXOI1LQ4tto0SOB4UdKqIX06U
02HveqhPb1mcJZGCtAIxSHQHK98nHd4hlk6FReOACtwhl72rLxqHd0iHt+Bp
4Lg/fBSsa/Wwflov2tstGQ4taxbH5mB5FrsOhK0j7OEXp2phhQ7vkku7K+y+
ipa+EGX/Nlg9izgXGZctN2F2U+j3WJ5YRnA3Hivv0lBuKXDBxYYDI6cKZ196
1N39OwRPkhAAfPPNN4bjkRuNkpaWho3pg+kQPJFu37594sSJHA4HfgUfCQoK
mjZtmrGx8auvvrpr1y7Y246OjhCvYu1ff28ojEUJgvj8888n9BBfX98BvvV7
BCs9EhMT4TAAj0gvqlarb9++Pa6cH1jEUrmW0Erljcqu3itHik5iCNpuU1Vu
KNdStY++UMK75f6DeB/oP+15Wo9zSKE3Bc+s9gbVvkAciLbouG/3To8KhX3V
D7dVPmSVN8AnwCKCGNiPEnYfqe5ZvIFKhG+rxw2ifTrpUkdnZ1dj4wjNzTEG
sKjeVGFtbZ2VlQUMyekE4W5ISAhevP/+p4krkCjUEDQuiUTgbc3hEocYGubd
z9OoV43G8KxZvJVxgsTbjQ35Z0CqE4j9jGDNJE9YaO9Ewwk+IbfJOLTIOooP
YYxKQ+w5U2UePmCASTTik5S3aUrESgsm2ypS8GuBDPCOkydtiMhZIOYj8KtD
c15iUq5sbWKFFUtvnb+3wkg99RBSja4/WuoQwzML5/ySXKkh0H2OuKE/8gRj
0TOFssWhbNiTqw/BpQS541QFwqLRd/vZPooP1w4pBVJwcIvW6nWt80eky8ek
y2zM5kSumoV2ehWXjwjnWRqr10D87jR2o7HOOfm+EsmzjORdKaoHwY5am3/B
amFV1CpY/0e4Hqq74CMUvJbLx9oVM0jbN0ByIPO61JR5D6UtHNJmDM6u0yh7
rPe5ahMGB0LTM4U02dfImwyHKhA4wQlh1E2YBpU1a9acOXMGDG4Sxshzy5Yt
EDEKBAL9kcOHD//v//6vu7s7dvKE4uTkBM/BmS4HdhmFrwCIbJ+kZdKkSXD7
zjvv6C34hhB4XUMwTj9Q9OqRr7/+urCwEIxIgPHIRddLTS3tHZ1t7e3NLbR3
9z2n0NNuO4+qDwcNsaAhengLJYoBYnq/Poaoi6H0H4ngtWIGW0lDFIW2sMRQ
9TF4p+/TNDJ8373uTyprVnWpm5tb29s7HlbfD03GABbFAiexlJSUIbnND0lw
nWVlZQ4ODjgD9e+/ii6IXt61NFZgE8mFr+mscsV2mv6xzzh6bKO3ZnG+9btz
SdAel9O4KLp+V1ojr64ZEEr9Ywu81DA/uNA0rMgrVQhxoGdqtRkEMzF9V2hL
M/ksjeU3tmlqGzsWhxYZhwtsYysl2JShVXJqmvZdkFodkq5KrErnt8wLLrBh
IQuvTR9ghkvbeXnLYgW3KhRO8SUWEQhQSRWj3j/w4QgeD/G3xBCzWbG4W5Mr
VFrS9Ve8lEAuuIg3PgpxzO5Ok6hTokjr12jaT5QF6Z6kSM59JwOFJ1M2r6tT
o7el1sNFRy9qBRTCFlYckCEDh/YS1q9TLp/qkoo6oS3RXTnp3H05pxnwI8Q4
umoW4TSTWjq1NTN1dXK9ZTjb9m6dfGMG2/c8ipkKvlRnzmTDe4nJagBjQi8K
4RPEOYbm7hhdUlFRMfh8lNhGHxYWBnHm8ePH9UfUarXewgUndljVl19++cIL
L7S00Em7BodFn3jiCT0WHZ576+eKBw8enD17Nnh0XPdisdjQya9Hr+Bn0tbe
0dTcqlGrxZI+MlMgGz1FAkoLKMIARXtfIQCpHdrlSC2Fztegb+HvkgSl27/3
WoDsce+62yRJSiyWweW/SCTTag2bhuw3y5jBonBlymKxDO02A1Eoj8cbLn9U
/DqukCnNmAhswNc0t6Fj9+kqM2ZvLGpNW9IhGoEo5acTIr8rssqauroK/oXr
eb9m5FaUlwBFLdVURTWVU82V14sqD2Q2rkisO3AJvfQD0mvMmP3GLtnR+kzn
eEFTJ9lCgAMZstRb/Myc/JYGAdVSCVpr4Qv37LW8izdyC9nF1Q0S3yvNq47U
GjO5epOxLcqZzrfFNJhRyDrvklBSIu5cd6TMMpy7NIZfIuoCoxx7PCShu2j/
xTozOtOWV1oN7DTPc0Iz5l2SWERuH867mFsNtn+vXf5+fzno+y6rZmsc3we7
fkjPqzFmCnqpRm0jORYxZezsfOqnT7QrP6RWDbpa5xmUy0eIVN9/2eGsemPm
XaUr3DEKKw67isZh9HURXGSZMrhBl2rA6E+9BGiYBBe/hk4xOSpEP+Wam5sf
PnwYDM5pH79r4AIfosevv/4a0FhU/wKC+xhi5eXlQWBpaWmJiZsGaAMU+CL4
5JNPetro3d3deyZ1GnYdKXwp4PXIQxa9XhQC9YKCAjBq390PQbSEVgTBGIRk
NK+R7ujYXz/qbrCrC3EIkAQpkcgfbYMGED0WffPNN0cpFtXfwvr16/Pz84Eh
OZ0KCwunT58+XM45+G3Mru+gCZ34VpHcMqnSLUVIQ9N7HfnoCHqr6NJjudKm
3IPglClgfQgYb4GIqYD1NmC8SYS8SYS+RYa9RYT8C0TOBKdMJDeiysRIG8+8
WmuGoo36SM5oi/h2BKaM4p9P1nR2toF8Bjg6H0TPABFvU2Fva0PeJEPeRFdh
TYVHQPhbIHI2OG0puX08JktsHlGKfAujMATFAdQo/45FBGfD0XJRq3r7yQrL
CA4E2EU17WBM2GQNJPRA0vWOWkvBxQjE83BIRF5Hnj+BaCmB0B2Ka0PDgL08
qUZ0MQU4fUj0p//svxBOM4HLB+VXLi5LFMIRpVdgokVEeLFLcn1zWhKwf4Ps
M51o/1gUbrXOs6k1M4uyC0yiy+y6R4V9jGBRKDuKvpGT+VIzGov6pArBKH8P
4NmgoqLiP//5z+DVgI+DVFVV4eTsQ+J0WrZsGQSN/v7+958gk8lmz54NP711
6xYYEOLCj3BtNTU1CxYsePXVV//+979v2bIF61oxN6khOJ1SUlLs7OzAI/IX
hQsiLpc7fOG0Y1YgFtUShLyxuZ9MoGNTdAuWxpaOTmVbe0djUwsYqeNET9r8
1ltv9UxvMeoETjUCgUChUBj0KnBagzPtcD1K3NOZpa2mTA5EhivjBaIWtee5
apMwTk+TOk35yLGPq8guqQPJJsD9SZXrRK3H04Tns7BoPJ/ReD5Lej1Hej5H
eT5Pej0LP9K4PgncJ4Jkc3iR2JsSI5TRqXfsEoQf9hAAR3CWHqoVCLgg/kvN
3gka1ye0HqhCwvM5wgtVCHc0Hs9qPWF5jnB/SuM6EXhOAudXnStusoxErgW2
0QLbbkJUWKE5k7M1uRJiKvfUastwjkkY+1YFjlUZieN/pEmXhvwpqcw6kmsU
yjmRj8xJoVdqTbGmkQ5qs2QWO58Uq1IPArs3kNPmULGo82yw/D1FSsyak3WW
PYi5UOZWJnvHOXHHkUDg8DbyPqUR5iAL5YSwKHCaVnI9yzZBaBPJRhRkkTyH
aN7CUHZCtgTeyLWSFvMI5Iiy/SQcHjiHziPu7d8s+hDmM2fOPBJfwZEm+inR
2dn59OnTYNBkJhgfyuVyuMbHxE2VlZX4HYTdrt577z14HBN4DqwUxTst3ZKX
l8fn8+GrDS4WsFcVGO63MK6tpKTkxIkTw1jtkK4O7xT2+eDjxR5DwZ3S2trR
0tqm6lLJpCM0kNwQQqs5qAYRzeYka9JlXBqRw0SPRd9+++1RikW7cysovv76
60uXLgED60VnzJgxvHrR5HyZGZNjxeKtP1rWoSJ8ztcYM+5h70SB8xG8dLYU
nDbV7Jqg9X2F8J1C+E4mfRG/KKIY7d6BRyhf+k+/KVrfl1V7JoDjC3JK6s0j
BPflXcL06RybqDI2VwDiZhF7n0AkTr5TSFhQnS8RdFV0eYmEha4fFlizeu8E
kGJ7NLfBtDusxpaOgUJ5HsM5O0+h2PkDV2rhfZkxuWnsJjCORR8kuHc6VaTj
QQFEhotCi89z0JwZdb3elIHi2lD3RvEgFl1zRqpOYVHWr9POorNQVNGgDPSz
IMIkV31E2r9NnAnbkCK2YBbbda9Q6HwHbM/0BipuL7X0HRSg5Dx7CA4Aq2YT
zrPAymm1l9JWHq2lA9xwdga+URjnWB6yYLLrOizCuVZR/NU0xRMY/VhUKpX6
+PhgoqFxwQJn4KE6SuEza2trv/vuO2xVnzp16hdffPHKK6/A/YkTJwYHB4P+
ky6B7sk5Pz9//vz5L7zwwrPPPvvcc89NmTJl8uTJcP/555//29/+tm7duiEp
bAffch6Pl5iYOFx1DvXqHR0dLBaroaEBjGPRAUWt1oglcooEIpGEIAndhPsY
dJhS2SWlOUXrRdiTZITeM3akaWxs/NOf/pSQkAD3hzdL2kMTeCNwhWhoF274
wy8qKhouDzE8dURcq7cI58Gy6wyCcP7pNUZhdHBQN0gwYxa5X2wEV7Zodk8g
/f9M+tK5lhA4fAkn69R6o9KTml6XGNTvFQJ+5fIvXulyM0ZxL/9AlBeJwWZd
l4AUO+2eCehkXInvS92VvNRd1QuY7p7Up3nyfZl0naC8FbQlRWrOwDznCN/S
Occ5e2kep5gbIiMG2zyce/CGBIxm4GFooWheYnphQsnaNMti0arBhMHJEKBX
Z1KuFKJEnAcBdrIFg70jTaJO8qNs/0VALOr4Prn8vUGAxlnkiunk0ncgfCVs
XqcSPbddkJuHFXW7JfNp3loO80oDCFlNLH0X2eiXTUOV0zVTA0JcynE6uewd
iHLBsvdakyPWn4Hjudju7ujlnilATkqVMqVFOMc2kg/vBe6D0exCjMEPhE/O
zs44oGYcBmBhMBg4IeaQFAL4ZPjqOXbsGMSTb7755t///veZM2dCAAmRHhiw
ezFx6J07d1588cUJA8rcuXOVSuUwEo3iZp87d87R0XHgRhpO4B0dOXJkPIBu
YNFlVZDINBptU1Nrq+KxoMDCtyeVNXZ1dSkU7U00h8AIl9bWVohF4+PjH3VD
fovo9aLffPPN4FN+DFX0jIJOTk7DF0ePavBJq7aIQInmvc+jmI6A9DrjMK5D
N2+SfRTPjFWalc8GzDc0ns8jnad3X8ni+ypan5c0Xs+BsNdu3Sk2Zem8+HrE
qnCXxFZxCrIp/xc1g65Tnw9U7f4UiPvoRE6dWQ/GITuaU9TzHLqRxByJURjb
MoLnd75WB0XH+E//d0h3Bq5SsZIOUuNbs3i5lci34Uyh3DiM44CyLPEhwDML
5/hcEpGR2xCwhCg0eDUVs5N0eGsAez0B8SQ809WcSolAuNH+LRC5xeeyzIyh
D5Hj28fwFoWy426KgPcSzbLppMPbZMwOMmAlBXEpRJtO/WDdVbNJh3dIHwfy
qC+xfBq5dCqZsG/PeZEpg8aiiIcW0YVd4CDFeG1TF71a4cHVSokY/YJGu6oc
wgAIgcbz0fcULy+vjIwMMPRJuOd0qlKpcGZVLANXhT+FCBaizWeeeeaJJ56Y
eJ9MmjTp6aefhifExcWB4U6G0t7eLhKJhrHCQQrusaamJmtra4zYR51N8yEK
6qu29k55Y7OWIHQawtE9/TxI6MxLGq22XoR0QSKxTK0doTMVHsnwVx8aGiqR
SKZPn56ZmZmYmFhcXAxG1ajGNwKnF/h77DmDGeIqDQ0N/v7+w5VpBc++u85U
mEdwjBncA5cRk3PQxTrjUIg9BNZ0ZLpNJNsuvq4u9zTwfEKL0sS/RN2b9/MB
cNR3MvCcVJ1zxiGh1pp1l2wHAh6L8OJ1JxuaM/YDj6fgaUPDoj4vab1fAIGv
8HPSrA9W2bA42AfALgYhjQOX0I2cKZCbMtlLInhbkysw0UTvtGTj0kMwFs0q
a13C4lpHcZfFCsokyBExnddkhHw2BBCgIu0lkxudUQ0CV5LL3yft3qBOh5Hp
CZTVP5G9vj8s6jKLsn+TDF1HlRVQDu8Qy6aBgOVRGTWm4TzaDRVCXKSrNGJw
judJwJ4FGscPSOvXwPmDZLwbafsW5fJRv3pRCIBt/kVFbqFupyO+fYd3QMQG
76tyE+SfzNezzhbUIC2EqFXtnFACD8IRclvYDka/XrSkpGTmzJmGSHQ+eiUn
JwezgP6GDsFGup5AUR+O1J/gT4VC4ZQpUyDmHFgvCmHqggULflvb+hQ9p9PH
H388jNUOUvDltFptRUUFpsAaH4T9C217Iqn6BilFUlJZY0fnGMn+dq9QPQqS
xqZWRVu7SqWWYC/ZEemZgPkx2tra/u///m/OnDnw12RhYfGXv/xl8BncRojo
XV43bNhguDh6fJXGxsbTp08PoyYEvo63JldasrimTF70DbS4ZlypMwlDNlkI
SFBy8HD2mhNiSe4h4D5R6/tyt2l+kNpLeOYU4D5Jnh2/4aTEMhwZ03v4Bxbt
TZNRV7aQbpOIIWNRHcqV3z5he6jBOoKNmZ3sYhC3Ob6Ry7xmSzpWZd2RMkKX
jGyE/QZGiNDdQtLILKWwES5MrFhcl0Ol8nY0zC5wm7H/MG3d5hqF80/dqABu
pgREjDavadIPExfiKKvXqP4j3wmX2RC1khG/UOUFlON0reP7wNUo9UaJaUSJ
PaaEZSGfZHOWIPVWBdj2H2LFB4T929SVJDJhH2n7JrVqACwKa36TOLhXXZhB
LZ+GaJ2CnEKzZKZhKK8TnZyLC+/lJq3gbe3UbjxaviQSWe3PsdHEOHqxKBYI
AyAQHUVTpeFEj4Ls7e0xU+jv0T1S3fLAM+EjgKclJSVBqDlp0qQffvjh/fff
x16mPVHo999/P2PGDLgDX3BisRgMK2yDd/pI8sDiW5DJZJ999tmdO3fAqHpr
P2zpHk3NLYrW1ja1GlE8gREHyoZLIPAmAVzYkURdPVKKisWyLuUITVWMH4ze
+Rk7jcOl5agDoqCHgjc8PLysrAwYZnmI+4TL5cJpbVgINPC3W5TEj0ll1hFc
i3Bu8m3064jOFJkyuFitZEfHTW8+JVVk7AfuT6CQJQREB40bfV/S+kym3J9U
XXXfkSI2Zxb3NKabhBa5XmwG550J14ndNQ8Fi/q9DNwmNOcmLDsihlgUp2FC
RmQm99htZAHJr26jU0ByIKxq7hzdsSqGFfq3iPk2k3KkEHkuYXE3HC3Dwean
C+QmyF8UE3DxFjL5l3MrwZavtStnUlb/0ORcoC4nEUv+dwC9KISphPW/qPh9
QFoHT9M6Tgebv7qVwzaOKHWI5sF10GVB846TFSas0uwbBWDjV8SKD8nl08Dt
dCrJh7J7k46p7xeLUg5vq44FKUp51Mr3tcveBR5LkrJqzCK49nTSJVjMI7hp
dBCWhqD2/Co0C+eYRXAO3sB44JF2++8QvV50+vTpEAyAcZVUt9TW1mLj1FA7
5LcRLuGvODg4wPfXP//5T7hvbW0N95988km9LhRu09LScnJysPn+2LFjoJtU
/3cKxtuHDx/+97//DR7RGIBtaGhoGOe6H6SQJIES4lCEWCrrZlcYe79c3Spf
jlxjIfDWYOA9wgVPql1dXfDnfP36dTDcvjQPTeCPMTU11XB5l/RXGa6sf7iN
VXKl40GBdSTfMoKXUYJiVeJvSRCHTwzfOgplezRncNzOibXn1lHufyB8Xya8
nye8nn8gbiR9XiK9XiA8n9VCkOk+Cfy6zOuCyIQOX7KlE4xC0GgaWuhzpRmc
siRcJxB+dM3eLxDdIUv9q0NfJLz/RNLhS2DfhNYM//WnpJYoMZBAp25lci9w
G/GtOcTyrOg0TOXSboPI2Pvd/27BrgtYdYwCvkKRk+2WExX408M5YhOabxb7
ixqzBDdyS8H6T7VOswmrf5DFWUTGccrqtYEYQV0+Iq1fg8ASKNvIDXMQFl09
oziv2DS63B75c3Jqm1VeqULT6IqKK5fAmtlapxmU0wxQXkSdDEVuACimvm9/
UWLVbLDsHUlyZENVDXD6QLt8Otj+w5XrHPOoEjvkYcK3jxZAIH26QDcTBlys
hcPDMoLrT7tGj/axAKdNuDgdpcGewyv6KdfS0jIpKQkM8T2i//ogp+6eitP2
9vZ//OMfEHCuXLlSqVROmTKlp14Ug9Lly5erVCoIVuH+qlWrhtq8gZstl8ux
u+ZDFr2p7ocffhh1nnUPXe4q31raQZOChAv9ehHNDIz+606ENFrnpB7ubxQa
2ETzOaXQq0GKlGZisVTZNUKVor2k589/NA5m/YxkZWVluHz0uM47d+5MnTp1
WDid8NKlqLbdmlZUQszGaUAj59htKcqzg/SiXIdonnEYJ+iKGJxeovV4inD/
I3nUlDi9jNj3h/6s6jRKnEx4/JGM+oTIj4DQUeP6BEheeCCz2Si0yD5Gx79k
i2z0nIhMMTg6T7tvkhaef9KWTFpEuk2ikI60f6O/+x/IuDlk2o/afX8gPf6o
TtvgliY212Uh50JECoE0JhRt6tCuiCuxZnHhreEjxDgY7VvQUMKBPCGX68yY
nCUsrttZIf4sMrNej0VtIrnWcRV3btwGaz/WOs0Cy6a2FWUrr5wASHvZf+wS
8up8gzoRgK60YzGx7D3g/EHJ9UyHQ9W2kRzLCE5zh9bnnNAqXtiUfgKsfJ9w
mkGs+YRsklCpUaTtG7S/aP9YdMXUypTjJeX1YO1H2hUfgnWfca7fsIytsGVx
baME9jH8xaHFR3Ml+F4Y1+pRSnoWbzdNGTF6VYn4t19TU2Nvbz8eR99TIDiX
SDBvxmBRJd6prq4eajA4xpNpaWmTJk2CIPPcuXPXrl3rZaDH+//zP/8DJ3D4
sOCfr7/++nB5V+KXQkZGxrZt24alwiGJ3iAI73p8EA4sGImijapOWeMlFjAI
RY5MVNLa0vSom/b75W6uFJQVFP4uWjPasv/ScnWCstq7XUmJJVIweiZb7Ds6
qkcybL9IJNJnMTaQaDQaONMOS0dhLJpX2QYxIWZwqm9BdpZfi2Tm4Vw7Ou8n
PL44tIiVJQdH56rdnyb3TCAy9lJ5DGLvBGIgxPgy4TaRTJxPNpUT3n/SuD0J
Er+OuSnX6UWj+Na6iGz+saxyEPeZ1uNZwm0CmRtGpK6ClyD9Xum/5ila1wlU
qhPFPqR1m0h4Pg2SzcOu1JronAr4tjF8MyZPIEJPQakhnRNQBJYJg53ORT95
7Wh3EDSk4K7xSkWMXrDHGFdr8fEDlxBTAexe+yiBFYu9PKm68lIaWDVDu3Im
WPNRTWFhy8WTYOk7A7GM0pyi4DQDTVle9sTSqWDlNHHaidUn6peEs+1i+Iou
IuRitcORBtX5eGD/Juk0k/zpK0KrJS/GQyxK9h+7RKyaBVa8y02/cLO4Fmz9
TrtyBlgxre5GhmWc0JbFsYvkQyy6MLQ4IVuM7+XgDdHCEDZcrfx8DFNQPpqu
/v2id9ULDQ0dT3nTU7Zs2XL+/HkwaIUAVm9u3rz5j3/848svv4y5XAbTmfAc
rJH+5ZdfINqE321sbISYEEfN93QWxXC0oKDgzJkz2Gp/5cqVwbdwAME15Obm
BgYGDrLZwyj4cm1tbXv37hUKhQ+/AaNI7mJRdUP7rVcU159UZE1W3PprS86M
Tp6ZqvIXdUOERn6C0oxoBs7+BSNR9HPQtlxtu/Xn1hvPtd18pe3Gk3Lebg0a
pOQovKnRJ3hCUCgUX3zxRXp6OjCMmwG+CpvNnjNnDma3/t16UfT1jJKWRaFs
22i+QzSvqQNh0ZMFEItycJCRfQzPOKw4PlsG4j9RezwDISiV4UrkRQyMRUn4
kdsTEIuCFiH8U+P+RxA943R2uXkEj6Z14q+MK7GP5ppGlmZk3wHh7xBeL5D7
niDZiUSqC/Id9RsA5U4mXSdoLvys5p+hvJ7VuD8DEr48fLN2UZjewRViUW5+
NdKCqjTk+iNlNpHcxWHsM4XISkuMQq37QxM8Hm5WKJwPCVwOCSpkOq8Gn7Qa
cxqLwkWEZTh77Ym65rPxYMX72hUfgE1z8gorG9LPQAQ4UD7QVbPIZe+CC3EI
i+5fRTq8TTlO6zwWvDWlwTSs2OVwaXsXcTCzzuWkWPMrk7L9F7lyBrVpLpzX
yGvH0Z/9Y1Gt8yzg9F7h1RvJeQ1gn5nW8QOw7G3xldRlR+psWGwUnh/DXxRa
HJMlwvciVah/OV6xLFZwowy7FD7aLv+90tLSkpSUZOj17+iSI0eOFBUVgcFN
j3hShShRjxunTJmCc+c98Ov6KPJZs2ZB8Dl37lz454cffgihJvzzyR4CUS7c
enh4wOc1efJk+ClWY/Z6Tfxmb9W6ujrs3vaQRU9muGfPnnEs+gDBukMcIFPw
ueL6U61Zk1uz/qTIegbi0tbMCS0ZEzqLv6Ox6Ogz3tHrOVoj2pLRdgtC0GcV
WS+33ZzclvUSvDt1nS8+69E28vER+DBkMpmh4xnhbAZX/cPiIYZ1hDR7JNs6
irf2cFlzJ8KiiTliOuejzv3SLIL/a04liJqOUnC6TVRnh3YVHIKAsD8sipjw
fV8mILY8aU0pGyF61Hg8C8L+mZ2dbRld7hCNtJTn2I27TlYsDC9n374Ggl4l
vF/Suk+iajKp9M2E6wQSfr1flPsy5TZBcdW7sfQm8JuscX8aRE09fbthMQMR
otJuqBCLciDAhjei0pK7UGp1jgmDE39LBEZ/3LShBC9qu+cKeZtG3q7tPgzc
UqrMwjkQi9oh5+HiTSkizYlgaulU0nE62LUgtVBWfiEFrJpB9kcBqqOjf5+6
eQbVydhILn2HWPouOLjL/aJs4YHiLSfKKRKcviPddlakOeyFzP0rpmv3mHUQ
gLqVQtk8CIs6Tyu4kRd6QwaCnBBb1LJ3mn49uP5Mw5LwIrieso8WGIWxmRko
KQwG221KbUPL6HBeGkAwiKqsrFy4cOF4PvqecuLECQ6HAwandcRoEM6oeiLQ
p556CqcQwl/HuVeg3F8bPnLr1i0MYoODg0tLSwcgdPrggw/g+d9++y3cnzZt
Wk9tNjYLDrLN97f/+PHjw0sVNSRRq9UZGRnjNvoHC81WAv9X8pcork9qu/ly
640XkXb05hRF1hTFrT8TyhL6tFHo/o19RFuvtd96VQGB6M2XFVkvIiB6E+Lt
F1szn1RVu6L7Gh8eBha9qcLIyOjatWvAkJxOtbW1+/btwxmohyWOPvqGCPkH
RnK3narsUKERFZMlQlZ7HR09BwLIrJzbgPFPjedzwPOpxtzDzflHgdsAetEX
UALQfU+SqatBVwsR9Het13MgYHJ5Tqr1QaFdJBcCm4Ka9sAL1QsiKoWFl4H3
U1rfV+D5VCOfurydcHtiIOs/HTvfeJ3BLSkDQX9V73sKMF6/nFtiziq1R5xO
XPsYlAM0pRAxLkLk6X+hxiKcY87kBKTXdnfW+M9hINHDdf3g2n6qwoLJsY3i
20bxzEKLdlxoBIfdCbs3EfDztEwoaC8+fx75aq7sB4jiUPqVH4BiWnUT70Yu
e1fr8A5g/hRwvWXe/gLPc0J4+Fppiy98Rsz1FISpju8rfZ3qIWC8fQERjUIs
6tRntbMIp1lg9YzbN/L3XmkGUVsp+7epZVO1hzz3nheZM5BuH9E1MDiBF2t7
3dTYWJVAGCAUCkdpsOcg5YHh7SQt+nM2bdp07tw5MBQsevHiRb0l/ZlnntGn
s+x1XT1cxOhUo9HAbVlZWWJiYkJCglQqrampOXz48NGjR48cOXK0h8A/k5KS
Tp48CZ9XQUFBXFxccnIyfF/0Yo76zc8RtgQj24csuEPkcvl47NJghaIjtYW7
FJlP0BD0xe7ykuLGcx3FcykN7dlOQ7sR+6aidFsKUHiDfUQz2279RXHjGfq+
XsD31Zr1QtvNVxTXJkD4DUj1qMGiul/lXTfYR92gwQqeTOCEAJeHhkuFhuus
qqpat27dMBIL+56vQSScLK5vWi1+QYdn1JuEcTD5knUkxyZOyM85B/ZPUXv+
Cfg+V3b7SkP+abBvgrY/xOj9AuE3mXCbSF3ZDTRKbcQHCIt6PCnPO4aIQFnF
tlHcMqmSea3WJLq67nYK8KDBp+fTVIuQzNxHQhDbv40e8zhJs2Ku8OUg9HWV
+9Mg6NXC7Gs2B6tsaGZ+ezqrzuEc7HUDYm80mDPZ1iz+jlMVKu043f2ghKLu
mTM2nyizYCKmWdtovllYkdcVOUR9pO1bWgga9y9j5nZknc8A6z8jVs4g+zXT
o49AFRv9tk+HkcvfQy6jgY4xN6XzgorCrqJXf35NR8zlSuBrh2Lhl09tZuxi
twFQdBklDNVh0fsrn4V8Vjd+lXXt9sYLreCwJwUR8vL3AXNdyJV6I5ojF/Eq
hHPcU4U9AqVHzYw4gOCXvkAgePfddx9nTqf7gRyfzx98h+Bvpaen67WXTz/9
dM/U6qmpqTt37nR3d4ddPcg6hyQYRXd2du7YseOLL77YvXu3SqUaavBUbGzs
rFmzDNG8QbZBJBJhTqfHcxAOTjCJM3peaml867UJrbemIKUoRKEQtt2EmO1l
xbUnO4vmYJdRajRoR+k7QmSJWmSaR0C0TQewX+rWi77SmjlBKbAFlFr/jREo
esCJLBSUDiOQeB88YC08ogQ3taury9/fH86EwJBYFK6mc3Nzhy0fPQDuqTWL
Q9nzg4ujrzfggyFXaul89IjTyZrFtj9UL8pJAt5Pa7xfBPtfzinkVt9OBe79
YlFS5y86kcoJgrWRcd9qPZ+F5zffjHE+KrZgFjse5LV0ahNuNtgl1MhvxgDP
SehbgX8n2kTUrUDSbRLZv14UYVGPibU3Dp7hqUDEVJX7U8Dvhbqbh5cn1lmx
OHRiIGSjZ2XqYlVOF8j+G1xsyuBuPlbWjUXHZWiy/miZeQRKnYk4Chic8EwR
CHEhlr6rXfYeiNjom9F09XIe2PiFdsUH/WSln0U6fUi6fARE/5+984CL4kwf
PzF6JiYxapK7//0ud8mlahJN1Jh6udSLibHTpQuIvfdK70iR3hFBVFRAVBRR
ugjSttJ7WfrS2d2Zef9v2V2wBpAFYng+w3yGnZn3fae9853nfUo5LI1JPk8b
fEit/RCYrY5KK13sygnEiQnYdX1RqSXgyBKx4SdA773ak663BACwEiS6s2mT
hQ/oRRdQxp/A6ijDeWD/T9cS7prEtIJIZ8iiEv2PgJ1mUHoDvKt1ApD9MGz8
gfMlveKHX325muuPKLDPIaEdn7wo8R9QyIFDfrO1tQUyMFNVVR18TCeyTVxc
nFwvCllUHpdv3759A+1I4+PjAeb/CxcuXJJJdHQ0/PfixYvRWC48VmJiYqKi
osjylStXyLg2FGdnZ3lFbm5ug2y8XOB5IDauoywTse6HKgxWeEqEN9uS/4IG
stNkLJo6owPCW9orwqRnu/K+pSUkRdF4PZn4ulM9RbQIe2EIEzrSXmtPnoZA
NG26nK7hAbYlQhDVZAiIjmOiI/iJdXHYCJxmmjqk3wKIR/84NEoa2tPTc/jw
YcUNVZAy8/LyFi5cOCK+S2TvooaegxdLD54vq22TBis+fr1yxQnIovw1/pBF
8w1OCzoy/IDZMyKbGcD1rzdY9cV3rgCrx+hFIYvOlJhPYvJPoWaf15RYTAEW
z3bFW+2NbljlnrsprAhWHX67ziSiuifBFFhOoa1epDzndnd3MNnelPlk2vbR
LGo7A9g9X5QUFp7bDYIXiiynMZZTOpNdTM7Wq3uxUABMf85qT7bzdZQDlMFh
ncxjy7eeLsqu6ADj+mkYpyKmmC3hRWreKK6Cjh93tTf3THIpsFCl1n7E6M+h
TlkdvNoQdysf7P5WYjj3ESw6H/kibfwCtGFtFTuVMfiIhgy597s7KTm/evDD
MxCL8hpE6TnlYMfX4nULgO5btRdCz5YCwEmSGH7MIAele0pm8ASrkxh8ACyU
Y5ILDM/ViaN9gP4csf6HwHTZmTt1Kz2wjas/T9Wbsz2iWNiN3gJP2Q0ACWTl
ypVj3YoxlszMzLfeesvHxwfgTrKysnLwtosD9aJyFq2uRr0HMQSFP06ZMmXq
1KnE4BOWCdH3MUahQ5K5c+eSuKDq6urPPvssrBrOdXR0wKAj4ZOXQmRkJLkN
xuSVKRmQA3RCHisMYVGqh9eR8U9h0uT21GkdqbM6UiG2QXib0Z7yckf6K8Jk
JYijjKQJ7zEuzW9wq/rKD3dzVkpaYjtu/w1rRF9FutC0GdI5UvNiEKUJiNLj
Vg0kj2cIsI/J7RKh5aVyk5OFQamCiuZe2UZ/JLMu+EhmZWURPwKF1gKrUNDn
JynWPq5qlQcao9fy56p75W65IOhKcWFMlUTW04Hnvy7lN3HTrwCbyZTdK8hN
6X5WRBNlN4s2m8QURKMyr26nzJQoy6n0JRPb67W/uebuj4SQAc5m1h++VM3E
rqPhKsvnxEHfCboBYJ+iUET9R7HoDLHNdOA4Iz/pgn96K4hYLLaaRpsqSRIt
tkW1qnnka6Exet5qT5b1ZRTJXH6DUX+g22i8iHSgoquP2hRWqObDwX5AnFU+
BbdS2GD/TxKjj4HBnLaLAZsu1sclccCe7yVrH8WiCyijefSmL0AHyqTAVPCZ
tR8hn6MNC4pTU5f5FsfkoDGp6g6Gk8cHmz+j4Kq171VfOe/LogEvjTIm8Hlf
yZ+gH00WIh8oG82Y9DLt8OrmKxHA6GMc7v6n6+kFKr4FyMYV3sM+nPWnCls6
70+8RV7cV65c2bBhw44dO7bdK1uxbLlXNm/eDOeb7pWNA2SDTNYPEBMs6+4V
Y5kYDRDDAbJWJgYDRH+A6OnpKSsrQwzT0NDQ1dWFDEPmRLQHiNa9sgaL5r2i
IRP1AaKGRVVVlcyhqNwrsAFwvvpeWTVAVspkBZZly5b9NlxZgkW+AOXnn3/+
3//+B9sJKRGinb+/P7yg8HgHnwP0oWP0JJ29k5PTpEmT5OmTIJTCfyHlwt8n
T55MXOMHyuQhCiwBFgtbS9oMl8kv8MqCQbMouYfLy8uJznaUhdTe2toK7x8y
IDihF/09waMzlLDjztsdOV92ZS9sT55CPH0gjnYgA8uXhWkzhYnPduV9x4hJ
klDpbTyedHPY6rXIWJio1J7yojDlBWxs8LJMxwuP5RUhBlFA98q3H08iswVl
+s9qRy91ndt68EKpmjdHxQtF2F7twdYP4nvcqimo75bvSY+jq/AQkcd0Wrx4
8c2bN4Ei9aI5OTkffvjhiMS6JyIzjui3o7O+UoH96FGsexXPvMOXG/quH6DN
n4HgB4IXRdwR5KdfBY4vULYzUXIllCNpxn04igw+IYuW3UDNTjSljilJrF4A
Z5b4JVUtdsk3jS6Dv8fmNx6/UQcil4stpjIWU3oi1HhtABRclEA0fQyLWr8E
XP5fenK83c1mcFGHsnwOBTK9tuvY1RZlz3zMS5BFOWYxFQDfNvLoGOP7DhqH
Ih2WaOkSmYQWaCAWxUmX/Ipyb+eCLYtExpAY51RdizE4V5+SlAN2fkM9cox+
Phqj3/A5aEJDn0BQSRt9TJksAnrv16TcVAmuSCpAA1IdNKjPug3Wz6fWzQcb
5hdciXW60wPybiIlKhqjf0jJiEUN54KDv1y9ma8aWlVy4xrY8Kl47Tyw7auc
pNsawSVaOICYJkq8xWvoIPZs/UdIHqiwsDAISJCgCDLJ8Ymg1OqHCQQwMick
JkeygaI6QNQeIeqPEI0BIqdEQoxrBggkz19++QXSC2wnhE/4C0FN7UeIzr0i
x1coeo8QAr0DGdjgXln7MDG8VwbCNmRvk+GKnO0J6pM55P99+/YtWLBg2rRp
ly5dghc0JSWloqICPIG9KGHRiIgI+O+UKVPkMZpmzZrV19dna2urNCDF57Bl
EpavvvoK1gUvhJxF4WkHQ2TR7OxsDw+PITzcIySk9u7u7tOnTyvOUeLpE3iO
esr30yIB01valTW7PfkvHemvCvv9mKYjM8vEyd0IRxvwuPH40o4SZIDNEyZP
bU99pR9BMVHDXyCIdvPGF4gyhD9l4+2w75ffqoJ2ceTdxu0RxSqekEI52OOV
S+Yavsj9BC4fv16VX90pv7lpgqTj9WaHhwi/EBWdlre3t7eoqEghfvqyTwXT
mFJlHNMJXgvkgxxfy1zUpSwmSyymgoglHslN2WnXgfMsNBb/8MT0M5Dvkvmz
oDIFFkunOVCmz4gsXwBBC89k1P7knGd/Bb0pMkra/G63gLD/iiyfZ8yeEUWb
pAoAKLkG8ZJ+REYnym4G8uV3f/NG6u39l1v64vYwsFXmfwEXNF0SaiGCavvD
iQfvqD96Vp3xIOTs1bb1GQbzIYuugc+mL1c5sISfkQWMPhSt+xSyaHlKkvpp
Qc6tNLAF+y49gkXhKmb9Iqa6CBYoqauktn6NXJn036u/dt74bDW7qh3WJob3
duIFxnAuile/4+uM68nHEruozOuMzrsoVP4DelFmHawOsujHYM93aal5KwIr
7qZmga1fiOEvJp/UxMfohVVoerMJi2r6cBva79eLPgUC0cjBwWGsWzHGcvHi
xTfeeEMe397e3p4E2xy8H/19LErsRWFnTtStcjl48CD83dTUdKRYFM6//vpr
8AQsSo4xPj5++/btYNRRUBots6vL19e3rq5u9BvwFAjTze3Iel+IzEdflfr7
oPnLaMg76VnIewDbjo6nE4tbQnV1ZL7XnvwcikZ1r0YU24hq4B4djBMQBQN0
oDSiUmmrypp6g1LrTUILlFEyPo62Hx+r4LjyCVv9oazlyh4cTT+OVWz5nbJ2
seyYaPqeOBjjQeQhf7/55pvr168DRepFCwoK1NTU4KcoGOn7k5TVJ6EPnC9V
8SIsylvuwQ5KLAfhP4stp0K8pGKMzOOFd1JvAtf/k1hPh9DI2My4L308/nc6
ZfMSU3MbNfuuD2U5VQxZ1Of9S3crfnFle91C5lilTX3ns2pB4KcSyKLmz/Ze
3X0J8mN1Gm35/CMQFwW6hxsDnzlRqXkbIxvbEp2AxTMiq2kg9LvTKSUrPXla
KAcoV9mLvT+ydGJY/gkE+0fiE1ja2KMXyNPw5WghRzaOblh5ya14YPSRxHgh
WD+fn5auGlZfmJAANi56TEwn5Gdk/AlTdBcW2VZbSx1cykBi1J8tPOdxILau
qqmbmOkzsb6MwQcohP7BX2JvsndfbRXdvoxj3S+iHx7TaT4C162f5d3O/dWn
9NadIrDrv8izXu+99msRBmdqNJEJMReyqIYPl8QUffCJIaEdHxRIKfL5wIX7
VsnnD/47eIHgMcgf5b8ThyOhUJiQkNDT0yPfeODakXJoGvzG9+0lnytIIIrD
ubu7OxmUJ/zm6uqalpYGnoBFa2trSdfa0NCgq6s7Z86cuXPn2tnZET2DhYXF
+GFRIhCbi4qKBr/9SAk5S21tbcbGxvDFBMYXMo1/YUgoUbqb25n5flvy1I40
me2o1P3nlfakSd3539G95TJd0XgQHNmsm9t+++/tKS92pJHReQjPsMGzsEYU
gmgfGIB840GQUaiMCSBCsmo6XW9U6wfyVrlzNHw4Ohg7UZLrASCKJxS0XAsF
WkerVDw56t6cI1HltwrbekSUvLTxdtfDrq+srExxcd7IAQsEAj8/P0VoX8n5
7Oijd5wpVkW+Knwdf+5Sd86FO5UgYL7I6gXaTKkv/vCuWGFSagrweFNs/cJ9
o/Ny7SVl/SJ9/HVGgN24+Bdo6+lojP7Em0lZuSs8C0/fQU7uLT0gOZsPPGcj
Vaf1c03XrUJZNGhgUVbPP7xYzKJi86kgaNHZ2xXaoXWtd0KBhZLI5mXg/V58
Jn+5ZwFssLYfFzZ+x5mS7kf4TU/IIIW8ydnVnSi6lw8bnlh1L/bmCzWN1yIB
JEbjhcz2r+8kZqiH1VZcjwEmaGz9UTGdkJ+R4UdMzg14OcpqWkWm6rTBPFr/
AzrgkFuSoLEdUiJ2LAqzobTflqz9mDm89FRyxbYogSg5Cmi9TZssYh4okJHH
ujeZy8/K+8Gz5FpWJb3jP2KTTxnNN0SXg7bENKp7IhZd489V8+aUNEjTSN0n
iutHFPrJTECrsLDwyy+/bG4eb5qTMRC5dejNmzdLS5FF+hPGdIJntaWlpbOz
E2JeVVWVvGM3NzcfPyxK2n/y5Eky1j8m9wD8HGCz2ROJaIcoMrbE4+90D78j
6300WI9sR6e3p78si4mEsrpTda5oS3pcjNQzNI4m2hrXhpIrzehAsfpl5Jwy
ta9QHwI2Hr8eLyA60DVJJGFul7Rbxlas8eWs9mBp+nBxPkEuCgjpi8hzzQAc
xSZeKFDkGoyjJPUP5FUVLzac9p4rucJpbu+RHiY9PkIFkgcQ9lqGhoYZGRlA
kbHu4ad6cHCw4li0sVOyKbwI+aqglPG8FR68q9kVwOvfIpuXGFOl3tTjRpHt
SSnJwPPfYqtp1AO+S8he1O5lxKLO/wJNPFikpCqDsntVYvUicHqVdztWxb/s
Oge9OuE1LMxLBc7/J7aeDuxfKEnwOXG7D7SwxZbPP7RYwqIi8ykg+PPIOzWr
A6ua70YivShkUZfX0vP4K7wKdfwRQqt5c+EhtHRJwMPYY0IGKeQjMrNcqOGL
PhvhzYD0oqfKKm6ngQ0Lxar/BB7rw9Nr15wsb4J0avQxAlGT+Wjo3FiaawlB
o2yZ0v+QTr4AC0yt6KPPOACtfwP9d/uuh1teF3T2iKXkmx6FUouq/QtctPVK
a9lwrkaUEAG036FQ3qUFDPFXWrdwoCUAzgH6YWFG1hLvwpD0enDyEKX2T2A8
rz0jYd2ZSg00Ri/9PGFVd8kP6qkRSCyNjY1/cocRoqyW/ws74cjISDBc3yUI
hBBBo6OjX3vtNWImCukU/gjRccOGDQDrRUnG+WeeTGDJcD4ielF4+Iq2DXtU
vQDHdIJHkZOTAxTz4nvqhYQSpbv4nZkIR2Wx4lHSoq7UyW3cjQ2NrfRYgOg9
XxaMPDQ30ytimgqdOpKebU9/DelF03DqqLSZwqRnujkrGJEAhwsY7a6WeeAf
eoDzu7CHus5pOYRck9DIqQwsuQ8oQn9/0sLWpDiHDmtbRNGF3CaSphD060hJ
qNJRPHj5ceNa+/r6wsPDy8vLgWI+D0mZfD5fWVlZIWP0uLCa1j6TkEJ1zKLw
u0DVrygpiw1OvI6I0WJSR7qXTkTr3fQE4AoZ8kUIjfRD7UWRT9N0pvYOLLK3
qZRy/pfE+iVgM60pLUArpDKzFEVc6QGgNS+GsZ2Ow5bOykq6ZH2zCwgyJWiM
/pEsKrF8Dvh8eCmNDVm0IjMa2L3YZzMdOM3MzbqtEVC6xpet5c/T8OEahfCr
Wx4+JjshgxAyRo/mqUVCpCTHH4/aASifZmpFDyjLARfd72QX6wYVGZ2uar8S
Dgw+oCAlolCiJMvSx5ThXAoBJFaWmiyk9OfQV4NggR43ayNuV/dc8hHejHRP
RhbjIhL3lWZqOiWCtIS+C+438uo0fLm7Y+p6YoOBDmTRhTI/+gX02rm04VzG
ZGE/ixp9WJR0S+tkqW5QQU5RE33BA/BT8wViZOOKvm1xv+HNSSsRgqeIRSdi
3T9KKioqhhfTSc6icPdvvvlGSRblaaC0t7c7ODjItZpPIqTwJ/RdIu0PDg7+
/PPPB3nIIyikOtgGgUAwEev+SYTEeqK7OF13kO2oEKHdrPakSc35xhQD2jt6
q2vqOju7ZBuPScIWosUFLS2tNYLu9oLt7TeVkJlr8mRh0iQhSiM1oytrbmfO
IlFDKN6SHu27UTbDitD+pDbYNalh6+kiFU82fBFo4UB/w0DQ+4kUJyJU8+Gs
9uRsDC0Iz2isk0XFxAHz6f5GjeZJwOccPowKZVEivb29paWlitG7onlFU49B
IF/TF55qviZ8mweX52XcAMdfRSxq91JNephmWBMv4zqkR4k15MOZDxtPn45c
7C2mMjWYRTvbKNe3KZsXgdmkvhRHvXABr6YdoHxgQJIfRps/K7adCVz/lpCW
cSROCKpuSSyee2RMJ+S7NA14vJV4++7qgKq82wiJ+6xeArYvlqZH6p+q0vBh
aWP7QL0AXpEAOfFRE33jcIVY19ziteKgClyUX9Wft9KDnV2JYjjArvNQdOUy
l5wN5zEx6r5PY2JkTD6ldd6jHYzpEDNaB4ephz+u/5TWfU904QTc0TmufJk7
e1d07ZbIqmUnWJax5ZTsYzK7rMPkdNmu6DpNX/5qd9b+y3W9509AFqVNkF4U
KVd13mVCTJmTFozWOzQsc918ymQBMPygPP6y8emq1e55m8KKhfjJKG/s0QmA
tzE2IcZ2PnFYGz/OI3IMVWCfA3uDpzsH6CBF3uWqqKiEhYWB4epFp0yZ0tLS
EhAQMH36dKIXJfGa4O+wZLFYbGlpqSTzr38SgWWSMXrYmQ+M6TQMvSgkZBI6
YJSFnPOmpqbvvvsuNzcXTOhFhyfEZxg7+9Bd3HbkyjS1LWmSqHRnK6LQelGf
CPbGgobGmnpBX1+ffKfRaNqADrOzq7u6tr6lFX3odfDWCu+838VZ0VeyS1Tr
JWm9QXdzccaosexgpcPxsjaXN/UEpdavP1mEXJO8udp+fC1/ruZDjEKHyaJr
cC5C+H7R8OGs8mAZhRQEpNaXNckvEDP6rxu5O6FCx+hJmdnZ2XPmzBnBmE79
5RNflYYebakimqfuzTYMq6q9HQbsXxZboWBKrPQ41ZONpVlXgP0LEpsZD8YX
lUHjLMp8ElOZCguUiESU54eU9Uu0qZL4lvnO6Obiug4yJkvnBVFHnxHbzgAe
r1/OKNgR3QSKo2nLR7Moienk+n85t29BFk1Izwbes0VWLzDWzwmTXbecr1P1
yicWHRBHn8ox2dEUEpQ1nttCkmlij0IUu5Vf1w0fMpqinOKqVrjlbLgoEMX4
Aq23KAyHiEi132GCTUHKRewCvxD5vMNVWm+Lw+xhgQ6Xy1d5sNW9WZreLGVP
jidOAEru7dq2Pk0ftrJHnq4/pEfWsat14jBrRvddNEZv/AmCT803meTz4NpJ
WuOf9IZFmEUXgrWzBZcjNp+vgSx67GJ5n4iCzWvrFhsEIg05UY0qe7LP3UXK
wzFiUWbEJwaN2THlZaWrV61sbWkm3+KKqEiRk0KkqKho8Aa0D7UXJWpVSHd5
eXlsLCwWi8TPhAJJFXIX+fFJBJYAyyGmrfr6+sNjUfLgxMXFrV+/fpCHPOIC
P4iysrLIK2lChiVSRScjsx3tzHy3t2gTeUZ6e3urawXNza1wo96+vtq6BkFD
00CTDAVd9IGFdvf01NULBI1NxEOyHmKxgCeRPCq7Ac2MuqcVM2A4Hp4QVnWn
a3y1XiBKFAjfAtp+RBeKR8p87zEKHf7kKx2vh8US5yYNFJKUpR/Ic7tZzasb
GJJ0tAEdXqOysjKSEUlxAvso2NMq4vYjl7JI0KOGnOiRNYWqZ96myPq+dHdg
MVlsM51x+0dSRs6qoPqa7Fhg9axEHnnJZjoeqUcO9ZBOUXxRu1cQi5agKCs9
Pb19Pl9IrF+iTJ8RX97qnNhWKugkLErddhQfURJZz2C8349OL9xyoQnkh1AW
fyF5l2g8UcQrH01oWYJG5GcVZcQq+1ecTy9l/OaKrV6QmD8LEg4ejG1e7ZEL
qUnHn6/iyc6uREnxJqLcD1vIqbvCalnqlq8TgFhUEz96RQ3Spyw4rWGpS87W
Sw2SKE+g+RaGw08Qi+q8B844MDkJtP4cPLaO9aJr3qROWsG9bC6VQhbVCUC6
a0i5Z+40yusS9kj0ApFaW8efC/sQ62u1dMAhWvd9kgOUgeVr/IvJugZuhDEa
byLnesKiBrOFF3x2Rdctdcl1ul5J2tYjoteFFKzxwUE5/FCMuJBU5DH31NwO
5DiamoXuHr5dPeIxbs1QREFXQN4lbtmyJSYmBjyBveiFCxeSk5MzMzNzcnKy
B0hKSgr8PSMj477fhy2wHFhLWlrazz//THStQ2VRctT5+fmBgYHDPXPDF1K7
UCjcsWNHSUkJmNCLDlf6HwqMo4yoRhoTSeYB1NYmrKmp6+hAdNHVDcmwsV7Q
DBfuL2PoTxfzkCWpwKvZ3tFVV9fY0NAslkjg1W5pFUIw7uiUgRZsbf9E44l5
eFkKk4GuSb0S+nZpu9XlijVY/wBfJSRS6IgoQh+YOGRBU7ZAQpLCSldhn1nH
uKq8qk45qY2OcxN5AOEjOQoxnWC389lnn41IDtD7y8elFQi6IdsT5zKUjD6o
pCA3HakfDyiB2DWhGY0r/CoEOZeA5cAcoNNRrFGb6ZTdTBwadDpiUbNnac45
WGBOTW93kiOwUgK2f+nICraIa2pq78UjwDSoSoZgCY4pgXRz67iaHRdq6QxX
2mIKZtEZNAkPBYtFJRN168vIuNTuhZo7kcp+ZcdvNoKE7eJDSszxvwny4taF
V6j7sLRxuPsVJ1iZpe0A9IdxmJDBC7mtCB/G5DUvO4FZFAX+5Rif5NfIrGIu
57cscc7Zd6VRfNYFrHkbwyHWXuq+x8SFMFV8au2HCEQhjiIWfYsOOAb3sowp
xVm9eLr+/KUnWJdZLfK6unupdSf5sBbdAN5qd7ZzfDXw2kHrzUHKVeMF9IZP
aY03GFYKczuW1iUaV8SijP5sUbjjodiaX5xzvZPqSNu6RdTOs8XqaFwGfbGu
8mT73EKrRl0viqsTN4PeSqavhumrHsEJiGr6OkrL+CmS7gq4PLKFK3DqrQJw
wjllFCEQRIkOcxh6UWLDSQblHzQWJWmYHvz9Ca1G5XUR3/xhsGhxcTGJ809+
IYHFhnv+hiCk9o6ODicnJ5IgYMJedCREfu2kyVrIOYWXtaGptaZO0NmFULBP
JBI0NtfWNbS0CPv67rtbGDmaPsS2lJEqYhlZLhjmAQvU7p7exkZUV3OLkJJQ
KHZ6W3tNbQNkUaafNsf4Wg+k0PYe6jq35cD5MjVvzmovzpO4Jj3x2D0Xm7RB
GOZo+vIsYyvSS4V9lLSdlCzTk+xPQWdmNGLdwwcffkcrwkKMUBu7thNSPTqZ
vjydQP5yt7xYfhformNKr6ewq+HveqeqazPOA8tn7s9H7/gagVLk0GT/KmRR
6q4vLDAgrc4prrw293J5XqJNXPW+cyVSXSXDVLaD/Nysmrsx5zOqlrlzDsXU
0UkWOAfoTAlWhNIQa2FRNtJM9MgkwG4msHq26c4pndAaNW92VFatpDgOtLBy
asTq3khVruXLheC03J2dWox9VSZYdLhCHvPzd5uWnWARFkXBsiKKOnql/R48
w78czz16rVEcZge03yaD5ggRIYtmXQPCJuRkhF3pmQ2LGO13ae/dcK9jF0tX
oUwWPJ0A7nL3/ASUbQuyKOp+u/vo3eeK1bwgi/JXenC8blYDFxMJYdF1CyiT
BYzebIaXQbPTUDIm4koPV+m9D0LMLK/VLT6eG5omwKUxEpoxjylX8eJo+/F0
/LgrPVgu8dVg1FlU2sM3xTIVNkylE1PpOIITqHSUlNo23t1Hl9uDqhEuXDGT
A5xApROosAYNp6VnaKQlKCgoOzsbDCu+6Mhy5lBlGCxK2n/x4kU1NTUwOFXw
CAp5q/b29kISnggsNqJyD+kNDA4nEokbm1pqawXC9g4Syri9o7Ne0FRbD0Gx
rbOrSyIZ5j0gFkk6O7qamlsggjY0tXR19yAbVrG4paWtplbQ3CakxkdQKaSN
HeAXJWgXw5fUjtMlKp4c5JoEO3wU2nFkjEKHN2n6YhjGsUmVPdmqPtyDF8tu
8tu6RAoPACX/PFRoDlBSS1lZ2c6dO3t6esBIP/jkNZ1d0SnXi+JQWpxb/Bay
gemlymWuuRvO1NWnnQQWMha1QymWqIgVzM1DtOkk2v41pNJE9qKT6WQ0JhuQ
Uv2LM8sgrEo3pHyJK8shDo2iEhy9U9qqHlCqF1qj4sVf7ZF3+HI9E7+PMp9C
IxZ9GVHosUnMlc107HpEtvbYT8ruVWCqJLwTbHBaoOyeu+l0MRmlKKzvMggo
1PDlSkNRubNv8NvAmNkH/tEFnTSC8eEZAmQvGoDST8DH6mhUGXYSRKvuVnQs
cc61ihdIgk0BRE1sL8qYLGR03wNFd5kuIbV+IW08D4/RL6R13gVum8Q02H++
RBkbgSAnRG9OWnE/i8JiLWPL4VrdAN4KD05AUg1w1KMgf0o99D9G5ZeymOpi
5CFljKNIrV8o0XkP+O21vdnwi3N25N3+EX/3hBplDzZJnLHSI9/+ahUY7ftB
1uM0XWLKrUGFI6hwGNEJIqgjqHEGiEtHtmSFTIx07gjKrUBDhPxOG1k5cuTI
4AenHsqiRP9J5goV4sREFobHokQgDba0tMj/PXPmzIoVK9ra2hSdFEaaJril
ZeXKlWw2G0ywqAJk4EWUR4+H921bqxBBY2Nzd08fzsPBdHR1NTa3CgTNdXWN
jY2QTIUdHd3dPb0kJYQsJQUFFyHQ9vb2dXf3Qo6F29U3IJRtaGyBy3B7WA3c
rKsTWQLAGtrbO+69rGN2iZl7O/Cypp6A1FqTEGQUqu6N3vvY1QVHp/fljyGL
okmGItr+qCUq3iQkaekVVkt7tzxIvqKIFF7mrKysgX3CyAq5HyorK2FnCzuf
ES+faBDTS4QoAWgA0otCvNfy5eZUdmA7EMr1RjVk0a3n65qSPftZ1H6W5JgS
fWMvYJ2i4IL9KxhQX4EsSl3bBQt0v1kN4Vbbj63jx1npzj6RgHxVJFhlXdbY
axDIU/fO1wvgQRY9drUBxG2hzZ5FA/120ynIokeUmDR7JtuXOqpEObyKNKWQ
Rc2U2lK9151tWHUi/9CFUmKp0tQp2RBarO7DkY7Re7Bj8prBU2QfOLrCyN8q
/in1K+Hlw3Ew4ILNVeSuK8FveU511yoPlsONOsZ3H9B5D/EhZEU0Rv8+qCpk
ervo3T/Ra1H8JZQ4Xm82sNXr7OrbdbaUGCTDGww+p6wa5GJGycaIPBNrV3qw
9YJ4y9xZoWm1wFpdojcH7g5gIUbz6K3fAEEV6Gylt3xFG85FgUbXfyrWfhd4
bnZMaoZgfJ3bipuHKToTUjQyBtDy563yYFtfRh9Box5lBNfXfAmU20iJ8Xem
wWzTP0G6Y36/nKGVqfCpyglAMhcoSi+am5s7+HyU40cvSiKODpVFSfsDAwPn
z58PF27duvXbb7/NmTNHnp5enhFsmGdzcG2AbyW5f/eEjKIwPd29jU2tdfVN
gsamjs5OiSz/GqTNzq6ullZhY1ML5FU4CeDU0CRogPPmBvRjC1zVKmzv7umB
nEpUrCKRpFXYATeoFzShoX+RzBCdeFaN3bD8QNckeCuza7pcE7BrkicLv/RJ
LHoeGSLH3kljCqJY0yKzEOBo+ZEc9zw1L46yJ2fb6eLI7MamTvGDhzYSJwpb
u3V3Hz58OD8fJxtSmF4Ufu3euHEDfuaMePnkhNzgtaz2IDF8uOq+HP1Afnmz
lHsDUusgi+6JEghv2gOLSXIWhaBIp9rQRTES5HY0k/jRS1DCUEO4l8PVitWe
yFcFIaI7yy9FzqJMS7dkY1iRujdHJ4C3yj3P/HoziF0rMX2GwkanCGhNlZhM
T4YXiSn3VWQ+av8KZFFhovP2iw0r3fLMoqWRTPokzK6zJSooEiYXUxM7LAP7
quCUsWNt2PJHFOmb/ERCzSrCotjVyBmPdJNPiYrmXg1fjltCDTixmdadA8lQ
mg7JeAFTU8zQEtpMnTb4ALPoAkr/A2Cq3NzQsjkCsSi8GTR8uWuD+TWt6BVG
yyx/TkOAPMHWD+QtPcE6k9kIzJaL9T9k1mPN6toP6X1LQHc7oMTM9m/vYVHX
dW6pLctdc7MrkB21GDfvUn7T0hN5OiiVLfpwNo0pG4vbQKoXBeW29zBhBSFJ
e1Bpfz9ejgzvkfmgKJQhbUBY6wh3ZAaBr8zwWBe2BzXJEY3RjzSLyslTQ0Pj
9GlU+DB8l0gU+tdff/3f//73m6Mib7zxBqzrhRdegLWTKE/D0IvCjUnaI0ND
Q1jCW2+9deTIkbCwMJJASn6kBEpHUHUpj3X/+eefD94u4jEyQFE0QKM70Xs/
TO6JQ88wPb29rW3C+vqmekEjhMyWlrb2js7e3l4Ep4g00WAWTgrBkAneC2Kx
pLunVyjsaGppg2haV98AEVTY3iES3UMXY/H6ZKT1orhI92RNSi8VWl2u0PJF
7qiaSJvBU5hr0shPJEi+mg9nlSd7/cnCUxmCmlZZSFJ6ZAJAkaemp6fHwcFh
8GbzQxXymLNYrG+++UYxvktoHpPXRFgUnjT4xWESWtAmUylfyGlc5pp38JKg
+9ohpp9FX5EcUaKyfZi6u5TNS8iDScqiU5hINbineUypCgpQiaw4VnuxIrIa
gGwUVUIzO88WqxAWPZFrnSAEMVqSY0qIb9Fw/CwKFsI9x5TdICyK/OjtEIt2
xh/bf6l+uWu+E0YjUtqhC2WrZREA4LX2TqwFo60He3pEftrsrlaS+KLkrPom
o7Mqc3sXG4QU+CaUAycDSu8DnAB0AWU4j97xHWhASkjadQtDvODh72s/Agd/
rS+vWhdWquaNDJLhI7k5vKizV5qqVeYq1bTUjQW/gJZ7sM9nCsCRJWL9DxBz
miyk9edQpqpoW7GYPvAbQlMT2Ri9o553aoOyJ6sSfzcRte0NXutKdwi9fC1/
vooXZ//5EjE1+mlhH8GiUvZDIEeV2YlL7MSldpIyO0ynI8CiEC9J4XSFA13+
2I0rpDxJVKywAbA9g6vFHrfWcZywqFyqq6uFQmQrPryYTlOnTmWz2U1NTQ0N
DY2KF4FAAOtSVVVVeoJY95C9f/zxR7jA5XIhSFtaWv7222+TJk167rnnVqxY
ER4eXllZOXAvoj0b8pl9QMgZhqVVVVURvehIvZIm+u3By33nHP7b1yfq7Oxu
axM2t7QKGprrBI219Q01dQ21dQ01tQK4ALFTUA/vvuZmNJLf3tnVfR9/Pljs
2Ep7jySO23rwQpk6ck1ir8Exmh6WPv4PMOFg+xCu2BC0jIL4vkk1pY3yeAjy
3FZPdLrgI5mYmAj7FqDI6ygWi+E9pJi8Tmh++k7Dak+pdlHVC9GCRBaKPK1Y
uNwtz/yKQHJ5K2XxbD+LHlWi2eGgq4F2/Btt/RLBSIn5ZHDq114GHDxfDMtB
ijVkfcqKw37T6BsNV7f/PCJVXX/+Kvc8+1tCcFEVjfjbz8JO9DMl1s8zlSlM
dTqyF4XV2SG9KGP+TN/l7eZXG5a65gfiQD0U1oNZXKqQU5OyF9vpWhU5qnH0
RP1RRHbKJBRjFlOm4tV/Vs9kodubKD/gqd0cURKSUARsNCl9nHfJZCFl8CF9
aAVoR1eZCTlKa71Nr/8Mhak3nAd2fVddULz2ZKkGGlXhI0+oMyUDQl6gpeuc
Vki8yGbDkxOdUQUOLUYFIs0qcs+nrbXRRuI+xkYPoikCVJOFEr3ZwFojOLlG
w4fb2oV6VGJ9mlbSpubNxeGIkWHqttPF7b04XspoD9M/hEVlekVHZPPZ7AY6
PUG7BxB6gLrjTMVI6EUrZfaZ9c5oejTiImRFhqyOoNoJVGO2bD4BBtMGZKp6
fGhNGhW9qKamZkQEMkYdXkwnyG8kj9Voiq6u7vBYlBx1XV1dZmYmUVYYGBis
WrUKLpSWlp47d27dunX/+Mc/IKB+8803Tk5OxcXFA3cnytJh95Fye1FIvMRe
dAQGBGVDJJUtfS3dYjDBpYMThrnHsnS4hYyfcy1tCsqalN0Ee+9+1ySU8Ajn
AfxDsigKjUh0pGRwcLUnSy+Q55ZQy6vrkUidsoZvDCH3XYKPZFJSElBwrPvZ
s2crIta9zD6wDuI6Rne+ijd71xnUdxFuLKjvXu6Wb3+9FkSvhahJkfiicG4x
heGdAwxFub5FW+EMnvYzUczP4G+7KLDrTCFEAi3s2qbuzb1b3gn6o79KfVV0
kL1ovmtiCzi3gjJ9hrZDLEpZvySxm8m0FNP12SSWKU1iRpk/y0QZOMXXLXHJ
J0ahRKXmFl9DWBTWBfHJ4lI56dPG0eP1xxFy0nrFzIHzpThvmvSs3uQhg0xK
NqCwM7Is4mYBMFtJrf2IIdpL3fdpOwNGgl8iZ4/Tmm8C5F+/QGL0MdjyWTmL
qxNSusYXfZvA0uCXCJA9daTAjNJ2TUiqfhwVb/7V9FKw70dqLRqLJyzKuGwg
jaO9dtE40xNiUTT6v/Jscukaf36PSCIvilPbrYPsxpG9qLoPZ0NooUA4+q+2
R+pFIQRSZfagweWij97hrT9a7f3Vw3xVdcZhIHChy+0QRlY5MhX2DFJsYpKs
wgt42J2oT+mK/n/RZvhfpN6ssCcaTtDoknt1Z/61nRBH+3fBReFdZMXiHZvz
zHsKrUVFNpFeuqDOWVJmR0ojlQ6okezuIC61bcg+JlWo9rcWFzugkaOvF83J
ySFj08OOdV9TU0PM52jFiwSb6g077xJ5KaSnp1tZWREUqa6uhih+H4cnJibu
3r17/vz5L7744hdffLF3717IrgPPj/x4h3CiZdLb2xsbG0v86J9cSPCbQkHX
/sjSpo4JFh203Msv9ytLZYGbpO4/9467D/yPGR9ESprQ2SfZc65k+QkWypqE
1YlIFyozB9XyHXOwHPrkK225NnKwQsv4JQWJlKPuw71TRgJRPunZgw8y/KBW
tAk3LB/2NoqxR0Vzj5uE6PjafohFzWLKGdmqura+ZW75bjdqwQUNGYvivEs2
L9Ol1+AGlMccGmWTn4n86C2mgKCvOkTMlvBCNR+UBFbLjw+/AsrwKKo8XeyJ
hGplT46uP2RRlldSAzi9hDKbhHa3gSz6AuX4V9DTwgjLKJc34L+45JmU2WRw
bpX3rarFLvnpOHAT8VUJTa9fjaNRaSHO4Ry8UNb/SI39s/UHE3LqukX0jjPF
ajIWhdcxv5p8SjDEy/5gTNXFxAJw+BfJ2rnMemS9yWi/y3jslOLlJV9K+x0G
ZU1aIDGeD0w+LszhaASVaPmyyTWyiu0fOpR97/ToBfC1fDnq/oW30rhg97cS
w3kyFn2fCTwibd4ZB1rnXRTR1GSBxOAjcGjxlUTO+vDinj6xvKh6odg4uAg+
4LAuTV+OYTC/srkPjBsWBYhF7UDLic06X0X76xVlHL4aZrJWdVFpygHQ5Apq
nETFtkilCeGtwQVxIGTCZleqHCEiqDuOVJcNLuJSO/R7nTPcHv4rKbEFtU5o
ud6ZKrWTtLmf9dAOPa4BWt3gZkRNChcg66KS4ZZVjqJiG1Rak5uPjcqtiA1U
jVPC6XVA4AwErpJSO1KsGBV7HNUrcKHK7cUlsNlu5ekHLPcsRjgNV9Udl5aD
q+6Dy9WOWB87Bix67Nix+Ph4MCw/esKig3d9enIhjXxCFk1JSTE1NX1w1X14
CY+osLDQ0tLy22+//etf//rWW29t2rQpKipqoCfskMxKyTadnZ0ODg5PFl9U
uhf5iixr6lkXUmAUVCjsppgBWXz+ANM4oLjByCBaOXzV3EiIVNfR2i3ZFFZE
vJNISHlNqYOS1E1p7NlyWJMWhlItPKEFFOGQt9qLfasQqXroJ/Bwkaef+Oqr
r2C3BhQT5430Klwud8mSJcRSXRF6Uce4Khxyh6+DEz46x2PvY9yfwa/U1R5s
z1v14NwysTmKAooGzW1eopz+HxDkoRb6f0FZTkU/2s2SWPwF+H8q7OpZF1qk
4cPBeTl5a/y5xH2MkXU74XcEsEw9f2SKHJxSBU79SGI6ocBQkEWPvw4kvUDU
Rft8Qln8Bdc4U2z+FxD+06nUqp+dWZxahEbElSaO3bIKG6ZC6FX15myPKH7U
kU7I40XuQQBZdFNYoTr6lEBPELyOFc3IskUejML2eu3llAKw9ztkJooSgH5K
ab3FBBySlnPrLK3/IcARmSTGC4HxR2XZOZpBZZBFdQN4qzw5HrdqgKzLIwW2
dInXBvM1fdhawSUZyXfBjq8po08wi6KwpTTOaI82vnaS1kKZnuDvEFbB7v8m
3czaH1UjEuMkesR+W0xvDitSISDth3qz4gbpd9AoyiNYFGsOKYSXboe3/FSe
ehC0eoA+n7iThjb7fu2odXQ+ttz60LKQ4xq9RdbOR5cFO6lb7fr1vLdOgL2K
6Y7/8W/uAc0n4FqznT9b7/2Fd2N36rlNToeXulmtPrjxhzaWOStux+GtP52w
WLVV/6uYAH1Yi6TUHuJlRtRWuwNL7PYvybm8ozH3mNuxFVZ7l/jbqdbePbLy
5w+2r/2mNufopQD90uT9jgeXetmo2B/4LdpPz+7wUsfDS0UVDpcCDY5u+8lm
75LUC5vC3NZ8Mf9fCec2CIvtTpivsD60NMBOtavC/pyX7vFjK45t+x8/YS+o
d5EqdUeRRQMCArKyssDQWZQ40UMWHbxa9cnlQRbV19cHQxyjFwgEOTk58l8e
fPsQBezAXyoqKk6ePPnLL7+88cYbf//731euXPlQs1L5OXzo+K/8xbdz506S
d2kYJ02+A/m8LW3s2RRWsMqDvelUkbBHcu8mfwiRdY5/rFaPMyGnsK1bsjlM
qgwZc4BULJ1iE7jEIhKI8klvHvjYwg9qEvlTcdLc3Hzu3DlF+NGTAW00aI6J
jnijn0zHBpm4l2jrkugFcL2SBeD0jyIpi86krKbRJ94BnQK4BRWxghAjChBq
+Rzw/qi9pUEvqBCPuqKsPQbBfNK9MLJO+AavdRVhUW/e2bQSEPwFZQFZFKf+
tHqe8poLRMgagQ75jrKYTNm/QtvOFFs8B0I+O3u76hdXDjH6lWCflLsVHRBr
dWSBKzeHF9CKT3DwtArpCnpEtFEIH7IoDpfBg19wAtmoGSE6v/TG67eLwI4v
JYafoNRIOBk9CLOWFpKXSBuhWPc4Lv0CWv8DcWGW7c2mJS658GMBfunkSbWs
A+qFX0Px1b/BDQJLc26mgC2fUcYf48xNCymd9+ikSLIZnRZFa/4bRTSFLGr0
Mdj2xZ0byTYJDfJEJeTDcseZIhVPYnDCVfXi8OsJSI/m3fD7LHpg4w/cG7uY
Omeq9jgvYY/dwV89zFdArmuvO+50aKm3tfKalfM7C6yqMw4v+2kOU+98J2or
RESm9niwo5qw0CY60MBq72Jfa1WIf4AOOOuu7XJ0+aFNPzRkHwVt7hu0vjzl
qglaTzBVTi0sc2PNz8szDkP0PbTxe7t9v1rv/bW92iE20KC72CbESSM1cqOo
2Gbv+u9Szm00UFkE6CBfG+Xd6/4LmMDjR5bGh6276KffmHMsM3bbZp2v6rKO
mO/6GbR5uJmuhI2ErXU9usLNdIXJms/Lbh+GtJxyfiNocKUrRptFY2NjCwoK
wHDH6KdOnTpqLMpg12a4oKWlpTSsHKCk/RAjf/jhB/B7bSY8OZAwobS2tkZH
RxsZGb3++uv//Oc///Of/zg7Oz9oVipBKSAfzqIikSgzM/OJzMZk4yxlTQhE
1bzZ6r7c9aHFzZ0i+OoR04yE+oNMNA7DPiau50+XTLDocM+bdKhCQ0MjNTUV
KDKmE+wnXVxcRtZpkQhBgmMXy5Q9OdoByO19pTvrcn5/ikaRhN50iu+T2gRO
fdXPopZTae9PACVCeHllI4p7j52MJFYvAPe3hbXF2kElOC045EPu1tPFHT1S
/xF5vHRIvLqIRQsv3eYB/3kSi+dxfNGZtMVf6JAfgRjlO2PCf6PNJtGYRUUW
U4HfnPOZNas9uZUtmEXx2S4U9EjH6HFdG0/xe0QyX5WJnmGIQk5YZy+tH4iS
ckoTgIYUNncSg0zp3XKJ25GQzgfbPpMYzZfGtNefzUR7S0upKqA3fk4bfSJL
kDQHsBJ7aeCeUHXoYmlaqRDce2XIIFe3iA5Irja7JmhMuwXWL6CMP4Esyph8
ilzyWUnSLbPiKL3ZNPKWghvMBxsWsK7f8L0jfZDlL4PDF3DqJX94P8Obmc3F
sUzHG4se2vxjwa29QOACOjyzL28z2/6z5e7FzkeXR7hrB9irBTupm+1AyFd1
+7DFrsWQKouT9tsf/A3uG+aqGeqi6WOtDJE10F7tRvh6ptf37uVtOw2/cTdf
CTkQFhjltzbMRRO0nAD1LvlXdxppLDrjoRPmquViuoJ/c+9Zdx3bfUv8bVUk
1Y7+diopkZv6im0gYSZHbvC2UmZAcKS3doS7FiMOOOelE+mjc/2UMYTkMNc1
e9d9W5qy33rPL6DWef/G752PLos4oeVroxLla5BzbRdsHqTlvLidoM6VGXUW
3bRpE4QrMBS96PXr1+Ux56dNmzb6Y/Q6OjrE7R3Oh6QXJQKPYqgRp8kI/n0a
1Fu3bu3Zs+eTTz556aWXvvzyS7iclZU18DTeN+5PTlFTU9P333+fm5sLhnPS
0Pbkkaxo6t0UVqTqjfQJmn4cHX/+wQulR2PKjkaXHYuG8/KjaD5+p2MxZfvO
lyTwyDDrEE/DhNwrEyz6JCIWi+EneU0NHnZUiJ87KrOoqAh2VorIu0QKg48/
PCdaOF348hOslGJkTEvJHq3DUSV+yfXg5Gf9LGoxhfb/XFpCqi1l9oyURa1f
BM7/11KSqR1choZckWKKe+RiWZ9EGleHFMmv617tydb146j4Ft68nQO83hdb
vkDZzkTOSuaTmPNrAHa4py5oQcqVsqjl88D7nai7VTqBhcS4nTSvrLFH05eL
Mx1w1X24xiga1YTp+zCFnLTWLokBZlESgmnnmZL2HpqsJRtk1YiSUvLB5kUS
6Uj6AsbgA5B8QVpIezO99RsUox6Fe0IsyqRFkTUUCa/04HeC9Gox6MplxtF4
6B+FLUUsOpspyZduxUmj1uFwpiYoJT0wmlNwPe4sG322ULISADI4QdbIKP1B
AAp3n1uBNhhfLNritn3tNxAg+6ocC9IOrNf+khW/x9dG+ayXtqjNPcpfPy7U
CLIl03qiPPXgLqP/gjZ3dvxuh4NLsmO3bdb7qqfVIzFiA/zdw3wV3BiI/BJO
m9js/Q3ybdXtg1Sji77KopDj6nAvusqpOd9sq/5XLVzLFpbZKVfNKD/97Njt
3W3uG3W+uBu7LdxN62qQUV+hzf4N39+MMIE8CUBIqLOmn70KoPxOn9C22vML
bElHuUPxrX3aK+eXJB84tOkHqsHF3WJVhPsa2NpLgQZwQq5Pja4Jp9fD5kEG
vidC1KiwaHFx8eDzUZJt2tvb78okJydHEaNOj29AeXl5ZmZmdnY2nMNlMOi+
ncBkUFDQwoULB7/XwC0fCqUFBQXm5ubffffda6+99rtmpXChvr5+2MmvpTlc
mnshdah6Y8tA5JzC08RZ/5SlExs+yON8UvXi/Oaad/oOClooiz0zIcOUCRZ9
EoGPqpeXF2RFoMhv6u7ubjabrQh7VGLjsj8S5XUlr++V7qy7FWjkBflN409h
5/iagMRKEDRfbDFVzqLUqcXSEvJP0seUkBe83UyJzXTg+GoT94ZOSPkaH+Te
vtqT43i9376dIEGRoBfRoy9Xxa84404qOPGG2OoFBnniz6LMlOjru0nJ9PWd
lMVk5EdvOxNuALz+HZtRuCWirHeAfWBNS59RSIGGD/KEksZRF/aBJ7ME/rOK
9P4VtIt0A3goBFMAD74RzKIrKBLNSdZXFLUy6YmZYPNCymg+TcbiDecBbrq0
GHEfvfN72nAu5saFKJt8XDDaV5rx8xF1w7IprH1NuSgNIgr3XTefMvqEqeRK
t6kppLZ8RRt9jNSt6xcB/XeKrsVeLkVvQxLgixxAQGrdKmS2gT6sVnmw0kva
H1OvYuQRLIoDOiHHnybXE2Yr12t9sW/TD6bbfkw/vxk0u0FWtN7zq8X+X90t
VjfmHINoCumuIedYkIMa3L4q4/BZd+2eYlvb/b+a7vnVw3LV8aPLIRDmXd0B
2j1zr+yMP2XMTdhF1JVWe37NurQVCLBffINr4pkNx7b+aLl78c2I9U255se2
/8/q0JITZiv6Kh3Y13cf2QIJ9tBptzX513Zc9NUHvb63zqyPDzMGnV43T69P
PrfB30blyI7/eVsrm+74mXNj9wnTFVEBa7tK7a33LDbft8T5yPKuYtuTrpqw
fJu9v2bGbhtNe1F5l6uionLq1Ckw6snZx1DgS2FE4lCRsfiBv1RWVoaEhCxe
vPjNN9/829/+pqysHB4eTtyU5AJB9KuvviIGq0MdECRXjV/fvSmsEPtKcxGI
+kpTKOJsNVwyJ27U43nSRZ0km6QhpicUo08mEyw63POG9uzq6tq+fTv8sgaK
jOmUm5s7b948RcR0Ajgw456zKJAXidyl4cthySz6iO7RN1kQmlgE/OeKLZ+T
sehk6qIOIHxSEENL04DOkNjOAHYvtebFaARXavuwDYL4y9xY/jhSOkZHqaNc
Y6fYOKRA0ydfPag0PzMRuPxNYj2dhC1F8e3THKUl33aSWEzGlqgzEIu6vx6X
lnM0tk42xIMaD+/bbRGFqt5IB4sUpP7cIoFcDzbRMwxJpFenvLkXqykQ3q/y
ZLngzAJSw3w8r+gE+bdSwHqUawmnjP+EMVkAakukxYh6mcMraYOPaBPk1sTo
zgaRLqT4x9fO0JhFE07jwE04VJThx/T2/4C6MukmnW30vl/ptR+hiKbrPwV6
71RcuZBcjT9M8LcHef5i8pphs3VwJLfVHuw4zuinhX0ki+LAnjinfKMr8luv
O4785RswvNU6IXossUXj7NiTHZQ7IM90gQvapdoJMh6a1zl3863Qj41uaF7r
xFTYIa92FFMUub2LkMO7O/pFmubJAW1WheEQbe8MBG69hRALsY98HWoDapXA
mbjDA+Shf7x/AW5W79JdYIUKbHYDNaQ99ijKaIOzpNgWNQO2qtFFUoqD9pPW
jroffXl5eWsrGicdkpJwYJylEW/SkBowpF6dtDY6OlpLSwuM0BuBNOY+A9GW
lpaoqChDQ8N//OMfxKzU1dVVblbK4XAgDw8jWinZ9m5lJ3xCNX3gNyOP5E9c
48fW8pW5S/uTeJLIKXU8Tzr+/NWe7MgsohedeOc8kUyw6JMIfAy5XC5J+aE4
gV0E7GlHnEJJcd0iatvpQhVvFuwNYM9gEMgtaSTGANIPvfDMlgvJLOAzW2z5
PPGXp8wn0Tf2k0LosnjKahoJ9ITiMplPlhRc8Ejr+M05e9kJln4gr6yph1jQ
yypFC6G3BStc837xKOZn3gCOMyU2L+OY9rPoo0rMXV/plvwLSAFrOwPrRV+C
yJqYnORwown0hypFg7NHosuUSa5z7GiTjZW6E1+oQxVGlja1uUNM4vHqBxYs
dWMFpfU7smGhm8SgJukaMEaj8Dj75ye0yaegDWkG0EaUmHEwZFDiJEiMC2i9
2cxJc1zB77Eo1osy10Jo7bfpDShwE8LOg78xwmayHr2DjynT+nPQ2P36RUD3
ncbL4cUdQH53EZa+U9r+m2u+bgBfN5C3/IRcLzoOxugHQBpVZg8nHGpJmiMJ
JT9CmOpIl6FwnXLVIlVOgnyiBYZEeap2oiukO6KoTZWOTLkDCQoqS+pkT5OE
SvhfEtmJqbQjC6i6KieyMd7Rnq60lxWOY4SWo91JPFKatKTKCf5I4d+lO8pi
kOIy5WmbHPGxOI4ai8p7FSMjowsXkJXIn0EvSo66sLCQHPKIF/7QEfyEhAS5
WenXX3+9Y8cOExOTge5ORL86SKon3UluVQd8QeAsGCifOEnnremDcv/B/ucP
MUGiWOnOOkNYlJ4YjHsiGYcsqiWdOFr9yw+ZxpZF5UZH33///Y0bN4CC9aIf
f/zxiOtFpfaB3WI0VuLDgQSi7s3dGFbY3CX3m0ZbXOJ0xqdlAvc3xZA57chI
+jN0loe0lNo7tMNfUZQnNMj+qgTCJBclQDmfVe+aUF0ouMfGVTrOi//i8htd
U5qbuQmMNVK30pA5kb3oZIYVJi25+jaKFmWLVkmspwOnWXcTYzxSyYVj5O23
j6ta5ZGvi8M6wRs4RX5lJ2ToQk5pRGbDCg/WSg/W5rDC6tZ743MyaDicSr9E
RtKRsajRx/T2/zLt2FoP366M30FG730U6wmHwWd89uIdH/t0oELxQOEVf1rz
TWbDZ5Bvab05tLUOhFv0Oxnit1wD4RZ57pssorXfEV8OpGWrCJEyOHOc5eWK
lR6cFR7sY9HlXb0UM7D9oyGPGaOXc6kjRlN7KadhkJMGkIcLsgF90J+qHhIj
ztxUgUPQV9zHt47yZPfSFE64fBmOkrk9059xCc+lpcnrcpSXQzYgIfTxgqx8
HPSe5GySppGqkO9oL2vP6LEowD0kvOyQlIYdX+gPJ+QYORxOaGioQiuSG4gO
/JGYlcK33vTp0994442NGzdGRUUNjLA9yGilpNScyg79AJ66D1vHXxq4wyiY
bxJagKdCPBWM52n9qQK9IG5MPtaQTLDok8lYsChnjS+88TiYNjkPgCgHNkPF
m6vmy1P1ecTky1Px5mj63r/v6OtF4ePW1tY2bBPuQUpXV1d+fv6If/KTS1/f
JjIOKVD3Qcaiql6cvedKxJScGdEWGVXiO+lJwPX/xNYvUjKrToZ/EZCT11ZB
u71LWU9DPGn/KgVZNC8EF08PrOVh3RL+qTKRNlXCDkoofr7EdjpTfEW6upFD
IU0szlNvOx3Yv1R0KzQ8p1P+wpGmXkqoXuHO0kU5ntBwSTxPmm90ZM/VUy8M
MdqUqhiZtGLh6TsN9UJ0Y99zLgltJoTTBh8gD3qkvZzLHF4FuvDQAI2DGJx3
Y7TeZtYvQjmSdN4Dbpvlqx5dPSNl0WhvBqVt+gzFbtJ+l5HuS0vrdd1EY8pF
+Z503mXOHcf70lJtu+xxFknoS/nNsfnNnX1jMPYqY9FYUG4HKp36MU8KbwTS
nAasuu9f2SSluP7NmEonpsIJU6vj/RtXOt5TQpXTw4p6YDOEiE4DfnSSUjHG
VLgKAyf5d0ALZa1iyC/yuqqcHlE13rfCBggi+s/PSIjc0NHd3T0jIwMoRiEw
3oQc4+XLl42MjMBo4fd9mlLYhsOHD9va2v7666/ErFRVVTU8PLy6unrgXkRT
+qgWkmuVXdmhG4Bsw+AE4bOiubelW9zUKW7pFDd3iZvG/dTYJeoRPf133SjI
qLKoLzLq0/Qv1Aos0gws0ggsVvcv0rg3qZOaL3/rmdK9p7lbQ/K2heZvP8Xa
FsrefgpPoWiC/249mb/vXIFuYIHG0HF0xPWi33333eBTfgxVSJnFxcWGhobd
3d1gRHseojwsa+wxCCzQxO4/yp6co1HlQGaGTbCkXMgUZsQBp9ckNi/RdjMg
cNJmz9DlN9HOEAPEPbTf55QlDkpPDD6xypSmZHlWH1U72aAkjjbFbvi2L0sg
6zr+lam7SzZgmgsph/8nwQAstp0BbJ6vTfS5ViyWnwPS/kDkq4LCOun481ae
YF1h92cInZAnl/uvIGHCy35IabluAWJRvTmMnQEgVEDG2ePD6DVvonF2yJM6
7zCOxvIdHyf4TcdEutJa/5buq/U27btXWiy5IYOPQhZFY/Qk8WjQ0QebeF97
x+KjhES9iQJlZgjAKqxHaJIVVWkDahzQfPiFj2Crfm8qtwLlcMEWlJsDwamH
XaJhnF9GTjiFhYXffvst7IQzMzPBn4NFiXR2dpL4LaMsZCy+paXF2NiYBGVt
amqKjo42MDCQm5W6ubkRf165SD9xH3gaST99t6JDP6hA2Yuz8VRhR+/Tb2Ux
IQ+VUWNRLT8UdWdjaKHr2VS7k/EWIQmH/OMtQ1PWhRC7C6ws9eebneM4Ofsc
2L1v7459+3cdOLD74IE9Bw/tPXx4/9EjB44e2X/02CHTfXsOm5paHb+Yp4nS
enKk6T7HQi8KH0w+nw+JdCQuxUNEHl/UyclpxDONkn6AW9ulhy46RycAsijb
PLYcyFgUd+u0kAK1WVHAHikn0Ri97QzK+kWmKg01j8bpF0N+lIYYhSxqqkSn
4rDnNPU755bB7MG/iHznUTL6GbTVNNr1LdAh7WCZ9hrK80MU/R5pXGcByymt
t47nSINn9Lf/3N1GVS9kYKDnz1vmmn8xFw2XSCZY9MkERROl+4N2DliBWfS8
K6XzPiBMqPMu7bsPrZLpNpm0aHrNWzTRi+q9x9gbSNf+TpW45HBbZC8KQZRw
7EkLvIpisFqVjvFCGeqRHz0awWc8tj+0ZGxeIjMqHuUbQV6dMB3UhaJRaUH4
SE1MPZyfFlUFV2XaUbUjXLjCpjBQH4aaWn+Sab5x7zkapsgVdJB5Xn75ZRUV
lcjIyIqKiofmCXr6hBx+cHDwZ599BkbdLIFUJxaL4VcA5OH7fPBv3Lixd+/e
efPmwevy5ZdfwuXs7OzHj+jR2Honq7xTy4+37mRha7eEuCowsmTqf4BJoWf8
TyOjyaJqPpy9ZwsPHTDT0dB38ww57h0WEBazIwINEMO1Kj7cg+d4Z6ITzLxj
DnlFHfO5AqejPnFHfeOO+MYf8Ys/GpBwNPDWoYBEh7AkQ4NNNq5B60+Xq/uw
tf14WigoBG/09aLd3d3btm1TnB89qaW5ufn8+fMjHgGPXPrmLonxyQJ46Q2C
Cpa5swNSUczn/jPDUCL4Xs2OoK2nSQiL2rxEHX+dEeCoj5hFmfDllNkkzKI4
KFP8HswAv/d5S1iUFYrCk9pjFrWcSnl+BCRS5GbE3VTwf+GPtO1MWDhtpiRK
tBbCno+RkKYRJM2t6ljpwZLG8HFnpRRPhB1WpBC7zXA7xISEGLXeZk7bS1eR
Mfq78czaj6TEqDuHtlwjN+l8ZLGoQ8clBx2ltd/BLLoQmYZexAlAYbGk5LQY
Wuc9pIw1+ZTS+4B2MHyE9Yfst7G4DQbYRitiYsQicV1dnfT9rqhaFNLyJ78c
cp/3oqKi77///vXXX4cUCrDv0pkzZ8Cfw3eJCDxSRduGPVTIK6mxsfGLL76A
nAlkw/f3nXk+n29mZgav0SuvvPLee+9FRaEgw494RUoTUaWXtG8JK27poqS1
TPThfzIZZb3onrNFu/dZmBhvsb7IMwgtNwwp1vIlqQY5awKLrUNvuUSkaJ2s
0j1ZrBdSqhNSohtcqhNcoh1cqg3nQSU6wcUqfsVHo8p3bj9w0OLEpogylDh7
7Mbo+/r6fHx8iDuhIr5PyUPK4XAWL16suHz0SUVt8NIvdWXtOVfW3CViBr7g
aRSnns4/RaPwStiJ3vp52mMO6Kgma9EsykCWemkWik4fvVZa9OObSlg0ywtx
LIRYErbUd+HAfelIVZR6iVDuUSUm8RiuVMrkpHSKZiA/r/BgL3NjucTX0FKl
6URXphghTBhiholxERpM13yDjvFCqygJ4UmGn4VWoVhPC2n9D+ijq0AvunUf
dz/IrjjjuRPloEeJPhcgk9RbZ3ClMsrlpNM674INi5h1uGQL9d9p7ZjdAwqp
mPQGfH7BR3PnktiSfwY1oFzkKjgnJ6dp06apqamR+PbwtFRUVJBgJn+GE0Ko
LzQ09D//+Q8Yo0OGbYAfRA/C8INQWlNT4+XllZycDB6trkFGF/ggWFWdzZ1Y
vyHtwZ/+qzkhchkSi2rhILRa8oXBTPfoRSGLFu7db7HBeMuh8GxVH54mTnut
5cfT8OXoBRf5nbm272Smum+Bpi9b05e1Bq5FC3j4Hk9avhxVb86hc7ztW/ce
MHXeGlGKE2fjKkZXL0oEPowxMTGKy7skrwVWoSBTKNLoYkF3Rmm7kCTrHLCS
RH1kcgPpY0oICO1fgcTIBHwNJCgfB0NjN6eEA5T5ZHnoUTpi9e8rRfHOcEan
2qIIUXavINCF+578SdooUu8lYwp7NknsZ0mOKdEJOJAU/ZBMeXk1nTmVnWIS
87z/sCZkpIVCSmkm4DCz5i1m/afM+oWU1tvMtWC0Ct4MxFleUMls/5Y2mgvX
Mms/ovcuJhGfHsWi2BCAfHvQjNM6Wn82STpPG84FrBRSslQfW5JL6c9Gjksm
Cxn9D5jDy0flmMePoJPU29vL4/GGlC9yHMgTPY9y61D41f/tt9/OmDEjPDyc
rCLkA7k0LCwM/Dn0ovLBMj6fP4a1//zzz/n5aHTsoS+mB6OVDqJkPB+ZZg62
zlGtbUIeK0NiUXUfLtxGDc0HOaGNIUzioLWIRXefLdqz33y98eajEbnqfgXa
ckz1420NZfmFxWw8JR2yv58hSfwxX46yN/dwZMGObfv2HrLbfqZEDelFcXRc
398H0RHXi3Z2dmpqaiouHz0pMzs7e/bs2QqKdX9fmfeWzhAlJH3XhzqqhEI2
obHySXTYErwXTaz4kG7TYrIE60XROPvJHxiq7/ebSlg0fh9mUZxC1PxZ+vwa
aYNoMdyZittFWBSVDBfitsp3HNj4P4MyZLwIsdv02YOG5k0WoXScBh8wKRfx
Klram/R2MQd+o9d+hGDVaC697VtQW4Z+f0xYJ7KjqI+x1qEhZEIQNZ7PGM8H
VQV4pdSPHlTwkCbWaB4w+ZQy+JDev+T3XaKeIiH3eUVFhZaWVltbG1BMbzDe
RI6Xnp6es2bNUlZWFggE5Hd5l8vlchsakCn5mJ8QeXDOIcmQ3h1k45s3b+7d
izz7xsRetK+vLykp6XdvQnm00kEe4IOm32QEn2EUZD4qf3c8/c/R+JfBsyhc
teFU4eawok1oKhzcVAAnvUC+XC86gEXzIItqSVmUo+LLt47IdA29qhNUvOY+
73iiXEUZGbjafijc06FzBdu37d+912z3uWK1MRqjJwIfk9raWpIpXnEiFoth
T6vQPodkWbqvAqyqQkzI3DlBIxZ9ReqddFYF7wM/e7FypugyJU8PavUc7f8Z
Q/VKC32MkPHcyxtp8ymwWJqE0L++i6yS+qokW9AoDSgeozd9honSl7frvobC
7mpoyUsmZHiCvdoYjx0opNL6z1Cs+3Wf0FLtJckVii/CURU0hr5+IRqp3/Ql
KOXgVY9hUbyqu4M+poKG5kk6p3ULQEs9eRtJ75aGanrXT5TRXASraz+i9/wP
9I5wcInxLOQwm5qaPDw8FGGxM95koHXojz/++Pe///3s2bNkFQFU+eHv2bPn
6tWr4M/hR0+OMTMz08UFZTQbExZtb28/cuRIeXn56DdAETKh0BgPMhgWhbCn
4cNZF1IgaO+TULRYQkvoQU0iipZQjH1cJckQ/SgW1fTh6AUXHw++ZHX6tppv
4X1tkBqUIs0qR9uPq4pZdMf2/dt3HNp7DgVplytXR5NFSYcAH8mvv/762rVr
QDHDQ6QWFov13//+t7MTpeZUiF6UnIaHFkzCQqbZy1mUNnuWjjbCmCr1bga1
WcjUU8qiz9Oec6TD6I9vKT4Q6qIOTjo/Cw3Tmz3D3HHFqyipNWlOAGX5HG07
E26AtKYRK2SFTvQbYyX4TnHexOjOhixKG81jNn8JqgvRGppoGjA0WusgzyOT
hWg83Xg+U5CFN/gdvSjT3sbs/5UxRFk+Ud75rd8wQtngvlTj2k2bqkJYpU0W
0YYfMTu/B20N8t2feiHPfmtr66lTpxT9/TvmIjdCcHNze+6555SVlYmJrHy8
fiA/REREkPHiMSeKkpKSlJSUO3fuZGVl3f09gdvALeH2QwrUTzarqqpKTExU
7ME8unb44jM1NR0FFqUoiVgkEovhNPICC5aIJY+KNzUhoyyDZFF1H67JycKW
rqG6cqPSHa5VIxYNeDiLosJ9uRtD+b6noreGsOSA2j/hwPhrfOFmqAQVb87B
SP6O7Qe2btl74BxPzZurLc3ExB99vSi8gZuamkY82tJ90tbWBnFXURZijzkJ
jIxFb5nSpkpSDyPIhDcO4LW0lBgbOBLrF2jk2YRZ1PUtIOkbhO0PuvWoM6sg
xyIWxRpXhkt8VSipHqzkOmX9IgqDD0u2/Asd/B2Q9MhaNiGjL7KvFgdD5GG0
8XPGeB69+SvQ2YZXMsTyEy26b4UsSm1Azk3M2g8Z3h20wSNZVOpEDzrbmd0/
0UZz6Q2f0Ybz6ANLQFc7eU8A2Zy2X8vovk9v/Azle9r6H+bPxKLky7SsrGz5
8uUtLSinw1P5ApVDJjzSH3744eWXX5YnGHpUH3jmzBn4wQ7GVC9KqtbV1VVS
UpoyZYrS4GTy5Mlwrq+PRnwG2cMTpcfZs2eXLl0KxugegK+8mzdvKtRQhJzP
pKT0HTsP7N9vtm8fnExHcDpwwGzH9oOJiYqyr5uQocqgWNQfZYldd7JAnh1y
kHE8yF3qEFeFou4EkDH6wgdZVM2/4GDoHY+QKMOTxbCiB0mYuCZZRxWYRvJW
e3MPnuPv2HFw08adR85yVH24WC/K0/Ifg5hOHR0d8L1Avk8VF9OpsrISfoT2
9vaC0e15GBkkMNd2UmZKEsyitMUUJtMdr5ZqL0FzEXX8dRSUHhKj9TTa5U3Q
0yot4HGlY7QI/Zm2+AvWfL5CH1NiSpGGmZF5wTCNXBpWajMd1Qsp1/dT0NMi
33dCxkCIhfD1k4zmW0iBqfkG7bFDioukXyAfLxmX6TX/puEG6v9kLLVAd0e/
NekjS8ZGoRH2tNo/kFJU9R/MGQfp77IN/j971wFQ1ZG13d3UTdkkm6zZZLPp
MX33T9vERFOMqTZ670pRQAQRpUqRIiAqiHRBUASs2ABBxN5B6SAICFYQe4f7
f+8e3+RK8wHvPUDul5fn5b650+7Mme/MzDkjeT49okXntRazj1q0/t26YDL3
gPKxLnDz5k2QtAfVSIeVKyIignaHnjp1ihNMh3aI6dOnb9y4kesHXNTAwOBP
f/rT448/bm5uHhwcHBgYGBQUFNgR5s2bZ2pq+sgjjyB8t7go4datW7RSpmRQ
MRsbG3/55ZcubJdkx103wMz9CUGyS0sS7fr1mWPH62hrmWpqmmhqGsvxo61t
Mnac7oYNmb0vggi5QLZ50RLtNly0O5EHZtapLCo0jC1B/I4pFTOcfKwkXPSw
VgzPRaOKdWIrQ5ZlByRk68Ud04u6Z7Wd/tSKKJq6osp/blho3Br9hOqZKSXg
opbmUz1Sj6pHlOr3xX5R6juQHnl5eYrbNs/mB+zs7PqCi979akk3a/H80x2J
tfuzLT6PceXr+F/u3H3Bl8+2RPznNriixOPTE3dC/sVdqOMDdH0EOW+7FPfN
bZ+H7/g/J5lWnfMYV5NHMd+1yL5y5k7QUCkXfaIldBh3+SQfYHDRj/6E1rs6
SvriVtdxknORLjdLuSgLwr+73JRW57GtIVatDVX8TamRQAfvTuq+hWezLcn+
LTN/bU305m5el+q9d5+8a2+wPrLVZVxrhEPreYkNy+BxJiv16VT63nvvPXg+
ncjIBRdVVVWjRo168cUXk5Pp/Pr7b38qKSlRju0S4idrow6OEOLfjpGR0ZAh
Q5iZ/32xZMkShDcxkZwH0a150bi4uE8++YTrozaAPDQ0NJBPpx5ngN/k1cLQ
2sYole/4mzdna2qZGBtZGRpaGhpayPFjbGypqWmK+DmRi/YPKI2L6seUqEeV
OqRUODp5W02UcFHt6DL9qCKtyCLLpIqFUckuyw5rRJaSUbzktPqoEv1omvMs
Qsg5KYfMTS09QpIMEqrARe3tXSaZTvZKK1CPLNWXebOo3Lko+GFAQEBxcTGn
GJnAZl/37NnTFzMhd1ddW1I1W3ivTS0STvhXrl5y3J7EooSq787tO4mj7/g8
LFln930K7LHlbCH/dEtX1Uv7RaO/uOP9kMTXvd9Td4KHtp48cPdBejnXm+7M
f7VlzpN02NOd4Jfunsr0AA3B/QTMTqQ9Ohx5JW/n6iXp9T3792huQ/LDNem8
jfRxsqvtKJFWdoCJ5P+rFzrJpjQiadJddODO0xrYAGMB73rAisZoWGho6F//
+tcJEyaw6dAuSsqaJR2GzinYp1ObnLTpFPSrlpbWs88+e+3aNfx548YNsLXb
9wJ38Csubt26hTD4fuSRR/T09LhuzosiHsWd99cF2vu6l2NTROSokGtXr59v
ar52VbIda9OmLeoaRoYGlvr6Fvr65nL8gI6qqxsj/h4XQcKeO/jIqzIGHZTD
RceHFU6ML5uzYm/g+oppM7ytJk1xu+vTqVArutQpKT8iLtUqsUxbMgtaIjGZ
5z/aEZIZUY3wIxMTj/mHp2ioaPuHJRslHCMuamps4Zsmoa8GMbzHp744dwlS
xd3dXS5LFR2C4iwoKPj8888VZ7vUKSitO7dakn674/3obf4A0BbfJ1ob+bOG
SY2l6c1VuvzxSX+/4/cMiGXr8W1/BOgy/jtRn0o2gs79u4Rwhr3T2nxc+iCf
9PXmlqjPWiTHgD4jOfXJ/5nWiyIX7Ruwhtd6d2eo9OXefVl/zIreDdJyhz15
37gF/zJG275zSqdkW6UG+x2EeZDBjMq/+uqrc+ckZ90+APOibPG9pqZm9OjR
f/vb3xISEugn2blZXV2don3dU8xgSvv27SMO1iY5ejvq6uovv/wysUQUZOHC
hZy0IMSTV69eHRgYyP68fv06iqyrq8t1c1505cqV48aN4/qoDSCrVVVVvTGg
Q7aPFBRlZeWuXbsxISE5NDRyzpx57u6+s2Z5OTi4Wk9xKDgsmdDYuDGz33JR
uaDrzSeDCsrhomNDj9osr1ywKC4svWDqDB8rc2uPlHxtibVRoU5cpX98TtCS
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
t9I6puJkAlKhFWfZHyGNu80WPjbz2Sr1nctJ5xjbb88TxsDCkxhkj1D49jG0
8CfRs2oRRsXA5mCF6VLINgHaTKWyUkARYIetCPPA8tzEo30eWA30T8ohR1Ax
MfKCboGS0f5b0DzQNhBCcDyOP6WI/MxHRUWRK/J169aRQ1dwPLS90NBQ5qIc
pC4vLw+sIzExkeM95NPE6bZt2+jYejC6tLS0xYsXg6MWFBSAl5KJHBLF6Imn
EBvHN+mcnBw0EnojmZmZdAoYx+/EQ0jERkd2Ioy5uTno7sSJE2l5dM+ePe7u
7qDTtra29CpBMuvq6hA5GcuApqKwIJbq6up4fMOGDXRiFOLctWsXOPOmTZso
LZBSBHZxcaGDxnJzc8nRWT/Rp9qArcUcPHiwbx3nCqdDhw4d+uuvv9JhZ0pe
iRDOi9L05n17NHFRtMk///nP5C/0rbfeEkZFs5RM7FCEq1evZoe/UwxBQUEo
eG/W6NuvTMn+IMfvMaA99kpGq3S/6Lhx42iVoTud5Y9iXrt2c8YMD5BGIyMr
ff1JtBCvpWVyOP9IL3NYXVVDFJSno+aIX1vbbMrk6eeb2not7qLmhSt0TY3N
WVm5xYWFi3acVl1UZBhTqh9dQh/DmBK18KO7qiS2S+rhhff+VKq2uCgoq5a7
y7JEMnofyLpGT2xf4typWDOySDOiRCOyRDOqVCu6XDumQjumUie2QjcW38e0
Yys7+lRox1VqxZTpRhZrRRQ5rTw+b8kGB0d3i4k2lpNsZjr7BCVkWi8v14gs
MogunbKsYmrKMdsVkg9/Uck+Nisqp6ZUWiwt1Y4s0o8r912Z7+49b7K5tbW5
tZ3drMClWZOXV0lKEV2maC7aKnVtMWHCBLLZUcT41SL1dT9s2DCF7k2iaNeu
XQsu0SaVbqm9EN1kOI/hkliKLI/fd3Kgw1+hBRBzaPPr2bNnaTUtjUe3ivCA
gbF9cDBwPF1dXVROWVnZrFmz4uPjiRaCdoKtIQyIHDgnLlauXOnj44ML0D+M
vCEhIcQ8genTpyMqsFa8ZQTAfbxlXGRkZICm0rFZS5YsKS4unjp1Ktot0sIF
J+WicXFxuOD4PXho0mSJxvG7COi8To4//ROvD7yRzOKgbpiYmBBzpk2Se/fu
RfaKioooZgAB6uvrl/IA+0UxV61ahYES+UevWbNmDR3KALq7c+dOT09PtBx6
0MzMrLq6GjWwY8cOlGLLli3k6Kw/c9ETJ06gKmScBpQ7mAYHQTFmzJinnnpK
aCzfVx0tPz+/veDqEMQk0XKGDBkCLorvd955h+tEBFGJGhsbP//8c0gS/Hnz
5k2owOQA5MUXX0TjvHPvQTb3RZtUerBLmRonaVWyFFkRQCVAoeu+oQRNBUga
ES527zqgoz1JQ3LW0iQd3Unjx+lGLI67dftWqwzHDHUBPL4sKXXCBD0dHTOQ
Uk2J51LDjM2SHUF/BBGw0C4qsFV6bin/7J268zcK66+WnLxW0nCVfQrrr1y8
dvvi9TtFJ/DTH/dxXVh/ua7x+l0eOkiHoG5AZtulu6veIPx6dz/8voioEpqX
5q+L2GaJjj5F/B5OJFECKmuScMx5ZYX7inyPlCOz0ioM48s1Iwv1JNstSrUi
CjV4c6e7nwjhR/KTdiS/ZyCqSCu6zD71mHvKUffkfLdVFcYJFTwRRX46Poxe
7vOiaNYYH5k9hYIAAYihtlvjI0ZbMAraVwZBTcMHxmWM/lCoa2troVOTQShk
WmZmJjod7qupqUVGRtJmQozLq1evJmlz+vTpmpoaxEOD+P79+zdv3sx2Kx0+
fDg9PZ022u3bt++nn37avXv3uXPnmMe/rKwscAPh6Hnt2jVwANAG8ASa7OL4
c5QQjJwScPwZ0xhf8Czi5PiZNNAPmg6qrKxExsAriItCnqMskI0077dixQro
7MgPRm3avXb16tX169eDcVGeUXwkumfPHhRc0f64+hCMukyePBkVjjago6Nz
5MgR3AelhA5FJ7+jDvGicQFWSURx+fLlIKu40NPTwzvatm2bvr4+ht3y8nK0
ELxH0EUQTo73skVnuaJ6nZycEGD8+PF4HXhBP//8M5oB3jIiuXLlCggtiCje
oKamJl5rSkrKp59+yrhobm7uqFGjqEloaWmhvSFaPz8/OuDV1tYWYX755RcQ
YNBdZBg30cBoe0B2dvbXX3+NR8CQQbDRDEBBOb4LjB49GsFwB9wDxbexscFL
R9K4QIUgUeTtDn+kLJ1di1ZtZ2fH9W8uipKiZpSwY6c92Kwj6v+555779ttv
qdezRZa+4qJubm4y2tET90OLYmv0b7/9NidYc4F6ZWlpifZPs464A3lIhlFt
4mGCq7sgvoSWaWRkhNQdHBzQGmVfrKesQvp5eXlxfbRGj+YXEBBArhJ6lIG7
hd29e9+MGR6mZtZWkx3i4pZdvXq9pxHekz0oByuSV9tYzzAztXWwd83IyJH+
1K2YW1lW738q0/3jEXEfyM5FJUQuipkyMbInsWPSiWpzs8NPCf/hH+Gd56tH
FKlHlqhFluBCR8pjdbtisxQJC1YC9qvJR4KPRkQxH0nXeZDzvCjG5eHDh5NR
hiIWfFukhpwYiMmm+H5KnCQ8uamfO3cuZB2kKG2Tw680K4Wh+ffffwedMDU1
nTRpEgZ9Y2Pj6Oho0AAQCR8fHxC2OXPmuLq6IgyG9YsXL2K4/+233xAhwpuZ
mfn6+pqbmxMJCQ8Ph+iOjY3F/YKCAoQEqQAzAaWkKSZPT0/yPG9iYoIiUP5B
rREhfkJCBgYGICeg9Ihz3rx5CEz6PvgS8r9w4UJDQ0PwapBG/EncGAFQ5+DG
dIwpBg7EDxZtYWFBnATVBcIMpoSb4DMgG5CceApMA3/iPmgMqoJS7LpWBzSo
XKBwqAGUHQSSWikuiLAhQEJCAhgax5/tTg5d8/LyiGrSoasIgwt7HqQpgO2T
VgJNgY40wsCNakfzW7x4MdJCc0KTQA1jyKY18YyMDNoJABrj6OhoZWX16quv
slPmQQvxloODg3EfKgPHe3THUIuQLi4uaB6IB80VjRN30GbQGKg9g1TgbQYF
BUGRQWaQEH6iM+6R0Pz580GzoYJhuIfGtHTpUjRRRIXwjjxokRF5JnvqQ4cO
0W6E/twe0B/XrVunaP23DVqlJo1Q99TV1f/+97+T2sL1j721svsXbc9FaY0e
D6LlQDdhvpsee+wxciUKfQdtEg1plQB4Be1vdgEKCfHIlF/KAwGaGidzTbI1
etlPd5Ij2MCHLkYO+nrcWehBtOQTJ042NTYLb8oFFy9cPFFXf/UqecyQQ7TI
WktHH+IRHf/UfwVJv4PMXFT+Hz1mdNaLRP9gqrJFIvd5UcgERdsz0oShLDvE
SBSD3WGA5ngXnVevXgU1JVmHgb60tHTt2rV0PhEEIzmHByUAk8QFTW1VVlZC
JlOEs2fPTklJATmho5RA8MgtM0oN8gDhCRoDfojxcebMmURg6JRksAsPDw+I
cTpqmeM3ANAJLBzPRUEXiVj6+fklJiaCEZHZCMfv/kL8kNW4yfEu+8BDEBhM
mFzqISS4KNgFTd8he5DwCABSjRyeOHGCZtIwXCLmbdu2gY1TzMgbxiyMXLQi
jPwg5v45CSZfsDPcUVhwM9A8op2yEwnmBOm+gwUbbbvYi4VmuXPnTnxT5YND
orWwZ9mD7MBrdDG8KYyAMs5j3zcP7Nze/kw724DqCgTgxx9/VMTx6x2iVeBY
A2T+xRdfHD16NDOW7ye1J/u5S51xUQBaFS3cP/TQQ/TTK6+8gjJClvbAfX1n
QO3Ru/v666//8pe/gPHiGxKbk3m9nl7H8uXLofXLUmT5gpJD/9q7d297NwI9
i016Lcfm1HqPp/qB4z14MKMPuWiffOS+X1RTU3PHjh2cIn06gbkFBwfLYrTI
lmWnTZsGPhkaGoqnKioq8Gd1dTUd7gkhBmqK3GZlZXl6euIClBUkDT85ODiA
+EHfBz/EfbBfcDlQWbBWsBfc2b17t7OzM0KCZIIb4AJclI6GBw9EzHgE9yGp
wEVxc8uWLeAYEJ4giiA/oBaUQ4xl4MOQvQiPcQT5QWDyW4UAM2bMAKUEDUZy
uHPu3Dl7e3uUAlz67NmzCODt7Z2RkZGfn08GL+vWrbOzs0OetbW1QTUpJM3R
If9gniDJiAfJ+fv7o3Tx8fG4gwDIhoWFRd+agSgUrVIzNPqTLgIDA93d3Wlq
kZMyilapRRjXkVVFG/MxtiYrXJwV2nowAtNFVMIs4UWjrbJstH8QuUV7IOPx
NkZ5bE8sQ2d5a5MHtiraxkZPIW9CfkBzhUBQzmxki3R3KHTDCRMmPP7448Lp
0P4zskPZTE9P53oxLwpAyLCDPv8kRV1dXWpqKtgpHbrUS1CKkFRI7ptvvmF5
gPDkurl3FPXf3keuEkAvHT3xhx9+gATmek3wpJJHvv1OMlkp4bYtvVxeF6E8
iFy0N8C4AIolu5vl7oLirKysBMGT8dwljNpkFIwLMzOzlJQUjvdh4ubmRp7A
ae2S48+poRPnwUVBUzn+2M1jx44dOnSI5jY5fiPWypUrt2/fTnuTwDxpiya4
KB6Bgj9u3DiydwbNAxdF9mgGNS8vD/QSP9HUa21tLWQ+raMBkPDq6upEAkFE
ly1btmjRImYEAXp/+vRp8g/J8c4AkRZ0cENDQyLkyB4yf/jwYXBp8Mnff/+d
prnAb48cOYLqoolQRIgsgakyuxhUCOTn0qVLY2Mlro/xLGJ+gLkoA+NdNCfZ
sxg6vO7uI3QBnWLBggXMMZGQu7YPTBAGkD0PnWWp//Ao2UFEq6SkZNiwYbQ1
WqGlYHQ3OTn5hRdeAHdCz+KU5Tu0W0DGZJwo7oKLBgQE0M0///nPREpxDbED
6YT7YJK9nBEFs0WciJwk5IgRI3rGRe9Ifd1/+umnshRZEUAeoJ70ZrN9L7Mt
tFTiOjI9a3On671tvcmJCHlB5KK9wfXr10GiyMu34pr0lStXQOruOxPSKvVT
BEo5Z86cnJyciRMn7t27FzfT0tI+++wzWsaKiYmh1XCw6OnTp+MC/I1W3sEn
wVovXboELgfimpCQALF5/vx50DlaDQcpJZpXXV2tra0NBjh58uTw8PAVK1bo
6uqCuILXge8hOXBFZANZmjp1KtgmYv7kk0+Ki4spqydPnvz+++/ppE7yXYm8
IQay4CaGjAcNDAxwB8yTHFmDnXp4eCxZsgQqeW5uLorm4OAAVoMHyUYbxBi/
YlRSVVU9cOAAXk1YWNiFCxf09PTAP3FNZwDNmzePeG9VVRV+GgxctP+AaAzU
n2eeeab7PmFESPRfKL8KrTQ2P4zOhW7+7LPPkssFrn/sDmVgIheKLVRsTmaf
Tu1tl1olB6Mfe/7554XskUgjBItcuChAk660IarHXJTQt2eAomEMHz788OHD
XF/0394Ptd2NQeSrSoDIRXtab5Inr169CoLUs+MnZAHFmZ+f/5///EcWn04s
V2CDoIh0IBTHm7qDhkHWIQAGMtrude7cObKkBqUkVgDamZmZeePGDaRF3iDJ
Uwq4Im1Tb25uJnsTkHCaDkUkIKJ5eXl4FuwXmjJo6o4dOyAniaIj8vXr14MW
vvnmm3QoAMdPqyI/u3fvBnUkU1yOn/+MjY3dsGEDTX6C/YKIrl69mg7oQc6R
BO7s378fj9AmVcoM/iSzFKjqZBCN8oJgs5LiArwadUK2/Ei9vr6e4+U5O5hS
hHLQIj3I8tVXX6X2IHJRGcH2i0IXU9x+UUbnli9f/o9//GPUqFHsLKp++6bQ
zZmr4a5DdsZF6T5kCygWGOlLL70ELZvERX/jovQW1q1bRxMIfbJfFAoROi+t
sCgtA8KEMFhs3Ljx4MGDdBMDFgapFoFjWIwFeH2tAs/Ywi1JzL8W/qytrUVx
WDDW/oXB2s+7ipA7RC7aG6ChgsyQyFIcIKMgaXvWF9C/QMwgVzMyMrgejfty
6YNgg+AebF4UfNXU1FSYRPv1FJBV8ubUdR7a/9R+saZ3eRchT9DrAKH66quv
2JpvX2dqYICqDioYnW0q9/jZ7lAomKqqqo8//jjZPHL9bHcoA8vSxIkT6ejY
HsyLsjV68mUHbRqKObOy5HinE/2Ki1KpQcbWrl3b3RrrPSj15uZmCHCaClBm
/6W0kpOTkfr8+fNtbGymTZuGetuyZQut3DHExsYyN8KdgTYs+fj4kCIjom8h
ctGe1tvdceGHH36giTvFzYuCTH788ccy+rpn5hst/MnIHL91kxzvsABtbDqE
u/WEJidMx2z/CMfdYznCdExOsJOHGbMAkFrgouQ5ByFRbzk5OfST0KJE+OD2
7dvBYNucl3RHeng9KyYnOJ6+RXAyFAvTvjjCDW8iEeoToNrBpsTK7xaoMZ8+
fRqjJ/MDIC8wFpeWlvbiiy8OHz6c1jX64e7Q9gDrYJO3XYdsz0XffPNNji/1
hx9++O9///v1119/9913hw0bhgs6fax/clEQZnIzomRQ6leuXAHZk/F8Afkm
3dTUpKGhQfulOd49MoaV3bt3u7m55efnp6am0i50jDiNPKqrq/fu3bt69WpS
36D/1tXVbdq0idxro86PHDmCb2jHGG4yMzMxMLHBBX/u2bMH4emUjX6ojj1I
ELlo72qvFRqiov2lQ3eD5OnuTi1FdJwexEkDGcY1yHniov1/aBMhoh+COg4d
XiDHc5eYBopBXFdX97nnniPbRq6/Toe2x8KFC8lgswd29O+88w7K+M9//nMI
b17Uhj2eOnUqJSXl4Ycffvzxxx/uNR577DF8k2VoL9fowaYmTZrE9dEa/bVr
1xITExV9+HX7pAEkbWJi4u7uvm/fPtLIUG87duz4+eefAwMDPTw8rK2tEQx6
BDSUbdu2jRo1avHixbNmzbKzs8N9JycnPT298PBwRJKUlIQ7RkZGiNPb29vA
wAD3DQ0N6ehAT09PBweHRYsWjRkzZt26dVw/2yz94EHkoj2tt7vzot9++62M
R370ABRnRUUFOk6PN+e09OnB61QEaKNsXpRNTt73wQExDoroFuid1tXVqaio
VFdXc+JsQzcBObB//355GdwJjeWHDh0KacYcmA8gnTEgIIA2ineLi9IZoG+9
9RYKq6Gh0X4ac9iwYWAp0dHRvZ8RFQJpcb22Xbp06RK0kp5XWU9BvfX8+fP6
+vrK3+9NqZ85cwZUExnQ0dEB/0QbzsnJoTrkePfaGJf9/f3BRbOyssgADQDn
RNt2dHSMi4vj+FEVjzQ1NU2cOPHGjRszZ86Mj4/HfTQkENeamhr24IwZM8h4
VuSiCoXIRXsDWn0ml7+KAHW9kydPzp8/f4CeVinkoqLdtAg2Tw7mI7aHboEq
CgLn008/Ze6wehMbmw7V1NR89NFHg4OD6aeBMh3KsHv3btrhKeMaPZ1HL1yj
hwxfunRpZGRkVFQUfQNk+YgKj4iIACON7DUQJ6Ii2jxy5MiecVF6ayBOX3zx
hSxFli8oOWQVXE5GN4PyxeXLl9mK+cGDBydMmLBmzRpoZ+T4GjoauCUCEBfN
zMyEnkIbvXx9fXfu3Ont7Z2Xl4dgoNMODg5gp5aWligIzaOiU2zfvh3X2dnZ
Pj4+1EfwylasWMGJXFTBELloT+vtrsW6jY0NnVysiCG1VepYOC0tbYC6HhK5
qAghGBd9/vnnyRWD2B66BdAACIReVhrjD6tXr37ppZe++uorcvjWt2so3QUr
haGhYWpqKiez7RJxUTYv2sWe2G7NVcoO5LyX86It/KGlishb12A+ndBmFOdA
pkPQyy0pKVFXV2eJzps3DyT/8OHDdOQ0wkyaNAkdZO7cubm5ueCiGKApJO7X
1dU5OTlhMOV47yvm5uZgtrgPLurp6Unrm+CiHh4eRUVFdBgWx1vRivOiSoDI
RXtab5Inb9y4QSe5c4pRD1uk59H/+uuv9z2Pvn+COaJ57bXXRO4hghngTJs2
jTxrDbgm3Vdg7rA++OCDHhhTMFM+2v1SU1OD0fbZZ58VGssrINfKADiGjBto
hVyUzJHASKEmv/LKKy+//PJL9wI3//3vf+P7JfkBqfzrX/+CMHz00UeZNVMP
5kUTExO//vprWYqsCCAPJ0+eVDIZpgaMpMEbLS0toX0EBgbq6OjU1tZu3brV
3t6eMqarq4vegTAgonl5eSNHjoyPj/fy8iJn2o6OjuSPGkQUMaAvaGlpgYuC
o27evJnj1+jpjGxXV9fZs2eHhYWNHTtW3C+qBIhctDdAZ1y7di3t21GcTEAq
SGKAUjiRi4oQIUdcv34ddLS783VCxxE0pIaHh3/22WfkYXhg7Q5lYCJXQ0OD
7E26NS8qF9P4XqIHXJSZk5NLJSWDUm9sbBw9ejT5r1b+flGkmJubGxMTs3Ll
SrLlJ3t5CoDecevWLXI5Cw7p4+Oza9cu0E4ydHJxccFT69evJ49PaDAI38Kf
B02enaDUVFZW0pi7f/9+RAvGm5WVpeSSDkKIXLSn9SZ5Es1bT08PTZ1TpO3S
oUOH3n33XRl9OvU3MC766quvHjlyhBN7tAhevaqqqqJDDUTICOr7NTU1Ojo6
zc3N3P2kQRuGWV9fL3SbySa16AgMheRYWSgpKZHxUFQhF2VHz/+5L9BjLkrv
NCcnhyb6+mS/KHrujh075OjMofdZ6hDQUOiQQQa8euT8vg+iaJaWlqCsGzZs
wCOKO1pCBIPIRXsDiAVI+J4d8C07oOVB0g7QjkCSE9rlm2++qXw9WkR/A2sP
b7zxhujjq1tgu8cXL14su1cNmirEqOrj4xMQEJCYmCh88MGofAcHh02bNnEy
29EL50XpmHglA0mT/6gec9EDBw4sXLiQ6yMuevHiRRcXl77yg8GcWrcIzqNv
4zKa7O+g8B4+fFjoXHrv3r10hC6bQmd+XdpEVVdXl5CQEBcXh/B9UszBBpGL
9gzUXNElv/7668zMTE4xm0kolaNHj44YMYKWGAZcj2Dzoi+88EJfnV8sov+A
cdFXX31V3LPRLTB3OkuXLiUT5i5CtvIHrNMybm1trbe3N8f7hDcxMekn01ly
RGpqKrWlHuwX7Vv0eI2eNkn2tuK6j1bpmZteXl7kZ+BBakgMbQr1QJaxv4Fx
UZtBw0XVI+Tp676xsVHRS43Nzc1btmxRkEWnosH2F0F2ibYqIphu8ve//12c
J+8WGI2fMGFCU1MT10lXYjZK6G6jR4+Ojo4GZ3BxcQkNDY2Pj29oaAgLC+vs
2QGKFStWyLj/R+hflLjo0KFDlyxZEqtcJCQkDBs2bIjUlr8HtktpaWljx47l
+ug9YsjLzs6mDZb9uSG195AgPI+va7QKjhRUWAZF/AGq5vNXblslVqiHF2pH
FWtFPsgfnajiCWFHt5ZJOlHv94tCPRwzZoyMbpZ7nApUYHd3dzrCTOwXIh4A
XL58ef369Q/eBJ0SQFttO1uFYZVZXFx89uxZkC6IDvzp4eExZcqUa9eugXfR
sUoPklGwo6NjD9boiQeCEyoji+3www8/DOmFTyc0A7IgUDKohhsbG3/99Vdx
/78I+aFVQkZbW2/ebilquFJQd/lI3ZUH/HPiyqHay+cu3+IL3ouKk7r83bFj
h+IOq6U4jx8/bm9vP0C5KNNDScEcoBa7IkT0OZhPp/fff79DmUMBQDhDQkJ8
fHymTZt248YNcNGcnBzcj42NdXNzi4qKgiSRcWpooADEuwe2S8RF3377bYgm
3L+jLFBavfR1HxcX98knn8hSZEUAeWhoaKAFwQepIYnoO7RKZ0YHK3o3Lwqx
7+fnRyYYiuOiFy9e3LVr1wBdoxchoj0uXbqUkJAgWqf2AJADIKKdKXRXr16N
j4+nVXgTExMvLy9cWFpaZmdn4ye2m+jBqHNWCk1NzeXLl3M98nUPLsopt0Io
rW+//XYgzosyX/f/+9//lOzrXsRgANpXi+TTOkg+fwieXnPR2bNnK84Eg+Is
KCj44osvBpbtErP5NTMzmz59+jQejo6OGB83bNjAiRJssIIaRnV19dNPPy2O
Zd0CVVRFRcWXX37Z/gxQ8Mza2tqFCxdu374d2nFwcPCRI0fQ6RYvXnz48OGQ
kBDaYipkawNFmNwXPfN1P0C5aH/YL4qsVlVV0VKdCBFyQSvXq6XqAYnWVtrg
3/uY0CX37t1L0zuKA1JBEgNryKbqBUufOXMmxk0MFg0NDdCm161bFxERwYkM
ZLCCbYH+97//LdoudQvMp/G2bdvY8ihbbb969aq+vn5SUhLH2/LEx8fjwt/f
PzIykh0f/MCQTwIrjoGBQUpKCifzvKidnd1f/vKXxx57DN/vvvsup9yaoQb/
/fffI/XHH38c36amplz37ehzc3MVmc2uUj9//rympmZxcTEn9l8RfQfmiYuT
evFqf78LCMMImzG73xuxoDSRwnw6/frrr+RbQ3HzoocPH37//fcHlq97xkXJ
UIJVzv79+2mUFCXY4AQ1jBMnTnz44YeiT6dugaoOOp2TkxMYqVDwEgdbtWoV
fuL4/ZM2NjZubm55eXncgD1WSXbs2bMH2i4n87yohYUF86r00ksvyfKgHEFp
ff755ywP2traXDe56IEDBxYsWKDQfHaROhSftLQ0xRlKiBDRY8ixQQ6gto2s
NjU1KfpY3uvXr1dVVQ2s0YRe4smTJ2lwZIiMjKSzfQdWcUTIF+BO586dE7dA
dws0BQoab2try9bomXMnoqPgnxkZGRzv0InOJh4Mlezn5yejMxOqpYULF44Y
MWLUqFEjR47U1dXl+oKLQlmgPOAb+edk9mzQH85dunLlSnh4uOgEXkRfgVpd
UVERrUqjU0AhJaeRHD99V1NTgzBkJ9jmBGSaNRWegACKhcdB5Mi6UBhYGJ4C
M2HLArRKT0lg4ZVfFRcvXvzmm2/osFoZJUm3wCxn1dTU0P25AdXxqUIWLVo0
a9asrVu3YrCA+Jo6deqlS5ceMDNeESKUibCwsMDAQAifgICAiRMn0vI0cc7T
p0/Pnj2becIfJBofKgRDCded8g50+QMdBOOC8tOlemtubraysiovL+cGfk2K
GIggduHq6rp06VKOt0z5+OOPaREWTElTU5Od9Noh2jTas2fP6unpdbGXvv83
coi+2tpaYomKANXAmTNnlixZoujZV8UhOzvb29s7NDQ0ISFhYO00ECF3MKM2
IyOjY8eOcWJjkA2kvp0/fx6a3UcffTSdx5EjR27dujVlyhShFRidLz+o1D1I
mAHXlnqcVRoxExMTv/nmm97E0xug1aHtDbjpEREPDKgXREVFeXh44CIjI8PS
0tLNzQ2tsaamRkNDA00UKnlSUlJQUBB+JeGZm5u7adOmzZs345GNGzf6+vrS
Km1jY6O1tTXu+Pn54ZuaNFo4/gS/hYLP8SsRpHzV1dXR9GNZWRliCAwMpA1C
EL9paWl4hDZyK61fMDsCY2Pj7qrk3U0FVRETEzPgnLlRVrdu3TpnzpyZM2dG
RkbS/UEyVyOiQzDLi2efffbgwYOc2B5kA1sAUlNT09fXb2hoGDt2LKqR4/0P
m5ubg963P2VmkGDSpEmrV6/mujkv2reMvZcZQEn7ZHaCavjs2bNgwuKZziL6
CmzXNCgox+/SAcl0dnY+c+YMiKKjoyPHW256e3vv27cPYXCzubn5p59+srW1
RbsFaYQuv337djyybNkyyNUxY8Z4eXmtXbtWW1u7pKQEQlVPTw+sNS4uzszM
DAr+rFmzSMhs27bN3t4efMzIyAj0ZunSpVOnTuX41Rkkl5eXN23aNHIWpIi1
8s6qAtIgNTWVRgRFyDSKE/RbU1Pz6tWrCkpFESAZixcKFlpQUIB3hPcYEhJC
w+VAKYUIuYNePRTJ559/HpKEE8ey7gACMDk5+emnn75w4QKEnouLC92Hdg+R
yw3WyoSc6f/nUcoLNMDFx8d/8cUXXB/tF0UeTp8+TWR4MNS5iP6J69evgxBW
VVWBWDY1NYWGhmZnZ4NmJCQkoFnW8QDzBFfEHchMFRUV2r8EngkKigdXrFiB
a9BUUNCLFy/iJx8fn40bN8bGxjLbQAsLC7DTuXPn0iTqzp07IXgRz9ixY/H4
yZMnEfOVK1dUVVUzMjIQJ0gpHuGUJY2pA2JoACuurq7mFNklUerKysqBNcpQ
bezfvx8vCxeLFy/Gd1BQ0MDdaSBCLqCG0djYyNboB1bDVjJQObT9HkIgPDwc
Sj3Uf4hKsluB2ISKN2jJACu4uro6RhbuwTrYtGtcunSJbNOUDLbHZuTIkfn5
+ZzYf0X0Eagpenl5zZ8/n7TyLVu2eHp64hrEA38uWbJk8uTJUVFRDg4OSUlJ
GHRoEhV9x8DAACHBWvHsypUrGxoaEBKMFALE19d3zZo1wcHBGzZsuHXrFlKZ
MWMGNP2AgID09HT8CS5qZ2fH8abZHh4e+vr6CIyxTEtLy9/ff968eSCxxFqV
WQ8gwyDAipuRGOg+naBooKkcOnTI2dkZryktLY0TZZcIEV2iwz4OsZmcnAxR
+dlnn0GFDwwMhCwlk0BOZn96DyowEPT+DC/i/HQtNKeVHWS328XKOwXocQ4J
JD+hkkycOJHru/2ikOp9cvCTCBEE6qFgjJ9++uny5cvJqYiKioqRkRHaJxrn
r7/+Spb1s2bNAhe9cOHCpEmT0AHRg0xNTcnfXUlJCeQqiBx6E52X4e3tvX79
+pSUFOK3169fR5wQL3PmzCGFF8xz+vTp0ATJOyXSUlNTO3r0KNKlDaW7d+9e
u3Ytp1yqg9qAGKQTkRQH1B4qecCNNZRhKBExMTGrVq0iTWHAlUKEIoBOeubM
GeaDXQRBKLtI0u7atQucMzc3NzU1FYIuPDwc/eibb76B6Nu+fbvirCYHBJgw
mTx5MomXwTAvSqUuLCwkC+I+SR2jto2NTWVlJSfOLYjoI1BThFT8/vvv6Rx2
wNbW1tXVleNFAdijo6PjggUL8I2bpaWlU6dOpUFn79695ubm0OjxTYLU0tKS
uKi/vz/oysWLFyFVfH198UhUVBTu79ixQ1dXNygoCC3fx8fn2rVrCODl5QX5
7O7ujsxs3rzZwsICcSIqZR4pyHzdjxw5koyqFHoG6GeffTYQ50WPHz8ODQJv
6sCBA2FhYeR8RpRdgxnUME6dOvX+++/TGt9g4A+ygFnBV1VVkaEihOTcuXPr
6uqsrKwgZBISEshRyXvvvQchKXxqkGPjxo1lZWVcT8UjPbVmzZqtW7fSlOaG
DRvITSvtkWBTpvimP6na70hBa3nnz5/HUHXu3LnLly+fPXuW9sbfloLjj74F
gUTgNvF0K+dsCEaGe1DYXoIZ7c6fP582CQyUIUnEAwk0PzBJ5vnz+vXrJDzp
T6hsZOReW1sL9ihU3tFDIWBpPQX9kZ0egmB0uC3i2b17d0VFBSfwlw79C4HJ
eAcXCABay4Yw9IidO3f2yRQByR9F74FELe3bt28ADdmt0nNe8vLyyPQsPDwc
EhgDqHiE8SAH46Ivv/wy2dEPoIatILDRfN26dU5OTs7OzqampiUlJbGxsVDi
0tPT582bh67k5+eHi4CAAD09PdEGUIiYmJje2MHRU//85z9//vlnuvPhhx9C
/W8T7L61jZFo9OjRTU1NEHTjxo1rHyA+Pn7IkCG9XNqm3KKpKN9LP0sOYnzt
2rXswAVlZkCEiA7RrXYoFBQdCg1hbK1SV/ayZ0CZUwSULqQKhE9OTo6CUqdU
qqqqbG1tyf5roHT8VqlLZHKq4Orqmp2d7e/vT/up+jp3IvoMTMF8+umnoVFy
IhflgX7h7u6+cOFCOleR3DQtX758zJgxmzZtwp05c+ZA4wYvhS5/9OhRUacT
wsPDA+KF6x0X/c9//qOiogKRDt1/+PDhEOy4WVFRYWZmNmHCBLLBBAEzMTHR
1tYmKwYIt5CQENyxs7O7evVqY2MjRNzmzZuHDRv2xBNPJCUlbdy4EYxRR0cn
IiICjyMSNHuETE5ONjQ0hE7BDmntbp4xHFBTUTIoq+DbampqtDAqynMRfYs2
vJH9SXNijEm22cUt/FUYCQvWJoAwEnazzZxA+0eUBgyjhw8fJnciigBzgOPp
6clmngcEmMiC3KapHgy1INWtD/rR2CJkAYbjhISEM2fOcOJYJl0IBvmkiWJa
ZwG5Av8EOw0LC4uPj4cEIP4JafDRRx+JVSfEoUOHenMeJUmkzz///PHHH/+Q
x0MPPTRu3DjwvVdeecXAwGDRokVPPvlkeHj4n//8ZzDPwMBAa2trCP+XXnrp
7bffjouLe/31142MjGpra4cMGZKVlQUNAnd27NihpaUVEBAAyor7p0+fXr16
9TPPPIO3jD8hEt3c3PDd3dyS7oZEP/300x4XuZdAHqAuiQqRiP6A3uzM6ZOk
5QvKA4bUmTNnKs61BaUCrpuRkTGADD3YCxJu3uD42bA+ypEIEf0R1FNIdIBk
6uvrX7x4kY45hmwBUUGv37p1a05ODtuvCKba2NgoKnScQM7o6OgkJydzPZ1j
Z/OiI0aMyM3NRYW/9957qqqqBQUFII20IDVq1CjciYqK+u677+gEebwaMFXQ
VI7fJPDiiy+WlpaCxIIVz5o1C8FwH6zV3t5+ypQpuF9RUbF27VpwWugReLOI
5Pvvv8fjPZtIQUn7hAoyX/f/+9//lGmgIUKEiA7Bts3MmzePzgVWBEOmbl5Y
WPjtt98OlAPXhPPYENcYIwICAkJCQiB+f/rpJ8he8ijb/wsiQnGAhrJu3bqm
piZu0LeEFilwnZSU5OXlRfcPHjzo6urafl9TWVnZ//3f/4lb9YQAjScb2N7M
i77xxhsqKip054svvgBRBOcHh4TIAil94YUX7OzsPD09oRe4uLiAo9bX14Oy
jh49uqio6LfffgM3q6mpwX1wTltbW8S2Zs0a/LlixQrIQFxUVlauXLnykUce
Iefb+/fvNzMzw/3uHmJCfHv58uWgxz0uco9Byd2+ffvEiRMD7ihAESIeVIBr
ZWdnnzp1ilNkl0Qqp0+fHihdXjjVA/Hr6+tbUlICur5z587AwMBjx46JevRg
Rqv0WNunn36aDs8dtPtF2+xXQT3gjrW1Ne0InTx5Mh2igfvCYNeuXQOZGUCr
JIoDE4na2tq9nxf95ZdfUOekF2hoaJBlELSDd99996OPPgJvbG5uxvfw4cN/
+OGHGTNm4BWAi3755ZfghG+//TZe2cmTJ998883jx4/n5eW98sorkyZNGjdu
HBRwIyOjDz74AAHAYz/88MMzZ84gfkQyYsQIf3//NtvYZCw1ehBNSyoZrdKz
KsaMGYMSceK8qAgRfQrm2kJVVRVjB6dIn06QOcOGDRuIPp2uX79eUVHR0NBQ
X18P4QlqWlNTQzMYIgYnqGFgOMZgTadjDE4uykq9adMmQ0PDGzduMKuu8ePH
e3l5tXeYw3aPg+T0ZhrwwUNBQQHt/5FvhTATBqGTFjBS8gMD/PWvf507dy7X
pfBnFkZt8nbu3LmeSUJKC6q9p6dn+2iVAwj2jIwMWtcQIUJEn4Ncdit6387N
mzdB5waK+il0gACuTvvzZ82a9dtvv1laWjo5OdFs2EApjgj5ghoGBujXXntt
cHLRVunhO9euXUOPeOyxxxwdHZl/PI4n6sLFhTaWnvg1ICCAztcQuSjB1dVV
vk6ehXay7EI4j00XPj4+W7du5aQbLbh7pV+HF9y98+E9yDA9smvXLqTOKb0N
MMHu5+dXW1ur/AyIECFCiFbp8RPDhw/PzMzkFDOkktgpKir66aefBvroc/78
eToYS4QIdJaqqqpBaIfLpAQ4zBtvvPHOO++QatY1exECMmfNmjWDsOq6QHx8
vELtaDpzGtPdZ9vc743976lTp8ilqpLBBr4ZM2YcO3aMG8hDkggRDwwg+k6f
Pq3ocaGpqQmjz0DcIQYxdfHiRQguEOmjR4+6u7tfu3ZNnBEVMQiBvkBE9ObN
m/b29k8++aSjoyNNkLZRYzsb3KnjgABAMxXNvoRYt25dSUkJp/TVFuHBSUoD
tZbk5OQff/yR66N5UbRh6FCiFaoIEX0OtlShoaFBB/MpzqdTfX19YGDgwDJa
ZPUze/ZsDw8PLy+vadOm7dq1ixNX5wc3WMOwtbWleZXB0B4Y28zNzX3vvfc+
/vjjffv20Z3uFh866YkTJwbbxoauYWNjAzpKvrCY8ytaCqe1dXaz65/oDltD
73F4OUbVWXiwQTLAVzKo/547d27UqFGHDx+mvCm64AqqQ2F4BbUEFrmiS6HQ
ClFQKYQ/iaXoZSnADzdt2qSIbfMEirOysnLixIkD69wlQis/L0poGQSUQ8R9
wcayJ598cufOndyDvl+0Vbo79Pr166BMjzzyiJOTk1CwyB4V9aCSkpJ3331X
9HUvRHl5OW1hGjxIS0v78ssvuT5qA2iKorNoESL6FaKioiAJOUXKhCtXrhQU
FAz0IRv5p0FZxGBGq/RArueff57myQd6wxaijRBgRdu+fftbb7319ttvE/3m
elHqW7dugQaImh0nMBTS1dX19vYuLCyEqNy2bRsqZ8eOHWCnRUVFVVVVUHz2
7t0L4ZObm4tq37NnT2NjI+7jV4RBSITHU1AW8vPzT5w4geo9ePDgzZs3KSq8
MqjSUAEqKirQbnfv3o1IEBVexL59+6AUHD9+/OjRo1evXsVbRmby8vJwfeTI
kdra2tOnT+/fvx8hKWk0+ObmZowXZWVlFy5cQMyIHz8hLaSIdOvq6pAH5ASR
4CdEiBKhXNXV1WfPnmWlwHdOTg5tkVUyF22V2h5+9913K1asQLWgclCHKB3l
FlVRU1ND21lv3LiBgiC3qPPz589TwVEDqEPcxE8IwAqOMY7qEFGhZi5duoQX
RAVHHaKKEB41iUrACz127BgljSpFVHjq2rVrqLp6HocPH8afuImfEABVjcCV
lZV473gckSAqRIho8fqQBGqYWgKVgr0+lALZY6VAtqkUAC7alAKB8QgeZKWg
RkivDwm1KQUygywhY8iesBTIfJtSUMuhRoiCty8FqghJoLpQaag6VgpUKbJE
7VlYCrwCvAgqBV4NKwVeGSsFXiVVCJUCrxXtvE0p8Cx6BPpFaWkpKwV+QgNG
5hsaGtCb8FJYKagrFRcXU69E92GlwDVKQb2yfSnQPBAbGjx1DVYKpEu9kpUC
UaEU6HdohMizsBSsceJXhKFSUONkpUCcwlLQgW6dNU7kFnlGzlmF4Brlwn2U
ESVlpaDGidpgpRA2TmEphK8V+STZwhonlQJvR9jFIKZIIKipqeEpNl8qX1Cc
KMV///vfgW67JEIEJ23A6Kdjx46FlOYe0DX6VsHuUAcHh6eeemr69Ol0uGd3
p0MZWqQ+e8kNOydKAx6Qw6gNFxcXQ0NDSHtwfsjzDz74AAO3paVlQEBAVlbW
yJEjMXy89tprkKIjRozIzs728/ObMmUKBpSPPvoI4fEURn8NDY24uLjly5eP
Hz8ew+4bb7yBVwbZCwlsb2/v4eGBEeSrr77CyIKoMGz9+OOP69evnz9/vqmp
Kd7Le++9h8wMGzYMxIBODl2zZs3PP/+MUeb111/HAPT5559jDEVWnZycMI58
+umnGEqQCsavMWPGpKamRkVF6ejoYOyD2kKlAGcwNzcPDAz8f/a+Aj6O42w/
bZMvaZM4Sb8maZs2bZyvjZ00Dv4DbTgNmC3mE1loyWJmsNiyJIuZyZItssiW
ZZHFeCBmZoYT3P3fvZHWZ0lObMdwJ83z29/ptDc7+Oy+z8zOvJOVlQXtjkoB
nxDewsKC/Yi0KJQFrK2Ojo66ujrU8zvvvAMmEmoS5I2cnBwUPCkp6fDhw2Au
oTbQCl8wo+bm5siPyieffAJPgH379oFphqoGTRsQEAA1BkLrX//6F0T13nvv
wcMBms/Nze3y5cvfffcdVNE///lPqEmohCtXrtjb22tpaYHg+fDDD6FNoebB
OouJiYWHh0dERAgLC4OggpPwEwQAJQZZhd4K2Osvv/wSBBjkCiKEpoHmc3d3
hxoGJkBDQ9KQAWhK4JKvry+0CDymQMtBeMgwND2IB1MO4Av8CyfhJwgAwSCw
n58fXAiXo1JAtUC0EDkkAQlBciBdIDxkALIBmYEsQcYge0AMaFPIMGQbMg9F
gIKIiopCod58800oBVAFbZEABYfiQyVAJFAhUAqoHKgiqCg1NTWoNKg6SBqY
A5UJVQoVm5CQAJUMVQ0VDhmGyocmMDY2huaARoGmgQaCXEFjQZNBw0HzQSNC
U0KDolJAE588eRJ4npqaevDgQbg1IGngP9xW0DOytraGRxzw+aOPPoJSQCpA
YNBF0dHRcDeJi4uDoEKleP/990HUaWpqwt2Xk5MDpYAGhaTh/v3222+B4XC3
wl0JWossBdxK0NMMCgqCu1JAQABuUogfUvn4449B+BkYGFhaWoJ4++yzz1Ap
QL8dOnQI7jsvLy+4K+H2OXDgAEQFn/BdUVERzsOvUAoIicgJ10IMcHdDbBAn
WQpIC1KEdCF1yAPkBPKDSgE5hHxCbiHPkHPIPyLnN998A+VycnLS0NCAkkKr
QXgoO9QA3NchISFQJ4KCgvCYgraGVKDdQT2CaYA6hJqERxPUKuQKahhymJKS
AnUONb/1FvP29k5OToaHALQaZBVKAYxCzkUf6IgfRA7E4y+7Q0oO4Dw8fwwN
DeGWBBPAxgYUY6eDHPOERxw8c+ABghbLs3/ZIDB5T4Hp4d5aF4PNEeogkFgb
vkDn5+fhDNQSKDqoczTBCf0E31c5W6nCrxAGzbqET7gWYljhAEVF/oSigkvI
qNBPKCpIArmH3RQVnN8UFVq5yeSAOyoyabhk26S5S4HCwye319NHglXOPqRk
HaLSodxuLTiq89sVHMDdHNxRofAoKhQe1TlEBWG4o4LwW5uPrPOtdUjW+aak
UVQ/3Xwoae5ccTcfSmVThZDh2bcy52crBEXIXQoyV2SFkHy+8wr5CRJuujW4
22LbZt2a9LZ83toWW5t127a4k1JsG9Xt2uK+kBOFv5O2QOHvti1+okK20gB+
Ip1UPwigkRDoEIE54y9f9whQ89C5gG4j9CkcHBxiYmLYO+udLMa9Ad1BO48J
5OxQeLZoaWk9/vjjenp65GL5XzgCzNrYcMfW1na3TY/8afDXU3EH4AG9B8TA
wOBlgNWm0Wh8arjRoC6b81oH+RfFhmM3gxzc++CDD5CDRD4l9laQBSkuLt63
b9/evXvRSxP2fSojsv69vb0aGhp436WtIKePbvq885M/Hf4eooKPX570neTq
UeEh1OF9ieo+Jv3ISfXokr7lX/izth6eYDluCx5J+gEBWZ+WlhZZWVk0SMsj
j6CfBcrn6Oiovr7+qVOnampqPDw8qqqq2PxTBIwHAdT6k5OTL7300o5ZR8/a
mB26vLxsZGT07LPP6urqotfo9zw79HaA5wBauXAf48R4ECBb/abt4DqJgcFn
IJ9jLNatcgjpVEztnQzU4gMDA15eXmjhA1+AtfEGp6CgIDo6emZmJiAgoLOz
09bWFmwo1qK7GaQWfeaZZ9CwIb9rUVJtFhUV7ecA+Qdg3+9lWSi25ubmDz/8
EHp5bNyt42GscVoGWoy1dvNfDAw+BYu90Y9irQ+HziyudI4Su/ysO7vEj6Md
DXJ0MSEhgb9GQpDd7Ovr8/X1nZ6ePnv2LHx3dHREs20xaXctUNMvLS25u7v3
9PSw+fkJxrp1sfzjjz+ura39CxfL/yxWVlbggYBn6/Ey1jjSc2F5zSW7xzW7
B76wb77QxMDgP5DcRdyemFuxTu2UDm4s7ySWsayu8e9THOOOgBqYTqcfPnwY
rZrklyZH+ZydnT1x4sSpU6fU1dU1NDTI1cQYGPwOUg2WlZW9+eabr732Wn5+
PjrzgEZ6UYqNjY1vvfXWyMgIm3+eBrsKSHNOzi9bpXYJ+lAFfGlWqR1T82gv
FdxeGHyMVQ5/+yeZuomtgr40iQC6eAA9m0bsR7yGR5h2AZaWlnp6evhxJGRy
chKENPJhC59grIuKimZmZjBrdzlArRUUFAA92HwlqMisIrW5srJiYmLy7LPP
6ujoLC4ush/kcCgJeBo0NTXhbSN4D0S7IyHaPb6oHQ/GmioTQpcJZoAi1U1o
653gDJhznuIsFj/RHmMX4+a8UMRtxsC8amSzkB9VOpghFcyQDKQL+VLjyodR
0PVlNGw8MXqnAenP6upq5N+VzVeGG9nr7OxsbW1te3t7BweHw4cPi4qKwhn2
DvVwjvGzQAQGMj///PMgR9n8Nl+UVJslJSVvvvkm3JioFOwHT2mUbldXl7i4
ON/J+B0PaArU/rT+BeWIJmE/QohKBdElgxggR+FflagWxiCx/nR1jcXGDYfB
+2Dd/ItGRMs7pighDNEAmnQwEJs4gOFSwXQBnwa/630rnGH/VXIlE16qt+Ow
vLw8MjLCd3YHTDPkOTU1Ffl0AlCpVDqdjs4/2rxhPCqQkzf+8pe/8Nc6euAt
6SnU0NDwiSee0NTURIvl4fxDoDRKYmxsLCAggL+8aux4sDZWJ91om6IEN4r5
0UB/SgUSB2hRyUA66FJRfzjZeKNtms0JjNcdY/AFyDH8LOqEWAAdDqAxEqLk
IRNEP+Hd4JjVPbPImYtCXIDpvaOARlrq6+v/85//8OMeoCi36enptra2Dg4O
IEQfdY4wHjFILfrSSy/x0Tp6csyzoqLiwIEDe/fuzcvLQ2cewnt5BJTK+Ph4
WFgY2qEDgxdA2t2MujExf7p4IE0a9GfQ+qCoFOc7HNJBxOQ6sQBGRv3Y+lX8
9CzH2I1Y23ArGlsxJOhLlQwkRkSlA2/VooE0iSCi83XCh2p0oWN4mlhkvYqn
Ru9ETE1NgeHjuxliSGPExcV5enr6+fm5ublZW1s3NzfjdfQYwI3a2lo07YT3
gZgMn2ZmZnv27NHS0npos0O5gfRwR0eHgIAAKFI2v/VMdyQ2vH2zIssGCGPN
0ZxSgXQJsNGc95jwnbTa0sGELhX0ocaUDXOuwi2IwVO4hY1ogujKGssnvx90
pjSnYyUVyJAOZGwaF5UMokG3Szq4UciXph7b1Dq8yMaOI3YWyBli5ubmaCSE
j55dyIK7uLiwOTvRgAqtr69PTk5m48miGDwPdKORahMtlv/HP/5x/fp1FOBR
Decymcy2tja+GEze6VhfzcFcZXld7T3h0yCFps8RJpu+xVhzza8LooNl983v
X+ZMwltfXM8/D3aMnQsW+YG4Pb2wcuZy93FvKupG/ewhE0IX9qfKhzFqe4jX
uMR0PK7dmjD4F6gFOzs79fX10VAMH7UpMpcJCQmRkZEpKSmenp4ODg6gSNl8
VQqMBwEQVJaWlqCp2LxKBtbGzvJAY1NT09/85jdqampoluZDHg4lQfp0AlWM
fTo9ciBjPTW/Yp/RddyHRiwrDmJIrpvs2xpuiY3VTCBHz1zumsa+njB4Daz1
yc+DU0tGSW2Cvg0ywTenmvzsIR1MFwugSQbS8xqJdSLkQj1Mcb4GsjXT09PF
xcV8946evWHQr3NgbW1No9HY2IDubqDWB1H31FNPXb16lc2T80XJcfvq6up3
33137969ubm56Mwjzy3cUCBE8ZuFR4X1AXOOtR6YZBpcaBPwocpwnNtwtOjP
GmuaJMeyywQ3woWGF9oGp5hsPL8OgxfA4SBnITy7ZXhBPbpJyJcm8/OU3kaO
SgTSRPxoydVoezg2XszE7yDXLn388cf8uHZpK/g9/xi/EIgACwsLf/jDH9D7
7keu7jYB5QduPQsLiz179mhqaj7a4VAS5B6g8DTAe4A+QqAR0caBedWoZmFf
YkRUkjMpVCKQ/hNv5zcWenC/0GwU8qWqxTS3rM+ve9QFw9j1QCSs6pyWC20U
8afKhDB+dtrJ5mO9X0YcAj604MJ+JG7x4P8OwMrKytjYGJ+OhKC96RGw6cRA
HFhcXPz8888rKirYvKRFyZxAxt588829e/eikVs2b8xwRlU3NzdXVFSEdhrF
ePDgemRxxnfWjXXHjCwY64BNo0Z3+h7z5ghSCF3Eny4X1ljVTazjI801flBi
PBTcXEdM+iXLY0ygDZWQE1GpoDvoYW3X55LiDJCe8Glwy+ldYOJtcPkbyALW
1NTs37+f73zdI5A+fFRUVCorK9m8YdYxMBBY6zuFrO8sD1/Mzc2feOIJJSUl
tOvuw/EdeidA2ejv79fT05uenmbz4dOAD3Gzhllr6zPfcugTYgEM8UC69N2/
vtw8fZQTCdh9iQDGFQYxvw67GcF4+GBt9IIuVA0L+1MlAhnSd9+x2vaQITzh
Uy1SOkZnCV9PWI7yNRYXFzs6OvhUwqHn6sTExKuvvpqamsrmpXEwDAw2FyFr
a2s/+OCDvXv3oq3B2DzGVXQrDQwMgFrm054pPwJNdVvbUKXxFSPCflTCj/0v
FqIbI0g0GY4/fIg2oXJoI9FHWGKM3YUN303sgMIBAd8GSc7mnty+yH5hb0sm
hCHoS9OKa+0a47jCW8NzR/kPSH8yGAwBAQE0SsN31gdleHJy8q233rp8+TKb
x+w7xkMG4gOTyfzyyy/RO/pH28kiZ4daWVnt2bNHXV2de3YoD95us7OzV65c
Qfs9YTxwrPu3Ib6trLH8rvcLcBwt3q9RI3SA3QdlKxXEEPBpCCjoR3sp4ul1
GA8BaBrnAnPNOav7hE+DdDCNQ8htnYjevRDdmERNCWaI+NFPRjQ29BIyZg1v
D8pvQKZweHg4IiKCT2eIkVp0//79GRkZbKxFdzcQH0BKPf/882jrokfFB3It
UlVV1b/+9a+//e1vvLNYflsg0d7S0vLZZ5/htUsPDWjUaHZp1TETjDWxZF56
3TXTL5ag6zPxaJLr+zRxfD15Nzhnd80xV9n4hSbGAwYSosMzTNOL7QLeVI7v
JuBho/T9e0dP0JszxCodzBDzJz6LW9enRmNy8xGQrRkcHAwICEAjIXxnfUgt
+uabb6anp7N51dBjPByQWvTpp5++cuUK+1HwgZwdCrCxsXniiScUFRWRnwre
mR16O0AOh4aG+HTGDh+AdcsfVM9D08vGye3rvpvu33Do5iOQGJKiBDee8KaZ
XewYmcG+njAeBNbdfSJqdYwuno5rFfKlUbbsMn/fDymOrydRf1pq3RjKB48/
bDFIoJZqbm4WFxdHrw75ru1QhqemprAWxWBv8AEElZmZWUtLC/vhvqPnVqH1
9fUfffTR3r170dQRNs8zk/R1v3//fuzr/gGBMzn0FmPdPrKgEdNCOFoMebDG
Gq1Wlgqkg+IV9KGejm3pHN2YX4eBcR9BcJt4mNT1zCqGNwr7AbeJ4dB7cARx
t4c0Z4BUwJcacWOQRWSBtbE1EwYfYGFhAeQon46EkO7633rrrbS0NDbPW3yM
HQxysbyNjc2ePXtUVFTQNGw+cjjGZDK7u7vxTfSAwNrwcoNeX1Z1z8iHNYr4
06RDGJL3YwbdTx40zieRENhrUAgK4U31PRvz6zAw7gdYG4vmrzdPSQUR782l
ghvvyDXu/etzSXH2HfO82re0QgyOYtejvA/SpxMIOT5dOUuOi+7btw+vo8dA
AGLX1tYix0QPLUVERUj3wIEDf/nLXzIzM9FP/EJIlP/29vZDhw6Nj4+z+fBp
wC9AEzWvNU6AjRbzpxK+mx64EOWy1OhLMJ3QCUGMwuYpNp5fh3E/QO7GmVY3
JupPlQqkUzh+7KWCaVLrKvHmcZ9kJ9eB0goitoeghDQK+DTYpndNLayy2Zjb
/IGVlRUwPXxqd5CX++7u7t/+9rcBAQHwfXl5+VFnCuNh46ZHZc7eB7Ozs8AH
UIPwHW1ue3/pzR0b93t5e3v7p556SlZWFsngR76V0l2BnHodHx+/sLDwqLOz
M0Hy4WLNiChHChJbzwQzpAljyrj12LDXv2xMSWojZrSjPSRErNPnnIGkIYCo
Py2ldmwje4+uajD4E+SadUSepZW1oMKBY94NYgFUsQC6iD8NRClxBNA2HRKB
xH61pKq8B26LBRCzQzdFy0kRWE0XD6AdPd+gE9faObqxFgbTm1eBxkXr6uo+
+OADPh0XRZiYmHj55ZdjYmIedUYweAJA7Oeee45ct07ivtObHA6lUqmffvrp
3//+d+TMgc0/w6EkUEFGRkY8PDzQ1AKM+w6o47mlVd/rfYc860X86MJ+NCHf
7Q9hP6qw/30YOxLxg6hokNZtUiE+D3vWB1zvn2euYXuNcU9A64RYzJW1mLIh
pfBm3bhW7fg27bg2rbjWrYd2XOvpuBbZUOSRiYGOuyM258JT0c068dtETn7X
SWhTjWq2vNQ5MMm1NBsznFcxOztbUVHBd6YTYX5+/uTJk9XV1f/+978vX76s
r69/7do19qP2Konx8EHuwCUrK9va2vr6668DE3R1dQsKCtgPhg/k7FA7O7tn
n30WeIgWy/PXcCgJVEXd3d1ycnKTk5Nsvu2Z8jhAi9b1zDUOLjQNLMLntgdj
YKFlePFG+4xCWBOYXel7en0pHkiXC2VUdM22DG2fCjqa4Biar+uZn1vi3CO4
zTHuHog1K2us8dnl2cXVmYXVmcUVzrG69YAA43MrxhfbocMlHUyTIiao3KkW
ldjQokDvsvbp2aXVqYVtkoBjmvhcmWOuTswvzy1xvR3DDOc9kDPENDQ00Fs5
/rI+YD2XlpYUFBT++te/vvvuu/v27Xv77bc7OjrYWIvuPqC384uLi1JSUvv3
73/ttdcOHDjw3nvvdXZ2op/uY1qk2qyvr4ck/vSnPyEfDmy+FaIkoAIbGhrQ
xAaMR4vJ+ZWT4U0S97QZqBTnDSZI2XkmfhJiPBL8lMf51TWW2SXQohvzSO96
iT1DIoBO75+/2wxhIcqbQEazp6fH3t6eH3daIY2+trb2Y489BkJ0eHiYzW+K
GuN+gWz3U6dOAR/eeecd5JvoPgpR7tmhTk5Ov/vd76SlpdEoIr+rUFRLTU1N
oOGxT6efAOrabOCuN88iLr95sLc9VteIz8Ep5roWvSdnOOKEFm0cn1vmRHjb
tNDBYuHmxmDfZPXaOsnvNgZEJLSn3LYHItvSCsv0UruQH1Vq3QH+XTBcKpDw
bw/3RX3fHItzs2yX0C3YWFWFGc6jIDdzz8zM5LslP0gVrHAA/7q7u6MRUSaT
CefxuOjOxla7uYkPbm5uXV1d7PvKBzISGo3273//++9//ztyI8bmw9mhtwPU
3tjYGL59bgfWdv5hWJzquo9aDsU0PL1MaNEA2j0sOkbv6OXDGZMLK2SEGBg/
gYdDEpTI8ioaF6Vy1r/fy9oloHdDHzEuij027QAgi0OlUr/++mv+2o/+Tkw/
7+9xg3G/cCd8IMct740V5GtrOzu7Z555Rl5eHi334/fhUBLkuOi7776L9wD9
CUxOTNXXM4qLSktvVLS3da4s3/9uCNaiGI8EjYyW1JTMsNDosNCYtNRMBqN5
nTn3jz9Yi2LcDkwmc2hoiO/sDpjOS5cuOTs7GxgYqKmpycnJKSsra2trW1tb
BwUFtba2PuoMYjxUgCa8ePEiNx+UlJS0tLRsbGyCg4Pb29vvOWbuxfIffvjh
Sy+9lJKSQiZ6f3LPM1hYWKitreW7tyQPB0CExMQU9VMGUpLKoiJyomLysvLq
5uYOYLLZeFwUgz+BuLGyvBIcHCUhqSQsTBEWlhMWkhMUkpGQPBkSErW8fD9n
j2MtirEVaCSkurr6jTfe4BefTmj6R2pq6qeffvrYY48dOHDghx9+OHTo0NGj
R48cOQLf//vf//7ud78DwWBpaYmXA+9skNOBQBwiPrzzzjuID0c4gO9fffUV
8OGPf/wjdFKmpqbYd8kHcjjUxcXl2WeflZCQmJiYYO+g4VAS5OxxRUVFfONs
AnpUXrtWKHBCSkpKSUZGhUIcyvApLETR1DCcGL+fNYa1KMZDw7prx1ra8WOS
MjKqcnLqsrLqcnDInZKhqALhKytr2Pdv1j3Wohi3A5PJ7O/v54sZYmgYKjo6
+sknn/zzn//8DAd79ux5/vnnX3jhBfh87rnn4N/f/va3oEXhp4MHD65PXcbY
iUB8iIiIePrpp19++WXEB+DA8xtAfAAtCr/ClxMnTqyvNrkDSpDDoXQ6/fPP
P3/11VfRxl5sLoG6k4AKOzw87OrqipxT4RuHBHo8lpZWiIkpiIrISUoqSUsr
SUkrSUqcPH5c0tjIanGR2Nsda1EMPgMLrcVjTU3PWFo5gBwVEZFFh7Aw5fgJ
4Lb15MRdd+F/MkECWIticAM9YGk02nfffccX1gdpAAsLi++//57NsZtdXV0g
FSorK8vKysrLy2tra1tbW/v6+sA0XLp06e233yadQD7irGM8AKDGNTMzExER
gSYeHR0FPgCfST7U1dW1tbVBVwvx4f3334eeF/sO+ECqTUdHRxC6FAoFjany
0c7y9wYoZnJyMlJWGAiowaempufn56ur6qytnJWVdaRlVCgUNS0t4wD/sJHh
0ZnZWTDpnNA3h+t/YYpYi2I8cHCIMT+/QKc3zc7O5WTnubl4WVicsbBwdHH1
zM6+Oj01S6U2brym56yuX2Wt9+jvSQViLYpxO4yPj6empvLFUA/KpI2NzZ/+
9CewmIWFhc3NzaA8BwcHhzkA1dHZ2VlVVZWbm6ugoPD666+v3e8lrhi8A7Jv
Ag2dlJRUXFzMzYehoaGBgYGOjg7gQ05Ojry8/P79+9FMyJ/gA6k2GQzGxx9/
/OKLLwLT0E87b3YoN9CdAtL9hx9+wPvRcwPVw+jIuJ2dW+mNiqnJqaGh4Y6O
7u6uvrHR8ZGRsdCQmIiIWAiztrq5q7Lhvenu6hJrUYyHg43VnCx7W1c7W9f6
elpvbz9QfXR0vK9noK6OZmvram3tdDsXzYQHibukFtaiGFuBno+9vb3Ozs7I
vyiPWx+kE6hU6n/+85/HbsWvf/3rX/3qV9xnnnrqKR8fH/yOfgcD8aGhoeGj
jz76WT789re/DQwM3MoH8jELX8ge2dmzZ/fs2SMuLj42RmzVvXu8hIFW7+np
2dmq+x6AOBMVFX/sqMRJxdNn7M96eQa4n/MxNbYVFZGXl9NobmoleQXP0tFR
IM4ESae790FKfGItivEQwOkrsaH7rqNtevSYhLi4gry8uoKChri44pEj4oYG
lv19gyjk8jKzq6u3vo5aU1vf1to5N3t3rubXk0NRYS2KwQX0hGxra1NWVuaX
fZeQZk5NTQWx8eSTT/6Kg00i5IknnoCT33zzDbpkl6iI3QnEh+joaGj3xx9/
fCsf4F90nuTDtiQnTzIYjC+//PLVV1+9ePEiOsMtzHj/BrlnoNuksbFx3759
eM+IrZibm4OHZGNji7d3sIG+pbKylrq6rpWVY1JS2tTU7OwMMceppbnN3z/M
yMhaXV1PQ8PAzNw+KiphYGCIfZeVibUoxkMChxkLC4t0etMyc5lKZcTFJfn4
BPv4hMTGJTc0MFaW1zrauqDTX1ZaZWZqJyunLiWpLCWhTKGoamuZXr6cu/Vd
wM8kyPnEWhRjK+AZW1tby/vv6Mnxq9bWVllZWRAY//M///Ob3/zm1xv4DQdI
kwBee+01cmdG7tJhC7szQG4L0tzcLC4uDi0OfRBuPpAg+ZCdnY2uRXxAlxcW
FkZGRrI5stbJyemZZ56RlJREC8l3/OzQrVheXh4cHMTdNxLkQPrIyKiNjXNl
JfGohOpZWV5GLJqZmQ0NjYmLTWpqapWTOyUgKC0urgiHhMRJMTF5AQEpTQ2j
7q5e9AC740SJT6xFMR401ndoX2OdOXPWwcGd2kCfmpqGhwDoUvhCpTba2rk6
OJyrr6dJSiqJispJSytLS6twDmVxcQUhIUp2dh77bgZ8sBbF2ArEHxCi7777
Lo+vXSKpnpiY+Morrzx2Z3jyySelpaXn5wnG8mzRMO4BJB/i4+P//Oc/3yEf
nnrqKXl5efIVANISUlJSysrKAwMDb7zxBkjZpKQkFPNue09NdvS+/PJLNDMB
3zIcsJAgBT6EhEQePSqurKRlbe3sftbX1dXb2MRGXExRXl6jra0jKirhyGEx
BflTsrJqFIoqfMrJqstSVI8dlygqvMG+K3uNtSjGwwLa7rOtrVNbx+TYMXEJ
CUUlJS1lZW0Qn/Cvro4Z9MJqqhuEhCnQvZKRVqHIqFIoKjIyhBw9dlQiNu4C
G2tRjPsBsMgTExO8bHcQz7u6uigUCiiKl19+2cTExNDQUFZW9vjx499///3X
X3/9xRdfgA395ptvDh8+LC4urqmpaWVldeTIEQgPSvvChbu7XzB4E9wbJ7W3
t4OMRHwwMzPj5gMw4fPPP4fPb7/9FvggJiamoaFha2v7ww8/QPj33nsPLUdC
WhRIcujQof3798vIyCCX+DvPd+idABV5eno6KysLzXzA4IDFvXCD2kD39wsz
NbFVV9dXVtE2NraJjkoYGSGk+9TktLW1o6CgrKCAjICAlICAtKCgjIiIrKen
/+raxnzjO6MV1qIYDwfkXu1s4nm4Wl5eHReXHBQY4esbEh4eV1JcurCwuMZi
LS4w8/OL1dR0xcUVhIVkhQRlxMTkFRU1oqMTl5aYd/W4wFoUYyvQ47Gmpubt
t9/mWV/35DS2vXv3oul/v/71r59//vm//e1v77//PqhQEBsCAgJCQkKCgoLH
jh0DKfLpp5/+85//BInyxBNPQGA0Jubg4MDmyQJi3BUQH+h0+t///neSDy+8
8ALw4YMPPkCdkRMnTtyOD7/5zW8QH1xcXCCe0dFRNMyurKyMJknutuFQEujW
GBwctLa2Rk8DDDQoir6Nj41XV9cVFJTkXysqKiprbm4HM02Ga2vrvH69mMlc
rqiojYpK8PML8fcLTUi4xGA0z87OX71aeFcvnrAWxXh4YEEPixEfdzHAPyw4
KBLk5ZUr+WNj4+Tv01MzPj7BnZ3d09MzTY0thYU38q8XNdRTR0eJ5fbBgeFt
bR3sO+c25xO0qPmldhE/qnQwXTqIOKTu8pDAWnTHYX5+nsFg8KwJRm/Hvv32
WxAM//M//3OHb2O5geYQwpeysjL2LhYbOwBohIrJZH711Vf3zAe0lAm+QC9s
cXHRyclJTEwMOjWff/45eje9O8fPkSnp6+s7ffr0PWxQtSOByr+0xIyKSlRT
1ZWQOCkkRBEWloUvKqra3t5B42OTUElAmJGRMWUVbQvzM4XXS5qbW/v6B/v6
Bhj05qzsPA0NQ1NTW8KxLeuutahyZDOYaUooQybk7g5KCAMU7MmIRqxFMbYF
ouLc3LzHOV8JSSC2rKCgtAAcAtLCQhRFRc2cnGvEhHmO1PPzDRUQkLKzc7l0
KaOosLS4sPTy5Svu7r4SEgq6uuYz03cxkEVqUdOL7UK+DZJBNMlAOhwSd3rQ
OAddLAC06Bwba9EdAXLph4yMDG9OqkT56e7uBv1AjnAioBXTaHEKeZJcrrJp
PTVcDp/m5uZsrEX5GeSg6JNPPrnJa9Nd8QGNjpqZmZExT09Pd3Z2Yg9g8Bwo
LS3F+9EjrHFWG0VFJh4/JiVB7LWkLCOjIiOjSizckCR2XHJwdAeRue6Qlt6k
ecrg6BGJY8fFhYQpgkKyx45JHDkqbmXtODpK9HHu3BMj4uDg1KJ4AP2wF/X4
+YZjd3nAJYc960X8qePzWItibAbaawm+xMUlHTsuQaGoUGTVKLLERFDOoS4p
QWwr1t7RDWGWmStLi8zU1CxVFR0hQZlDB0UOHhQ5fkJSTk49OChiZnqWNKlc
j8/bEg79wFxZs0zpBHrLhkK/qfGuDrmQRtnQRumQxoY+4l0D1qI7AIg3AwMD
3t7eaD8aXsPG1nulmxz1cCsQ+PzDH/6goqKCnI5uGxK0B5xXUFBg79ZRr50B
9NArKSlBOvN2fPjTn/6kqKj4E3xAQ6MQBmJbXFzkfScSDwFkz/T//b//Nzo6
yua9nunDB1r57uzsefy4lLycOoWiunGogSEWEpbV0TFFvfjOzl4qlQEGnk5v
SknNjI6+EBubnJV5pQusOYtNozLmZubYd1elrHnm6lX6RGbDRFbDRDb1ro/M
hvEc2sTSMlop/WAqCINvgaiYn18oJCQrLq5IkVGhyHBWJHF6W8JCsmqqusPD
xHNgenomOjpxZmZ2dWV1oH+ITm+mUund3T1LC0trq2vpqVldXT1khGR3/qYq
3d6HHrt3YqllaKF1ZKF1GI5FzuedHSMLbZyr5pewKd8h2PBVMhIXF8ebIyHI
Pl6/fp1baXCPeqEZoZ988gkEi4yMRA58kPLcpEXhU1JSko21KD8DicaCggJo
X3Lm51Y+oC1io6KiEB+2+r1H4+TS0tJsjhcjNpfHsF0OqGEQorgqEIAVTOby
+NikmdkZMNlCQhSuQ0ZdTY9Bb0Yh+/uHlJV1vL2DGxktM9MzS4tLgMmJyZqa
BhtrJyNDq02bzyK+kXiQA/IsrkmvGBgEUCdranp6ZXn5Wl7hKQ1DcTFFEWFi
D3oREcJxk42Nc2dn1/LyytLSMvDTwcFdSkopKCiiqOBGI6OpsamltLQyJiZJ
TU1PWVl7fGyCvWFYEbFJMnPTG/dtMW4Hcq/DI0eOzM3dbbf9YQDR+8aNG9sO
ipJ49913IaS/v//tAiDdIi8vz8ZalJ+BtOhPjIsifPHFF9DKgYGBtwuAtCga
F+XNXtjDB7lI8M0334T+KZv3ngYPGaj4tTXU8vLq1dXV2pqG2NgLXl4Bnp7+
YWFxJSXli4tLzc3tubnXUfDi4jIpKeVjRyWlJJUUFE7Jy5+SEFc8clhMXV2/
rX1jcQfrZ3o9t9pu9uoaa3VtfRvRezmIF7G7uhExNgHd04iBDEYTkHlsbGJu
dr61peNGSfn1/KLq6rq+vgHogpWWVvn6hsAjF3g0PTPn4xMkJqpw5JDo0SNi
R46KHz4sJigoY2fnOj4+yd54O89NbOQ6b0vqLJLgGxQlZqTexbGGvhC7j2Jq
7zBA/727u5s3FRrp83Cr8PjVr3712muv/eMf//jf//3fL7/8EoKFhYW98MIL
r7zyyhtvvLFnz57HuMZRkRY1NDRk4/mi/AzUdvX19UhMbhrt/D8OgA/Qt4Jg
4eHhiA8grp555pmtfDAyMmLfug8CBjwNmpubcZ2wb7oZqRcRpri6nq8oq+7u
7hseHh0dHevtHWhooIUERwoJysTHE/tzgfkeGBian1+4llfo5xt6xsHN0elc
SGh06Y1K5vJKT08fdPa5x4smJqbS07MDA8PzrhWAyu3p6edelX8zD1y2+2GW
HWNnA9FpampGS9tYXEzh3FmfrKwroELr6qllpVUJCZdMTO0OHRIJDo7mBJvO
yclbW12bnJyuqWnIzy/OyyssL68aHByBeIDh3V29N/UDi9XY2AwiVl/f0tHR
IzQ0OjPzSlVV7dDQyPLyNk8V8gXBFoaTo/m3vPHH2JFA/Kmurt63bx9v+nQi
fR6++OKLpJb41QZoNBr8OsYBm7PsYmRkBJnRw4cPk5KDHAcLDAxkYy3Kz0CM
7e/vR46YyB4KIkZvby/8Os4Bm8MH0A3o3Sj0Vrj5gC4MCAhgYz5sAN1rnZ2d
oqKiExMTbN57Gjx8IAmYmpopIiJ7+KCooIA04euboioiLHf4kMixYxLBQZHI
uWJHZ5eGhgGEHB0eB6uNLgfj2983AILTwMCSHCbq6uyJjkrU0DAUEZY9ekz8
4CERxZNazk6eri5eHud8IyPj868VMejN4+Pb+HwmX+xzhpR2e+tg/EIAhaBj
5eTkISxMOXxY7MdDIgcPCR86JHrkiIScnPql5PTVNWJDEHhCWlg6aGoaZmbm
trd1Dg+NDg+P9PT2FlwvsTB3OKl4epTjX3dxYbGstMLZ8RxFRkVYRPbYcfFj
RyV0dMyioy/4+4cDw91cz5/3DoK+W0lJeVtLB/Jytglr5NQV/E5/92F5eRlM
Nm+2O8oV3Atff/01KSHINdGKiooRERHp6ek1NTVsjmvE3Nzc5OTkc+fO/e1v
f+PWKmjGYGFhIRtrD34GenMJLYjWJZHaEvFBXV09MjIyIyOjvr6evcGHpKQk
4APam2nTOGpFRQUbz9nYALrXoFsXFBTEm141Hgl6e/oXF5lgfC9dzPBw97W2
crSycHBzOR8bk9TW1rm6utbZ0Y0qKjExReCEtJiogoqKrpGhNehPMNNwBrRr
VVUtixjPp3t5BcrLnxIWkpUQPwkm29TELj0tZ2x8YmR4hNpAh2DZWVejIhO8
vYMcnTzOnvUODIpIScmoqqwZGh5hbjOZhMVlt7HtxrgjkFRpa+uorKyFL4MD
Q0WFNy4kpsTFJkF/qq6OOj+3sLTILC4qW1oi+vID/UOWFg7Hj0sCn6FfJiws
e+KE1JGjEnq6Zq0t7RMTk5mXc01NbMXFFKCHJS2tRKGonHP3q6ulgZTt6emr
qKhpbGyhUullZZXpaVlhoTEeHv6OTuc8Pf0jwuLy84vbOzonJ6dYW5bEc4+a
4gf1DgZqXDDc//73v3l2D1AkHY2NjcnhTW75gXDgwAEI4+Pjs+3kQKRIX331
VbQ6GFOaT4HIica9NTU10fKlTc6aED799FMI4+3t/RN8+Otf/8qb7wIeFVA9
jI+Ph4SEIC26y4EeFIWFJTo6prW11E1vGMFudrR3WVk5hIREk4GbGltDQ6Os
LB319Mz19S3A2l5Kudza2l5WVm1r50qRURUVkZOSUgZ1Ki2tLCurdulSRmtr
58VLGVpaJlpapq4unhcSLl7LK4Tkmppa4bOosDQ5OTU0LEZPz8LE1DYwICwj
PQcse3//4OLiNpvdcNtuTGyM2wE5dOru7gMSnnP3rqtrmJ6aAVML55eZzKHB
obyrBWrqenY2xIYg6yNCK6t0WhP0jAIDIgIDItMIyUprbmpLupCmqWkoKipP
LManqKG9QeE47xWYdfmKh1eAlLQKaFQlJW1DQ0svj4CUS5cLC280UOmMxuaa
6vrcnHwdXVNZipqmhqGNtVNIcHTm5SvA/OHh0W1n8q+tsXDna6diamoqPz+f
Z2eIIS2ak5NDvponhShIkSeeeAK+Iy16/vx5pFdJZ+bk5ED4V0hIiI0HRfkf
JB+2jnNCuyM+IL8KXl5eJB+45xsjelAoFDZHQuAHGgJSU52dnXCn4Hf07I3h
I3g8GhpZHTwkqq6ub2fn7OUV4O0d5ODgrqVlfOKElKKiRnNz60bYjera+Ds6
OpaTnWdqaiMqKodW34sQWlSJY6wJky0uriAhoSgkJCMuDqacGFOCOAUFZCSl
lE6d0re2dgoICM/OvhYXlwxXHT0qfuiQ8I8/Ch07JgH/qqnqWViAEo66cqWA
Rmucmpzetr3Wpen6jNNd3aAY3EBsuZKbLywse+iIGMhIoNxpTSNVVR0xMfkf
DwqfPm3c0d7NYrG3VX3t7Z3BQZHKSlpCgjJAYDFReY4cVUBaVEpaGcgscEJK
WEQWuCojrSIhcRLCwC1w4oQ0pCgnd0pb28TOztXJ8Rz0zgQFZeAkBIY7RVRM
AS5RVtaCPiAEiIlJLCku7+jompnZ5p0+7nztDKC26+rqMjExQdOZeLY1FxcX
/+///u+xLaunkc58++232RztAd+5x065x8ESExPZWIvyPxBFZ2dn0Z6wmzw7
IT58/PHH7A0+bApAdmcuXLjAxnzYgqWlpdbWVlwtCEC2hYXF+fmF+IRLmppG
4uKKYHkFBaTBqiopa/v5h05MTBKDSWss9q2Ok8B0hofFqanpCQmC8ZUEYw3S
MTAw7Lx3kPopPTC+srJqshRVGRlClFLWvyBH+ipo1BQ0KujSQ4dEwEzLy2tY
WJyB5OLjL6WmZGdk5KSmXk5MTImIiD971lvPwPzkSS2lk6etLB19fUPS0rLr
62h9fQPb7hJ+i+1mc6+yx0p1FwE9RaGvNDc/PzQ0EhN9AQimpqarrKJ9+rSR
i4vX1SvXmczlqakZ9I6e5Mbc7EJhYRlIRElJ6EPJQt9KQvKkmbld5uUrOTnX
bKydRURkZSgqFBlVUJtyhEteFWnEbWnCbSmH3oRTfc5mEBR5BQ0rK8foqITs
7KtlZVUMRlN7e1dnZ3dLS2tVVS1ECBmzs3WBS0Dl6uqaOTieCwqOvHLlOp3e
2NfXvz3DuSacsm9Kmpvc5lWNs6tBalFDQ0MQe2xe1aLIMlpZWT1262t6Uoq8
9dZbEMDDw2OrOEEzRV977bXp6Wk2rxYQ466AxvChA7Vtc8PnRx99BAHOnTt3
Oz68/vrr+DX0JmCfTpuAKqSstPLSxQwwZWurq2MjY50d3R1tncODw2hNXEFB
UVJSOnu9rljQRSopKTtz5iwoSQEBaTQiZGpim52TN01sT7Ny5Uq+uoY+R51S
OD7G5Te06PqbTZCpaNRUWETWwMAyIeESndY4OTm1tnbb3gH81N8/mJ6WIy+r
LiAgBWJAQlxRUUETbLf7WZ+w0NisrDwalTE8PLq1i7GuTAk5vYrXQ+0GbPh0
Iv40NraYmtnT6U1IqcFzldhEjPPTwtxiQmKKs9M5jqgjrhoZHr2UnH5a0/jY
ccmjxySA4WLiCpaWDjU1DShmBr3F0fEcRVZNTEwBOlBoqFNCQoH7RQAcklIn
JSVOujh7lpVVTkxM3Umegd4+PiEiwsSoqRDhAVUW4jE3t3d19Tp/3j86KjH/
WgnI1/HxiW2Ke3O5Hx445V2Qq9QLCwt59h09m+vt4fPPP4/2edykRcF6sm+j
PdC/tra2bDwItlOA+NDW1vb0009vmi+KuPHhhx9CAHd399vxwdnZmY35sB3g
OQBCFM+pZpNTQJtaRUXkTp82TkxIAV3a1Nja0txRVVmXlpplYXHm6FGJjIxc
9vqrcBaD0RweFm1l5WSgZ6l08jRowhMnpCws7DPSc0pKKlqa2xvq6bV1DfnX
CsPD4pycPHV1TEGFcl7cKyM5uv6KU0o5Pv7iLGerJhI3zeqtTvLJMZ/qqjpp
zuiTLEUVrLaTo0dpacW1vILo6ATv80EuLl4gLQICwpOT0ktLq3p7+mZn57aW
GmM3AJn+xcVFGzuXw4fFtLRM/HxCk5LSUlIy4+OSnZw85OVPHT4ilpqSyd4Q
rmNjE1XVtZmZOUGBkfZn3LS1TaSklZWUtGxsnH19ghMTU/Lzi1ua2oDkdbUN
WZlXAgPD7ezcNDQMISppac7+uYQWVZKRUc68fIVbFLLIxfOrGzNKbv6/usJ5
Si8tLp3WNIQU5eTUxSUULS0cqiprG+nN5WVVWVlXw8JivDwDnJyJ5X5hYbFp
admgkAcHhraoGqxFeRTk2qVPPvmEZ9cuIaCsamlpbVIX6Pv+/fuXl5ddXV3J
M0ifoEGwl156aXh4mI1XLe0goKZUV1ffxAekRd977z3gAwjOrb8CH1555RXg
A+4mb8Ia3gN0C1ANlJdXq6noHjksduiQyPHjkidOSB45In7wkKi0jGpWVh57
w1hvunJwcKi6sj49PefsWR9NTSOQpkontXR0Te3sXWNiLxQUFNfX0drbOsGe
lt2oNDGxEePMtaNQQJpSnJzOoWiAxqtoEgDrpgP8jS/rBpu0sNeuFUpInAQt
Kk0BNaukr2fu6HguPCI2L6+ouqq+kdFCpTIKCm5cuJDm6el/xv4sqFNf35Dk
5LTy8qq2ts7R0bGF+W38k2PsPKA7e5m5sriwFB2ToKysJSggA5T+8UdhkKBA
RSMjq4oKwjvN7bYCYTKZ3V29xYXlUZEJtrauwHBlJS0VFR1dXTNXF8+LF9Nu
lJQz6C0tzW1ANhCixOA/RRV6Z9raxqurhETkeIta15/r9F5fLr+6Qex1wO/Z
2XnEKwP0+kBKmSKrpqSsZWBoCRxOSLhYWHijrpbKYLSUlJRBvy8yMtHHO9jV
xcvc3N7PNzQtNbPg+o2+vgE2fkHP2wCyjY2N8bJOIx+7vb29ICx/zcHWd/S+
vr7kS3ykRdF3Nzc3Nh4E21lAI0JdXV2///3vufnAPS6K1tFza1HEBw8PDzbm
wxYg3TU3N1dcXIxeQO9yoAppaWkbGR5dWV6pqqy7cCE1OCgyMDAiPi65uLh0
dnYOjtoaKqkPR0ZGMzOvXryU0dDAQE6PSczPzTcymi9n5MDlZmZ2Skqn5eXV
T53St7JydjhzVlZWXVxcUYazJ7iU1EktLaPW1vY7z2pPT29UVIK0tMrG+1Di
U1RUXliYIigoLSgoIy6uADrB0tIxICCsrLQaCre6sgqZtLRwOHZU4tgxwp9k
ZGTC0NAI7qLtBqA2bmxsSUvLZhPCcrm9vau0tKKouKy6pn54iJiiMzQ4dOnS
ZeQ+AsIDN6KjE6ytnYKCInNz85uaWmdvXUw0MTFZU90AKvT8+QADfUsFBU1F
RU01NT1RETnEQIKcHHqHhcZM3tnb+anJ6fKyKhdXTwkJJUlJuFxZisNtKcmT
8O8Gw2WEhCjQC9PTsygpKUcXNja1OLt4ArGPHhWHPmBEeGxHRyfmNs+C9HW/
f/9+3vdvg8bb0aRQJD9AZiDt8eKLLzo4OPz444/kT6Q+OXDgwKYdTzB2BpCY
hI4GEpzcfPjjH/8IfPjhhx8QH8hf4d/3339/fn4e82ErUIX09/fr6OjgydVs
cgPiknLQaWCyh4aGVzbcOq2troHlLSwsVVXRCQuN5QQm9uoE456UlObtHQwa
T0fH1NTE1v2sT2RUfFHRjZ7uvhXmzTeGIAUHB4Yg8vBw4mW9sZGNspKOpPhJ
5LxR4IQU6FLv84FFBXBhL6Q1Nz+/zFwGYcBcWgYBPD4+0dvTX1paGReX7Ozs
AcoW7LKMjCrX1FMl+CJLUSEWSckSnnZACQgISOvrW1RV1jY3t4WFx6iq6oAp
V1XVBW3Q09PzSCoZ45EA3dqDg8PAbT1d8/T07JbmttHRcWAanKyurgsNjRET
V3B18WLfdCgx3dXVXVZWFRd30eOcr7GxjY6OmZWlo6enf3zCxcqKmiGOgiWx
tMjs7Oi6mpcfFZV41s0biCcvd0pCXEFEhHL0iDjIVHd3n4sX08vKqiHp7q7e
3t6+7u6+1pb2ulpqbu61kOBoO1sXZSVtURF5EVF5YsUTRRV6ajIbi6FkZVUR
tynEJ3TlFE6d0ku+mH45I9fWxkVQQFpAQMrC4kz+tcKVFXLYYVc/0HgfS0tL
nZ2dPD4uij7R66rjx49vmgHIvbcj9+zBF154obKyko3fzu84kC8poYdy5MiR
rTNCt+XD73//e7QtAh4U3Qp0lw0MDFhaWvJ+z/QhAE3FZDKXwJIe/FFIQkxR
XV3P2MjaxNhWS9NYUkrpx4NCYJEJE8w14AKalMlZejw7M9fW1nntWmFwcKSD
g5uxsZWujpmNjXNQUHhGejaVypiamuFObnxsqpHRAlY4MCD8jN3Z06eNRUUV
ThyXEhdTUFDQ1NQ0MjC0MjO1g0PfwFJdXV9eXuO0prHiSU2wuSAyQVWC1RYT
lQfNSaGoINstLk4MHIH1J9QpsYpZVV5e/aSiJojew0fFNE8bpVy6PM3JBkiB
HjyDdDcBMZbaQAO9d/CgCFBIXEJBQuIkdGqOHBU/elTc0enc+PjkuscFDruh
P0WnNQFhiJV0LPb4+BSD3pJxOdfHJ9jW1s3AwFJfz8LR8VxEROyV3GugKrmn
fEAcQ0Oj9fX0tNQs6KyZmZ2Rk1cXEpYFhoPUlJBURB535eXUCQdQkidtbV3c
3X3hXlNS0haTUBTgDO+LCsuJER6fTkpJK4kQw60U6LihFYKyFDUpKeUTAlJH
joiJiSpAB62ujgrpriwv5+bmp6Rcbm/vwOOiPAuk0BgMBqi7uTniKcTLTYXk
x/z8vJCQ0OOPP66srPzVV189/fTTj23BP//5z5MnTx44cOC5554rLS1l83a5
MO4NiA8LCwsnTpwAzammpvbZZ5/97ne/28qHffv2wa9vvvnm888/X1VVxcZ8
uD1Ahebk5GzrLGVXgjU2RizOvXGj3PGM+yl1PQV5dTCXaqq6llaO2VlXiVFK
eHKiWZxrq9SGRlcXL9CK9vZnIyMTCgpudHZ0I3d5y8srg4PDVZV1Sclpbm7n
zUztjQ2tjYxsXFy9LySm3Cip7Ovt5+4iMZnL3d29ZaWViQkXnZw8tHVMObab
cuyoxPHjkseOiRsZWpaXV3V39dJojcXFpbGxSRBMX98ccigiInvihLSQkIyO
jikYdFMzO7DUMhRiaFRIiCIurmhl6VRcXIaGicrLqi3Mz6io6ERHJw4Pj7JZ
+O7Y+UBN3NPbNzI6BswsKir19wuzs3W1snJycjoXF5/c1NjKWmN1dvWtzxdl
sTs6ukPDYk1NbUEfQhfMxcULeFtWVj0wMIim9CwtMru7eoBX0dEJZxzOmpjY
GBlamZjaeXkFpKZkVlfVj4zcOmtlfqG1tb2w4EZkRLydnYuWlomc/CmQmgLH
pRTkTyUnpVZV1bS0tLa2dNTVUq9dKwoNjYYcamuZoMX4zk4e1/IKIyPjgbpA
bAlxRdClqio6IcGRcFNA/NNT03BTqKvp6emZgxbdNGyLwVNAhBwZGYmKirrd
FGUeARoEg08QmUhgfPHFF35+fjExMQEBAXD/2NjY2NnZeXp6hoeHQ3E0NDSe
eeYZCLZnzx4Q22w8NLrjgBpUSkoK8eHLL7/09/ePjY0FPjg6OlpbW3PzAbQo
6raAHG1ra2NjOboFqD5bWlo+//xzvHaJvVEhubn5AYHhaMBwZWV1bnZudmYW
hCKbswF3aFhMUlIqe30CMzEiCjK+f2CwpKQiPiHZxdXLwNAKDmtrwkl+elo2
jcoAcctZosGanp5pbmrJyc4LCYmCAPr6FqYmtra2zgH+YTk5eY2NLdMztwyc
TkxM1tfRsy5fCQ6OtLR00NA0VFHR1tE2tbV1CQ6OuHatsL6e3trS3tzcWlZW
lZaWVVhYCrkFARwWFi0lSahQOblTHh7+DHozm1i3spyZmQtiVfOUUdKFtE2z
WzF2NtBqO2oDXU1NJy+vcOZWpgGZQXk6OLgDgdls9i3DiSz2/NwC9LDyODoQ
+lx6+hbGxtagEgP8w69cuQ7ScWZmDsKvrK6OjY3X19LS07J8fILNzOz19CzM
TO3OOLiHh8eCBIUkkCfJ9YjX1oCr0DNKTcnyPh+opW0iK6eupHTaQJ8Ya42O
vgAql05rbG/rbGigt7d3rK6uMRhNvn4hIE2FheXgRriYnA76k80Zv/XxDlZW
0oJbo6qydm52dm0VuyzjaWxMGhkEUYdGQni2sdCIQXV19UsvvZSYmPj73/8e
KZBnn332nXfe+eqrr7777rtvv/32008//ctf/kIOiJmbm4uKisrJybHxa9md
BdSahYWFe/fujYyMfOGFF1CLQ9eDmw+ffPLJK6+8sokPioqKbMyH22BlZQUe
CLjjxr4pztuI/bVlVM6d9blwIfXq1et5eQVg9bw8/BXk1UREZKur6ziBCTqB
vMzNvZ6Rkdvc3DbFMYtg9Ccnpui0poz0bH//MBtrZy0dUyNjGze381GRCUXF
Zb29fcgiLy0u9fcPlJZWxMYln3P3MTSy0tYxsbB08PDwTYi/WFFeNTQ0vMb1
fF5YWOxo77qSe41wnmPrqq6uJyurpqSkZW5mD6Yc5GVFRTWoVgpF7dgxCXU1
vaiIuMGBQTaxzetkdFSiurq+sbFN/rWSmZlZagPDy9MvIiKup6ePzcNWAOM+
Ar1UOnfO79AhEaC3hcUZ6KecPx/g7OyhqWF4/ISUpKRSZSUxowndCH19/cAQ
JyePiIj469eLO7t6QJSy173AjdZU1QPlznsFmpraamsbgfKE2BITUyqriHmk
aKQLekYdHZ35+cURYXHOTh56+uZ6uuZ2Nq7e3sEpKZn19bRN7kaBmQx6U2pq
prd3kLn5GWVlbVlZdTU1XaK/FhAGSRw/LgmHhblDQUHJ6gpyCkQ7Y++uoqIL
WhRU69TUzOWMXF1tUzc3r5aWdqIgmNs8CfTMaW5ulpSURK6/efYphG6Hrq6u
559/PjU1dWRkxMDA4F//+tfWF7JoWqCAgEBGRsbU1NQbb7xhbW3NxtpjZwER
tamp6cUXX0xLSxseHtbV1X3rrbe25cMf/vAHQUHBzMzMycnJffv22dvbszEf
toD0dQ9VhH3dI6AaYNCbLS0cRITlDh8WOXJEDI7Dh0UFhWSMja0bGhgoGItg
1FpbW2dyUrr7WR9raycDfQsTE1tPD/8LSSkgC4cGh5BFXlxkdnf3FRWVgU13
dDpnamqnq2MG8QcGhIPdZDCaJienCcfzLPbE+CSDWHqfe94n2M7OBWy3jo65
w5mz4WFxuTn5IJIX5he5czs8PFJTXRcfn+zoeM5Az1JRkZhKqqtrfvlyLpqC
1dnRff58oKqqrrOTJ1jtuZm5kuIyyADY97CwmLa2DsLV+a5v9J0Nsn3Rl5WV
1aysPKCfnJw6Z006RUxMQVPDwNcnpKuLWM7G2tiba3p6Gm6EguvFoEhBr5qZ
2+vrm8OFfn6hqWmZDQ308bGJtVXiGTI7M9Pa2g69tsDACPszroaGlrq6ZvZn
3MLDY+Bke3vX3Ow8Z/OI5eGhkdqaBhCx7u6+lpbEcj8DA0s31/MxMUmFBTe6
u3u5HYQuL6/09PQXl5SHhseAHIW7Bq4iHPVzcD2/GG43TU0D6LiNjo5Dxy0q
KkFNVdfM1Lao6MYSE006YuHtxXgZ0DkCm877IyEohxcvXtyzZ8+pU6daW1tB
gYDRpNPp165dy8rKys3NLS8v7+3tHR0d7evri42Nfemll4SFhcEEYGeSOw+I
D3Fxcc8999zp06dbWloQH2g0Wn5+PuJDRUUF4gN8RkVFgSgVFxfHe3D8BECN
9PT0YKF+E2ifGtCZrR1FhaWg6y5n5IChbG5uW0aGktyFnotQUIGjI2MN9bTs
7LyAgHAbGxdTE1tjIxtbG5fgkKi8vMKW5va5WeJVJsRMvMqsp6WlZXt6+JmZ
2RsZ2sDh7OyZkHCxrLRqoH9oaXEJQi4tLnZ29pYUl0dFxYNlNzG1JeSusa2H
h29KSkZlZS3qQZCYm5tvb+tEPK+todrbu6mf0gsKiuzt7Z+amslIz9Y6bayr
Y5qVeXViYhJO9vcPwSUPp1IxeAE3F9ytrQ0Pj7Y0tzEaW7q6ekkasFi3VQVL
S8z+/sGqytqU1MteXv6gJIHhwEboB8XEXCguLu3p7ltaIBTgyvLKwMBQeXkN
8NnFxcvExA7UKehG4G1qalZNDRXuFAgDmYE7AvJwLa8wODDCxtrZyNhGX8/S
gpC7IVlZV6jURvSugRvzc3PJyena2ibGxjYgdGdn5zraO708/ZWVtV2cz0NX
bnpqpqjwRnbW1Z7u3vWnPn7w8x6QNa+pqXnrrbf4YuXs+jAFgyEkJPTyyy9/
9NFHR44cUVJSMjY2tra2Njc319LSEhER+frrr//xj3+88cYbQUFB3Bdi7Big
BkUEplKpJ06c+OMf//jxxx8fPXoU8cHKygr4ABoV+PDVV1+9/vrr+/btCw0N
5b4cgxuoTtrb23/88cfx8XE2rqUN/EQ/nTMJjfx+c1r71pCElezoKigsiYtP
dnM7D7rUyNDaysrp7Fmf5OS02loqdKRWV4nY5ucXOjqJBfgRkXHEcKiembEh
PN6c/PyCc3PzmpvbZ6ZnIJHVldWxsYm6Omp6Wqa3N/FuVE/fDASqvb1raGhM
QUFJV0fPzOwsxGNiZKOnY5Zy6TJozuGhkfDwOHV1PWsrx8qKashVdU09KGSw
3dHRiaOjnFmjuNl3EVjb0pu14XqejUYSWesn1zdG2kIR+GVyYqqxsTk3Nz8y
Mt7B0d3AwApIbmPj7O0TBD04Bq15cmKaiGF1DfRhY2ML6MPAwHBzizN6uuag
Y+3PuIaFxYJu7OzsXlxYgJBM5vLg4HBZWVVSUqqbm4+BoaW+vhV01pycPWNj
k8vLq8LDYjQ0DB0c3OvqGhYXl6qr6mxtXdTU9ID/oJPHxyeTk1O1NI20tU2T
k9JAD+MHGo9jZWUFTA+/NBN544yNjSUnJ9vZ2YH+VFBQoFAocnJyampqJiYm
/v7+9fX15CX8UjSMewDJh9HR0aSkJJIPMjIysrKyJB8aGtY3TcYjorcDqpbJ
ycnExES09BtjHciV/dqmLTg3E4nrv3WHY2sbtntrlMvLy8PDo3W1DSkpmf7+
4fZ2bnp65oZGVi7OnmFhMfn5RWCR0fAUhBwZGQU7e+FCqqdngImJ3WktYzNT
Ow93v4T4lMqKWs58PGKEdm52HuTuNWKD0RjOmnrLUxoGlpaORYVliwuLzc1t
Hh5+qqo6np7+ra0dEDgvr8DIyFrjlEFUVDzY7gdciRi8i41uFIvcAWlLiK2X
sFhce71vjRO6VL29/aAk4xOSz58PtLRw0NU1MzO1dXf3jo29UFpa0d8/AAKS
TcxaWerrGygpLouJTnRzJTyRamubQOfL2zsoNTWzoYE2xnEtBSJ2iiNiMzOv
BAVFQAB//9Curp75+cWrV64bGVrp6pqmp2dPTU719vQFB0dyNndwKCosZS7z
7v7mGAjoIVlXV/f+++/zxbgowu0e75uA/JHyRYkwfgnuig8PIT98CtKrhru7
O5peiHEfwa1mt30oTU3OgEQsuF4SHh7r7Oxpbm4PttvC3MHPNzQl5XJdXcPY
2DhaoDEzM9vS0nHlSn5AQIS93Vl9AwsdHVM7O2JYCU62trbNct7+o0Ul8/PE
eJGNjfPp00axMRdGR6ETP5GYmKqpYWhoYJmVdXXTrvcYGPeGm9J0O4bDmdHR
cTq9KYeYtRJ25sxZYxMbPV1TWxuXkJBo4CHhOGJqGkncsfFxGq0xLT3rvGeg
tbUz0Bt6as4uXrGxScS2ET19aNYK3BEXEi+d1jKysnIsK60ETUunN7u4eqmq
6p1z96XRmsjU8eYmfIHZ2dmqqiq+M9NIWixzsMqFFQ54f/orxn0EeoKRrY/2
RMB8uCugKuru7paXl5+cnGTzSc+Uf3Hzjed29by0xOzrH6isrE1NzfT0DLCw
cDAxJuaROjq4R8dcKCwq7erqJnyJswjvTP39AxUV1QkJKU5OHiYm1gYGlsZG
Np4e/nFxycYmtoaGVrm5+fNzC709/QEB4erq+vb2Z8vLq8lnPrbUGPcdtwyc
rm07cDrf3t55o6QiMeGSq4uXqSkxoRoEKmfWSnp5RdXA4CBzad15Wmdnd1Fh
aQThidTV2NgapKm52RktHdNz7j6tre0L84s3blRYmJ/R0DAID4/r67s5yI+f
/HwB1ExtbW3q6urordwOeCLtgCJgYDwqLC4u1tXV8bi34R2JnxlWWmNNTk4z
Gpuv5OaDRXZwcNM3sDAysrGycj5/PigjI4dOa5yYmIQOGGc+3hSD0ZKdnRcU
HFlZUcNcYtKoDGdnj1OniPXRra0dZLREWlyz//DDE+MBAG2bSI4YrGwrTdEw
fl1dQ8bl3MBA4hW8vh7yuOsSEBiel1fY1kJMLIGbZHVlZXR0vKqqbnBgeG52
LiMtm7gXDK0y0nOmp9cdpbJY5GwsTGk+AGqq3t5eBweHHbPTCn6cYmDcA1DP
tKmp6Z133sE+nR4lWOszVG9OUN1uOfPCwmJf78CN0sr4hIve3kEWFg7aOiam
pjZn3byjohNLSir6+wZmZ+eKi8oszM/o6JgmxF8c3th6ZmON1c3kMDAeMjYG
Tm+73G9mZra9vfP69aLIyAT3sz7GRlZa2iaWhMddv6QLadXVdbHRiadPG9nb
u5beqNoyyI85zU9ABJiYmMjIyMAjIRgYGKvEbilj+MUWD+KnB07h3OjIBIPR
lJV91d8/1OHMWWJd0mlDEKJXcvPnN3YGR9b/oecdA+Nn8LPv9Jc5vqFqahsu
pWScPx9kbeXkfT6oqamVDICnmvAvkMWh0WjffPMN7+9Hj4GB8eDAPS6K9wDl
fXDb7m1bam5uvru7d3XDWzi21Bj8hZ9l+EY4PCl0h4DJZA4ODuLHFAYGxsLC
Qn19PX5Lwo/YMNyrm7zscNyW4sc7Bn+D+50+Ep/oxMavjzRzGL8MqEGrq6vf
eOMNPvLphIGBcd+B7v2enh68jp4PsU1Lke7KcTNi7AxwUxmzeueByWQODAzg
UW4MjN0M9JwfHh4+e/bs7OwsG2tRDAwM3gB+Fu1skPNFv/32W2x9MDAwpqam
Lly4sLi4+KgzgoGBgYGxizAxMZGenr6ygvfJwsDYvSC9DR88eBDvR4+BgYGB
8XBA+hd1dHRE/kWx9cHA2M1YXl7u7u7mu13YMDAwMDD4FEh5trW1qaqqzs/P
szfGRm7uWHDrJ4k7/Oluw9/HpO85qvuYNK4QXo6KH0vxQJMG/QmfDAZj3759
w8PD5E8YGBgYGBgPGrOzs7W1tY86FxgYGDyBwcFBvJIRAwMDA+PhAFmcurq6
/fv3d3R0rK6ujo6OLi0tzczMTE9Pw5exsTF0cnl5eWJiYp6DyclJ+BdOop+Y
TObU1BQI2sXFxfHxcc6usiPwCd/hDEQFv0IYFBX8BNdCDCgqiHOF2Fv2ZlSQ
LlwCF0J47qgWFhbm5uZQVGR4FBWch18hKvgXwqONYyDzKCpUCjIqCIaiul0p
4FfuUsC1kBk4jyqEO2myQjYljaJCpdhUIRA5RHW7UpBRwUmUNGoLshQoPHeF
wIXcUcF3OLOpFPAT2RZQCrItuEvBXSGoRVBboGbd1BaoQraWAqLibgv008+2
BUS1qS3gO0SOotrUFtuSE0V15+TkrhCyFOinnyAnWYp7IyeZNFkhZCm4K2RT
W9whObdtC25ykm1BknNT0hAtBIb4Kyoqvv32W/iJjcdFMTAwMDAeCpC5AQP0
+eef9/T0HD169MqVK3Z2dlZWVvn5+YcPH4aTX3zxRVNTE4VCiYmJCQwMVFVV
Bfn69ddf9/X1/fe//y0vL9fT03N3d09NTRUVFW1ra/vss89A2QoKCl6+fNnZ
2dnIyKikpOSHH37o7e398ssvqVTqyZMnw8LCIiIiFBQU6HQ6nISffvzxx6Ki
IlNTU0dHx6ysrBMnTnR1dUGuIEIxMbGLFy96enrq6OggWwlJQwZqa2vV1dX9
/Pzi4+OlpaUhkxC+u7v7yJEjeXl5NjY21tbW165dg3/hJPwEASAYBPb394cL
4XJUCogQooXIPTw8Ll26hEoB4Ts7OwUEBDIzM52cnExMTCB7kElUChqNBpkP
50BRURH+RaWAYhYXFxsbG0PB4UKoBIgEKqS9vR2iTUlJOXfunK6uLlQaVB2E
/+qrr6Ay1dTUAgICYmNjZWRkIJNQ4VDtUPmQeWgIKMjVq1ehaVApmpubpaSk
EhISoOCnTp2qqakhS1FZWamlpQUVlZycLC4u3traCklDNR4/fjw7O9vBwQGq
t7Cw8ODBg6hZGQyGvLx8ZGRkaGgoNAo0DSrF999/D01maGjo6uqakZEhJCQE
DQpJQymEhYWhoc+ePauvr19WVvbdd9+hUtTX16uoqAA9gCSysrKNjY2oFIcO
Hbp+/bqFhQWQKjc399ixY6hZW1paJCUlL1y44OPjo6mpWV1d/c0330Ap4LOq
qur06dPe3t7wq4SEBISE8HAVXAsx2Nvbm5ubQ5wQMyoFpAUpRkdHBwcHKysr
NzQ0QH4gV5C30tJSyKebm1t6ejrkHPKPyAnf4QyUzsDA4MaNG1Be1KxwLcQA
8URFRcnJyUH9oFJAjRUUFJiZmZ05cwZqEuoTlQJqGHIItX3+/HnIM+QckRNK
ASXS0NCA0iUmJkJJodUQOdEtZmtra2lpCaWAVibJue0tBqXgvsVERESgFIic
6BZzcXHZ9haDNiVvMSgF9y0GTIBSoFsMKgTdYlAKX19fiB/uNbQLGwYGBgYG
xkMA0qILCwtgOpeWlkBRTExMgJkDez05OQkGcXFxEX6an58HizY0NNTf3w9G
c3Z2FoUHOTc9PQ0WGez16OgoGEGICiwyfIJZHxsbAzsLlm5qagpCQni4Cswc
iIeBgYHBwUGw9fAvGRWkCHYW7OP4+DhcjpKGqCDakZERMKYgSyA5UF8QHj4h
G2DiwV4PDw9D9lAp4CpUig4O4Av8i5LeWgoyKogWIodSQEKoFCgqVArIEioF
VMimUgDgC3cpIBgEhkvgQlQKVCEQLVQRJIFKQVYIZAMyA1mCjEH2IJMoKkhr
UynICkGlgIJD8WdmZlApIEL4vqkUkDSqEKhSaFbIGGpWshTQBNAQ25YCmhWa
D5UCVQhZCjgPv24qBcQApYDYNpUCNSukDnkg2wKiAgEPDQfNyl0K+ITvcAbO
QykgDHezolJAbNylQM0K6ULqtyvFJnLCd0RO+JWbnKgUW8m5tRRkW0AOETm3
LQUi56ZSbLrFfpqc295i3OS881sM0oJgm24xskKgFIicj/qZhIGBgYGBgYGB
sXuBF9FjYGBgYDwSoLmjnI2Mb4I8yd6yMvdnwz+gqLhPckd1h0nfLqqHXIrb
RfULk76PUT3kCuHfUtwuPH+VYlNbYPwS4DrEwOAGeUewuHx3YGBgYGBgYDwg
gLBfWVlZ5QI2vhgPDUA/bu49Wp8YZF+YvAXWOPjlcWJgYGBgYGBgYGBgYGBg
YGBg8A7QiM3g4GB2dvbly5czMjLS09NzcnJWVlbIoSH0BY0OoZEr8lrugSzu
MOSZTSNd5K/kq088DLtrQU6waW5uBuJd5iAlJeXGjRuIGOwNUrE3Bie5ubSJ
PNz0ux27NsVA8pmbfujXnp6e3t5edKazs7OmpobNmZfOHQM3jTcRnjsD6FZi
37pzB/eNsO09talQEAl3JlEk+N7BwMDAwNgBQFYyPj7++++/R267LCwsnJyc
lpeXUYA7tHR3EgwbTYxNQPQD1gkLCyPHjMbGxmFhYejXR0IYlKUzZ86Ul5ej
M2VlZYmJiZuC3UPeqqqqyKLdCbZNIiEhoaCg4G6TxsDAwMDA4FkgyxsbG+vl
5cV9fmpqCqwe2mc5LS2tt7cXLOmNGzf8/PwiIyPRMA6TyYTvbm5uaBe8zs5O
sJKZmZmOjo5UKhXOwOWhoaGgMYqLi1G0dXV1rq6uUVFRi4uL8O/Q0JCHhweE
b2xsZGOxuvuA6AedoGvXrnGfb21tvXTpEnwBniQnJ4+NjRUWFhYVFQHZcnJy
UJjh4WFvDvr6+uDfmpqa0tLSmJiYc+fOAa/gTH9/v7u7u7OzM8SGLoFrXVxc
srKy0L80Gs3BwQGYPzo6yuYap52cnAR5DPRG/wKxGxoagMx5eXmQDeipITUI
GYOQ8GVmZiYlJQW+QE6Az3CPjIyMsG/lP0QFSvv48eNNTU1wK0FZgoKC/n97
d/5S1dbHcfwvK6hfwvqhiQZscEjTBjPLZrVJ7MmwsihsIm3ASBMqf4iM1MQs
pRESGpRGS0wblLKEu++bs+hgp7jP5eHe53m6vl8/XPY5rr322t3vZn3WPvto
XV1dT0/P/v37Kysrh4eHQ1eHDx/mFMKvquvs7GxtbaUZw6bz/v7+efPmLVu2
jP45u10xDC/y2pEk/bJCGKipqcnMzCRGXrx4kQxw69Yt0mZubu6hQ4eYN+fM
mcOsmpOTs2DBAhrk5eUxA0ax21nM45cvX168eDHTPS3Hjx9/6tQp5t/58+d/
/fqV5MAc2tDQsHDhQmZMJlaOQvvy8nImaA7NIYjB58+fz8jICNO6U+qYEr8J
WVBQQERk1UPu6urqGhgYmD59+o0bN44fP75hwwaqcdKkSbQh8hHGKFSS25Il
S0iDlGt2djb1SYSbPHkyPZBs2YWely5dWltbSxuqbmRkhCLPz88n9K5fv551
1tDQEPXc1NREmqV99O3zcTbInOTJKLbaimK3IouLiwcHBydMmEBKpJ9Zs2ax
OmM8rKrYi3cKCwtZvnEh1NfXnzlzhouFfcvKykL9p6amEkG5mrgu2JER0gOV
n5KSwulUV1ezIxcOXXFxVVVVcYKMmcDJ6UycOJFzJOLSJ0mV/27ZsoWLhdPn
X4NjcZphZSdJ0q8ohAEmO6Z+IgFzLrNquCXFVJienk4QDTc5mfsIolHsUbqs
rCyCJbuQWp89e7Zx40bmytu3b/N+6HbRokXsvnXrVmb/hw8f9vb2MstvjaF9
R0cHseH169dpaWnhvtbbt2/jTwVo7Ajlt2PHDmJhSUlJKL/w4fidO3dmzJhB
1ZG7KB62qRzeJ6dRRY2NjcnJySxweJMSbW1tJbWS/aLYw88sbQifc+fOJaD2
9PRQXcQ8DkFyoz3Zku03b94kJSXRW19fX39//+jxUMxtbW1shJrkcmBV9eHD
BzqkW94hu3JEovLKlSt5SbilpEmhXC/0393dPW3aNMbPBTW6/pubm0mhYffT
p0+zQTqlZzZYjvGPwIKOHcPfOiGLEnEvXboUcjIjYUHHWRw8eJDGvDN16tQT
J05wsuFPS/+3/89JkvQXiX9GH+bxuDC75ebmTpkyJYrdMlqzZg0TNHMiIZPJ
l1mSDMBeTKa7d+9mar527VpBQUH4UgYRInzIyGxLMODl06dP+emKFSvYhfa8
PzAw8PnzZ6bglJSUTZs2vX//PvK+6BgTym/Lli3xz82DUAYTJ06k0tgYHBxk
mUNopPza29uJrGQ5siiFRPnt2bOnq6uL2EkcpfaIggQ5eiA90pLYSXZ99eoV
ZbZ58+bQPkRBouzatWvnz5/Pgij+jSSORTWGvykckue5c+d27dpFuVLGw8PD
tCwqKqL++SnvsFIjkfJmRUUFhwhD2rdvX6j/I0eOUP/Z2dlE4itXrtAzR+F8
L1y4EHahARtnz54tLS3lIpo5cybDowcuk/v373NottmFo7O+4+j0HAZPvqUf
Aur27ds/ffoUee1Ikn5N8Sy6bds2JnrC4ZcvX8JHfufPn1+1ahXzXbh1s3jx
4vDNCxLp8uXL37x5w7wZWtbX19+6devmzZvr1q0LfTJHP3jw4NSpU+GJ0/z8
/JMnTzLjM89G356jo4fKysowDPJAQ0NDfDwaC+JfPycrVldXU35kKuJW+GT8
XzFLly4NhcGaKDyWzCqGQuro6EhNTQ39UEvEVELd0aNHo1jCZK+XL19WVVWF
BiyaQtGG5zw7Ozvr6uoeP35cU1PDy7dv306dOjU8dBrFynvv3r3Rt2/ZR6Oy
KJdAGFthYWH4jKC8vJyISAxmmzzJUit0cuzYMdIvoTHUP4mXwbS0tIRoTSQO
9zYPHjwYHgZgJCzKGPns2bNDD1ySBGya7dy5M4o9v52WlsbRybqMh5jNWYeW
s2bN4l8j8tqRJP2awvx14cKFpKSknJwcJvHs7GyiIzM1+fDRo0dMpmROXhYV
FS1YsIAwmZKS0tTUxF5M/bm5ucyVWVlZTOWtra0bN26MYhmDLPr8+XOyKz86
cOBAeKCU8Mn7paWlTNlM3yMjIxs2bGB2LisrW7lyJZEg8t7OGBPKj5IgDVJL
y5YtS09PJwq2t7cnJyfzU9Y48+bNe/36NS/z8vJKSkpo8OLFC1Iiia6goICy
ZAVEjiXUhXhGoqOGWSWRAGnASorqIuXeuHEjMzOTAqYar169Spwj3XFoeigu
Lg5/64Hd6Sd8kSr+q5YIrnTy7t07ug1ZlAUa668o9oWpcePGhW/e0SHFTK7m
KmBsDKmiooJd4vVPOiU3sgsHDd91IleHHMsh2CX8UzBsxsPFSP6sra0Nz2az
TejlLBjbwoULiak0C7/yYs2aNR8/fvQv0EmSfmnMsL29vS+/YeofHBwMH5pH
sUmWl+TGxsbGe/fudXd3R99CI7NwS0tLmKCHh4eZE+O7hHn8wYMHly9fDl8r
xtDQUHNz85MnT+KHJnXQbfhIVGMT//d7enooPNIaObOvr4/6CXcUMRBDTCXO
US3xZzvR0dFBWI13Ej6qpvDipUv+ZN0U/2oPqyGKLV6NvM9PaRP/XaZR7DP6
hMcvaUbn4UP/eJvwtXfSMtvxEMiObW1td+/eje/b2dlJ/XNxhZdcWZwdpxaG
xEYYMy9Dnoxiv2uCTsI2DcKlwYE4qRDdCdthr/BgTBiJJEn/SKNvtqxevfr6
9evx96Pv72H+23syCfdtfmzvXR0liJcEcSsjI4NEmvD+jy3/TG/R93/i86/y
xx3+B7+A98+P0GtHkvQP8Nv3olETXNjo7u4O94VGP5YWXia0TNhIaBBejv5T
OH9HMNAv5LcfRD+U0KNHj758+ZJQKqP/UvxPVzoJ1fXTakx4zPKnpfjTKyL6
2QorYYQ/HnH0Lgnbo3f54wajB++1I0mSJEmS9LfyDoz+h/ySuCRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkv5//A5UKffH
    "], {{0, 583.}, {900., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{900., 583.},
  PlotRange->{{0, 900.}, {0, 583.}}]], "Output",
 CellChangeTimes->{3.8995617720349827`*^9},
 CellLabel->"Out[3]=",
 CellID->1755863594,ExpressionUUID->"03353d51-5d2b-46d8-9e20-0a255d941e74"]
}, Open  ]],

Cell["\<\
\[OpenCurlyDoubleQuote]SEI2HR\[CloseCurlyDoubleQuote] stands for \
\[OpenCurlyDoubleQuote]Susceptible, Exposed, Infected two, Hospitalized, \
Recovered\[CloseCurlyDoubleQuote] (populations.) \[OpenCurlyDoubleQuote]Econ\
\[CloseCurlyDoubleQuote] stands for \[OpenCurlyDoubleQuote]Economic\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.79516846074577*^9, 3.795168463174677*^9}, {
  3.795168504614512*^9, 3.7951685746581583`*^9}, {3.795256418879994*^9, 
  3.795256470724182*^9}},
 CellID->1036760615,ExpressionUUID->"2b1e47f7-b04f-4049-9e20-72b63ec5d6dc"],

Cell["\<\
In this notebook we also deal with both quarantine scenarios and medical  \
supplies scenarios. In the notebook [AA4] we deal with quarantine scenarios \
over a simpler model, SEI2HR.\
\>", "Text",
 CellChangeTimes->{{3.793464032654152*^9, 3.7934640378868856`*^9}, {
  3.79346422439363*^9, 3.793464243686232*^9}, {3.795168585572262*^9, 
  3.7951685869661617`*^9}, {3.795256493986354*^9, 3.7952565478755913`*^9}, {
  3.795256677713019*^9, 3.7952566806835814`*^9}, {3.79560641842855*^9, 
  3.79560644032132*^9}},
 CellID->153344547,ExpressionUUID->"f6a25956-05e3-40b2-a64e-1fd31495d5f9"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We consider the contagious disease propagation models as instances of the \
more general ",
 ButtonBox["System Dynamics (SD)",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/System_dynamics"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/System_dynamics"],
 " models. We use SD terminology in this notebook."
}], "Text",
 CellChangeTimes->{{3.792515109898424*^9, 3.792515118613044*^9}, {
   3.792515191120707*^9, 3.7925152040358553`*^9}, {3.79251524705715*^9, 
   3.7925153823741827`*^9}, {3.7925154305557137`*^9, 
   3.7925154305563602`*^9}, {3.792515515308333*^9, 3.792515581922345*^9}, {
   3.792518958995797*^9, 3.792518960900881*^9}, {3.795010617001124*^9, 
   3.795010630322556*^9}, {3.79516870594328*^9, 3.7951687324201307`*^9}, {
   3.7952110527848186`*^9, 3.7952110601424637`*^9}, 3.795211102157668*^9},
 CellID->281425029,ExpressionUUID->"85573987-751d-4a07-b86e-026948bf61b7"],

Cell[CellGroupData[{

Cell["The models", "Subsection",
 CellChangeTimes->{{3.795011476992119*^9, 3.795011480232112*^9}},
 CellID->1151471709,ExpressionUUID->"cb28fdf3-3f07-4c82-a639-8388a9bf4d69"],

Cell[CellGroupData[{

Cell["SEI2R", "Subsubsection",
 CellChangeTimes->{{3.795010516898909*^9, 3.7950105232883987`*^9}},
 CellID->1809870046,ExpressionUUID->"5552f16b-9ad2-41f6-b942-d06b56247aba"],

Cell[TextData[{
 "The model SEI2R is introduced and explained in the notebook [AA2]. SEI2R \
differs from ",
 ButtonBox["the classical SEIR model",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 ", [Wk1, HH1], with the following elements:"
}], "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
  3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
  3.792515949788693*^9}, {3.792782527441436*^9, 3.792782553283967*^9}, {
  3.792861591788129*^9, 3.7928615917896967`*^9}, {3.79501053045463*^9, 
  3.795010577041779*^9}, {3.795010641482991*^9, 3.7950106559057083`*^9}, {
  3.795606475322131*^9, 3.795606484356185*^9}},
 CellID->1527487014,ExpressionUUID->"464d6508-0ca8-4b7e-9a65-97e5b19a117d"],

Cell["\<\
1. Two separate infected populations: one is \"severely symptomatic\", the \
other is \"normally symptomatic\"\
\>", "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
  3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
  3.792515960948843*^9}},
 CellID->1454728060,ExpressionUUID->"89cf0258-bec3-4ba8-b19a-28d828c3e10e"],

Cell["\<\
2. The monetary equivalent of lost productivity due to infected or died \
people is tracked\
\>", "Text",
 CellChangeTimes->{{3.7925156254102907`*^9, 3.792515639347432*^9}, {
   3.792515684810227*^9, 3.7925158157510443`*^9}, {3.792515938918*^9, 
   3.79251602014438*^9}, 3.795606550587318*^9},
 CellID->513183325,ExpressionUUID->"57248b13-15d4-44d1-b13a-4c4310639380"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR", "Subsubsection",
 CellChangeTimes->{{3.795011487139296*^9, 3.795011491999469*^9}},
 CellID->777816923,ExpressionUUID->"994d6c7c-85e5-441c-b566-3cbfd7fb1abe"],

Cell["\<\
For the formulation of SEI2HR we use a system of Differential Algebraic \
Equations (DAE\[CloseCurlyQuote]s). The package [AAp1] allows the use of a \
formulation that has just Ordinary Differential Equations (ODE\
\[CloseCurlyQuote]s).\
\>", "Text",
 CellChangeTimes->{{3.7950113306945877`*^9, 3.7950113823776007`*^9}, {
  3.795011511793723*^9, 3.795011542613887*^9}, {3.7951128264874277`*^9, 
  3.795112849417819*^9}, {3.795168757914119*^9, 3.7951687584557667`*^9}},
 CellID->1036065572,ExpressionUUID->"12a12ded-f536-49eb-9379-289d058a2877"],

Cell["Here are the unique features of SEI2HR:", "Text",
 CellChangeTimes->{{3.7951023289025507`*^9, 3.795102346902504*^9}},
 CellID->1356658728,ExpressionUUID->"7910cc67-0520-40a2-b7dd-ef9617047551"],

Cell["People stocks", "Item",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102376518837*^9}, {
  3.795102457221472*^9, 3.795102472307043*^9}, {3.795102667724598*^9, 
  3.7951026750172453`*^9}},
 CellID->1529361297,ExpressionUUID->"6657d089-62cc-4e11-bbb3-5c60218e2beb"],

Cell["\<\
There are two types of infected populations: normally symptomatic and \
severely symptomatic.\
\>", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102376518837*^9}, {
  3.795102457221472*^9, 3.795102472307043*^9}, {3.795102667724598*^9, 
  3.795102674238134*^9}, {3.795606691474968*^9, 3.7956066979324427`*^9}},
 CellID->743547736,ExpressionUUID->"ee37c78a-31eb-4cde-a8a1-9f3b3f9e5200"],

Cell["There is a hospitalized population.", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.7951023831214447`*^9}, {
  3.795606699822795*^9, 3.7956067068541107`*^9}},
 CellID->599457059,ExpressionUUID->"6dbbe714-5203-4098-9ecc-334c45f44c54"],

Cell["There is a deceased from infection population.", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102404092387*^9}, {
  3.795606708519348*^9, 3.79560671441438*^9}},
 CellID->1229002536,ExpressionUUID->"76c34d74-e7bb-4a2e-9426-9b431b796680"],

Cell["Hospital beds ", "Item",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102451587995*^9}, {
  3.7951026835412188`*^9, 3.795102690654765*^9}},
 CellID->1347905706,ExpressionUUID->"b419d524-c83d-4356-b481-d423dcbbbc08"],

Cell["\<\
Hospital beds are a limited resource that determines the number of \
hospitalized people.\
\>", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102451587995*^9}, {
   3.7951026835412188`*^9, 3.795102690359499*^9}, 3.795606595632936*^9},
 CellID->446208539,ExpressionUUID->"cc90dcf5-2c7f-4730-b6a9-78d70a238c94"],

Cell["\<\
Only severely symptomatic people are hospitalized according to the available \
hospital beds.\
\>", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102496040183*^9}, {
   3.79510256729563*^9, 3.795102567295826*^9}, {3.7951026978740387`*^9, 
   3.795102710238551*^9}, 3.79560660392865*^9},
 CellID->414019649,ExpressionUUID->"55b311ff-e095-40dd-b13a-9c4ec50eae52"],

Cell["\<\
The hospital beds stock is not assumed constant, it has its own change rate.\
\>", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102496040183*^9}, {
  3.7951025679803267`*^9, 3.795102620498035*^9}, {3.795606589952886*^9, 
  3.795606605072493*^9}},
 CellID->581224463,ExpressionUUID->"3e8ecedc-5e4f-442a-97d9-2fc13f0093ca"],

Cell["Money stocks", "Item",
 CellChangeTimes->{{3.795102352988839*^9, 3.79510254331061*^9}},
 CellID->1883923085,ExpressionUUID->"58362290-7c9a-45df-a483-b2acbfbf8d4c"],

Cell["The money from lost productivity is tracked.", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102536310327*^9}, 
   3.7956066070330553`*^9, {3.795606684950674*^9, 3.795606685141452*^9}},
 CellID->596398227,ExpressionUUID->"b2fe2228-108f-4dc3-b322-dc584d1f6531"],

Cell["The money for hospital services is tracked.", "Subitem",
 CellChangeTimes->{{3.795102352988839*^9, 3.795102542880179*^9}, 
   3.795606607997456*^9, {3.795606688335977*^9, 3.7956066883802767`*^9}},
 CellID->1358820640,ExpressionUUID->"67daccc0-b501-4aba-84b2-0e34aef94e04"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR-Econ", "Subsubsection",
 CellChangeTimes->{{3.7952675536265373`*^9, 3.795267559835939*^9}},
 CellID->1357394282,ExpressionUUID->"3f8d9b6f-858e-49ef-bcc9-f47c20399d0e"],

Cell["SEI2HR-Econ adds the following features to SEI2HR:", "Text",
 CellChangeTimes->{{3.795267566067679*^9, 3.795267587736589*^9}},
 CellID->1006915493,ExpressionUUID->"bb5aebf1-b776-42f6-8499-38339ecc7354"],

Cell["Medical supplies ", "Item",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.7952676150563383`*^9}},
 CellID->1057552491,ExpressionUUID->"fcd9e802-84d7-42be-824c-a4e60b6a5aec"],

Cell["Medical supplies production is part of the model.", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267625098152*^9}, {
  3.795606789892864*^9, 3.795606834849308*^9}},
 CellID->1710053665,ExpressionUUID->"2aaf61f2-ab82-4fc3-874b-dd0ca194336c"],

Cell["Medical supplies delivery is part of the model.", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.7952676347108*^9}, {
  3.795606803078336*^9, 3.795606853243394*^9}, {3.799838311711726*^9, 
  3.7998383234675913`*^9}},
 CellID->1098299854,ExpressionUUID->"16d58eb1-3648-4da4-b2cd-ef043aa2da39"],

Cell["\<\
Medical supplies accumulation at hospitals is taken into account.\
\>", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267652486231*^9}, 
   3.7952682407194347`*^9, {3.795606809524714*^9, 3.795606818479683*^9}, {
   3.79560686012842*^9, 3.7956068639309797`*^9}},
 CellID->1503700213,ExpressionUUID->"5b311966-c842-467a-8fa4-55b1b77d33d1"],

Cell["Medical supplies demand tracking.", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267661924914*^9}, 
   3.795606866315627*^9},
 CellID->1101921995,ExpressionUUID->"456e29df-ccef-4203-b613-0c28a69c5f25"],

Cell["Hospitalization", "Item",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267673040984*^9}},
 CellID->103998237,ExpressionUUID->"190beb00-6009-4632-ba9a-04936245175a"],

Cell["\<\
Severely symptomatic people are hospitalized according to two limited \
resources: hospital beds and medical supplies.\
\>", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267729455399*^9}, {
  3.795268242771248*^9, 3.795268242772194*^9}, {3.795606755049746*^9, 
  3.795606781522492*^9}},
 CellID->1994164248,ExpressionUUID->"ed207027-4cb1-49ac-9134-59948d203e6a"],

Cell["Money stocks", "Item",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267729455399*^9}, {
  3.7952682442516336`*^9, 3.7952682523356533`*^9}},
 CellID->141237407,ExpressionUUID->"c1323bbb-e338-4773-8e5a-19ba081adced"],

Cell["Money for medical supplies production is tracked.", "Subitem",
 CellChangeTimes->{{3.7952675942382517`*^9, 3.795267729455399*^9}, {
   3.7952682442516336`*^9, 3.795268269565338*^9}, 3.795606775650828*^9},
 CellID->807669514,ExpressionUUID->"3b3c0f64-6db0-44ec-b8c6-f3a978c500a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR-Econ\[CloseCurlyQuote]s place a development plan", \
"Subsubsection",
 CellChangeTimes->{{3.795055642324287*^9, 3.795055703042118*^9}, {
  3.7951033858150043`*^9, 3.795103402463161*^9}, {3.795256688885395*^9, 
  3.795256692642584*^9}},
 CellID->257389111,ExpressionUUID->"dc097bac-cead-42b0-b910-48d4e845f9bb"],

Cell[CellGroupData[{

Cell["\<\
This graph shows the \[OpenCurlyDoubleQuote]big picture\
\[CloseCurlyDoubleQuote] of the model development plan undertaken in [AAr1] \
and SEI2HR (discussed in this notebook) is in that graph:\
\>", "Text",
 CellChangeTimes->{{3.79500568593758*^9, 3.795005692979492*^9}, {
  3.795008769725748*^9, 3.79500889228541*^9}, {3.7950557163728657`*^9, 
  3.7950557387388763`*^9}, {3.795168824243733*^9, 3.795168847093136*^9}},
 CellID->906723519,ExpressionUUID->"47d8940a-76f5-43df-b45a-17ca46705569"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "SIR", "SI2R", "SEI2R", "MultiSiteExtension", "RandomGraphExtension", 
       "GridGraphExtension", "MultiSiteExtension-EnBloc", "Patient0-over-USA",
        "SEI2HR", "SEI2HR-Econ", "Ages-SEI2HR-Econ", "MultiSite-SEI2HR-Econ", 
       "MultiSite-Ages-SEI2HR-Econ", "Hubei-Calibration", "EU-Calibration", 
       "SARS-CoV-2-EatsWorld", "MultiSiteExtension-Econ"}, {{{1, 2}, {2, 3}, {
       3, 4}, {3, 9}, {9, 10}, {10, 11}, {10, 12}, {4, 5}, {4, 6}, {4, 7}, {4,
        17}, {5, 8}, {17, 13}, {11, 13}, {12, 14}, {12, 15}, {12, 16}, {13, 
       14}, {13, 15}, {13, 16}}, Null}, {
      GraphHighlight -> {"SEI2HR-Econ"}, ImageSize -> 1000, 
       VertexLabels -> {"EU-Calibration" -> Rotate[
           Style[
           "Calibration with real data for European Union", FontSize -> 14], 
           Rational[1, 12] Pi], "SI2R" -> Rotate[
           Style[
           "SI2R: Extension of the SIR model with two infected populations \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SARS-CoV-2-EatsWorld" -> 
         Rotate[
           Style["How SARS-CoV-2 eats the world?", FontSize -> 14], 
           Rational[1, 12] Pi], "SEI2R" -> Rotate[
           Style[
           "SEI2R: Extention of the SEIR model with two infected populations \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SEI2HR" -> Rotate[
           Style[
           "SEI2HR: Extension of SEI2R with hospitalized population \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], 
         "MultiSiteExtension-EnBloc" -> Rotate[
           Style[
           "En bloc execution of multi-site extensions \[Checkmark]", 
            FontSize -> 14], Rational[1, 12] Pi], "MultiSiteExtension" -> 
         Rotate[
           Style[
           "Multi-site extension of single-site model \[Checkmark]", FontSize -> 
            14], Rational[1, 12] Pi], "MultiSite-SEI2HR-Econ" -> Rotate[
           Style[
           "Large scale model: multi-site application of SEI2HR-Econ \
\[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], "SEI2HR-Econ" -> Rotate[
           Style[
           "SEI2HR-Econ: Economics extension of SEI2R with hospitalized \
population \[Checkmark]", FontSize -> 14], Rational[1, 12] Pi], 
         "GridGraphExtension" -> Rotate[
           Style["Extension over grid graphs \[Checkmark]", FontSize -> 14], 
           Rational[1, 12] Pi], "Patient0-over-USA" -> Rotate[
           Style[
           "Patient 0 disease propagation over USA \[Checkmark]", FontSize -> 
            14], Rational[1, 12] Pi], "MultiSite-Ages-SEI2HR-Econ" -> Rotate[
           Style[
           "Large scale model: multi-site and economics extension with age \
compartments of SEI2HR", FontSize -> 14], Rational[1, 12] Pi], "SIR" -> Rotate[
           Style["SIR (basic) model \[Checkmark]", FontSize -> 14], 
           Rational[1, 12] Pi], "Ages-SEI2HR-Econ" -> Rotate[
           Style[
           "Economics extension of SEI2HR with age compartments", FontSize -> 
            14], Rational[1, 12] Pi], "RandomGraphExtension" -> Rotate[
           Style["Extension over random graphs \[Checkmark]", FontSize -> 14],
            Rational[1, 12] Pi], "Hubei-Calibration" -> Rotate[
           Style[
           "Calibration with real data for Hubei, China", FontSize -> 14], 
           Rational[1, 12] Pi]}, 
       VertexShapeFunction -> {"SEI2HR-Econ" -> "Square"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 7.}, {0., 6.}}, 0.05338164251207729], 
        ArrowBox[{{0., 6.}, {0., 5.}}, 0.05338164251207729], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQpEHNRucey7nbVzv/e7Zg+ts8IOlh4Bqd4iZ/bf
35d1aV2/sMPOE4WePnzX9+8u3DK3113YQX/S+8ipmx/sv8uWuOrYFyGHdukf
FQldz/Z71BX8iJwu5JDUcKmxnfvt/l/XH7W76ws5JCbYW7VKf9r/RXhHRP8e
QYfgvLoVJWzf9psZfcgytBd04Mhaxj3J7df+/Ubd+3S3Czj0HZ1joVj1e3+Q
jYL/2m4BByf2iPzGzj/7NYOfrJoaJeCgpH9j/aaSv/tdy69ffKYs4KBjK/tr
i/W//c6Bn9sdz/M7pBiq+3Xc+7e/5dxUpnZvfocT3N9W68T+3++XNk143h4+
h4gzncKLtv/fP0fi6642JT4HseJHLS/e/t9f9HTjD4daXgdowBw4ewYEeOD8
9DePvp6XRvB/JU40+lDC7cAI5bfo3mjSvcEFl2fx3/6s3RXBrz6mF/d/Dyec
/2qy3cvJdgg+WPkpDjh/jYG6lUgCgg+hOBwAJlSvTw==
          "]], 0.05338164251207729], 
        ArrowBox[{{0., 5.}, {0., 4.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-4., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-3., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-2., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-2., 3.}, {-1., 2.}}, 0.05338164251207729], 
        ArrowBox[{{-4., 2.}, {-4., 1.}}, 0.05338164251207729], 
        ArrowBox[{{0., 4.}, {0., 3.}}, 0.05338164251207729], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.05338164251207729], 
        ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQo4HGbympsuPrTC/qSydvHXOewOcuvXBN86vMu+
Y1aS7kNNdoeqPTNFz04+am+Zskzv8DI2B41P0yd4HDtnf6/hW9lsYTYHn5qM
s+trrtiXfQhiyypgdXiSriTVKXbLnmXz7jt6e1kc3t+1EY+QeGDfcsLg18uf
zA6yNuatk1If2/802BQ3W43ZodqP4frnT8/sE9/Yczk7MzlETA4Vtb/5wt7I
VUh98n5Gh3MtoT4hba/s37t1zvtmyujwSImhxvjXa/sZH5cU5C5jcOjPDV1y
x+StvZZr6tzvAgwO11JCj/qbvbMPaJ7iqfX6n/1ODob7Pf/e2SudW87bs+Kv
vVlk6MfJve/tT2SxtItE/bH3Cwv9k/L4vb175Kqth///soeEywf7WTNB4Cec
f/7G0dfzzX/A+Z8PK6U+ePnNnhHKZ4/ewBq94Stcnn1e3ln+7i9w/tee2D3/
Kj/D+ZfUa4HoE5wPVj7lI5wfkehXonHgA5wPowF79rWN
          "]], 0.05338164251207729], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {-1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {0., 0.}}, 0.05338164251207729], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {-1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {0., 0.}}, 0.05338164251207729], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.05338164251207729], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.05338164251207729]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 7.}, 0.05338164251207729], InsetBox[
          RotationBox[
           StyleBox["\<\"SIR (basic) model \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 7.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SI2R: Extension of the SIR model with two infected \
populations \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 6.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 5.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2R: Extention of the SEIR model with two infected \
populations \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 5.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 3.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Multi-site extension of single-site model \
\[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-1.9466183574879228, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Extension over random graphs \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-3.946618357487923, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-3., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Extension over grid graphs \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-2.946618357487923, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"En bloc execution of multi-site extensions \
\[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-1.9466183574879228, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-4., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Patient 0 disease propagation over USA \
\[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-3.946618357487923, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2HR: Extension of SEI2R with hospitalized \
population \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 4.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
          RectangleBox[{-0.04710145241545893, 2.952898547584541}, \
{0.04710145241545893, 3.047101452415459}]}, InsetBox[
          RotationBox[
           
           StyleBox["\<\"SEI2HR-Econ: Economics extension of SEI2R with \
hospitalized population \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Economics extension of SEI2HR with age \
compartments\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Large scale model: multi-site application of \
SEI2HR-Econ \[Checkmark]\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {1.0533816425120772, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           
           StyleBox["\<\"Large scale model: multi-site and economics \
extension with age compartments of SEI2HR\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Calibration with real data for Hubei, China\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {-0.9466183574879227, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"Calibration with real data for European Union\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.05338164251207729], 
         InsetBox[
          RotationBox[
           StyleBox["\<\"How SARS-CoV-2 eats the world?\"\>",
            StripOnInput->False,
            FontSize->14],
           BoxRotation->0.2617993877991494], 
          Offset[{2, 2}, {1.0533816425120772, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, DiskBox[{-1., 2.}, 0.05338164251207729]}}],
     
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1000]], "Output",
 CellChangeTimes->{
  3.795007023001236*^9, 3.7950073414839563`*^9, 3.795007391714611*^9, {
   3.7950074446808767`*^9, 3.7950074518039837`*^9}, {3.795007612147162*^9, 
   3.795007616335793*^9}, 3.795007794977274*^9, {3.7950078470670767`*^9, 
   3.795007855030254*^9}, 3.795008235678174*^9, 3.795008336441968*^9, 
   3.7950083821979437`*^9, 3.795008422307858*^9, {3.7950085556294127`*^9, 
   3.795008568611043*^9}, {3.795008626895293*^9, 3.7950086536305532`*^9}, 
   3.795008694310647*^9, 3.795010769972102*^9, {3.795055813649102*^9, 
   3.7950558819023438`*^9}, {3.795256720328163*^9, 3.795256756062107*^9}},
 CellLabel->"Out[367]=",
 CellID->758224721,ExpressionUUID->"f04a4e30-e467-4847-810a-e8f400b1c159"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notebook structure", "Subsection",
 CellChangeTimes->{{3.7950089815674133`*^9, 3.7950089843573713`*^9}},
 CellID->314924549,ExpressionUUID->"11d2101f-0df0-4a21-b6c9-3756273d4b6e"],

Cell["The rest of notebook has the following sequence of sections:", "Text",
 CellChangeTimes->{{3.795008915078377*^9, 3.795008943665434*^9}},
 CellID->1537188835,ExpressionUUID->"767e7af5-98fb-4f43-9145-4f01ebd42e1f"],

Cell["Package load section", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.79500899884743*^9}},
 CellID->1304476435,ExpressionUUID->"198132bd-ac43-4b18-bf20-021d6b4d466a"],

Cell["SEI2HR-Econ structure in comparison of SEI2HR", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009027517324*^9}, {3.7952567760960703`*^9, 
  3.7952567912845297`*^9}},
 CellID->674890822,ExpressionUUID->"8d4eb057-ac19-42fa-bd5b-401f3ce14c63"],

Cell["Explanations of the equations of SEI2HR-Econ", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009062977357*^9}, {3.795103427836858*^9, 
  3.795103427838146*^9}, {3.795256786423706*^9, 3.795256787369231*^9}},
 CellID->2028905547,ExpressionUUID->"8325ca57-24fb-4137-80b1-8a97250c5d11"],

Cell["Quarantine scenario modeling preparation", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009062977357*^9}, {3.795103428621379*^9, 
  3.795103443403946*^9}, {3.795168874533469*^9, 3.795168876984624*^9}, {
  3.7952674924065313`*^9, 3.795267492406776*^9}, {3.79559760665795*^9, 
  3.795597606658341*^9}},
 CellID->2070181363,ExpressionUUID->"308d392e-fdac-41fb-b540-be444ffe4171"],

Cell["\<\
Medical supplies production and delivery scenario modeling preparation\
\>", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009062977357*^9}, {3.795103428621379*^9, 
  3.795103443403946*^9}, {3.795168874533469*^9, 3.795168876984624*^9}, {
  3.795267497644766*^9, 3.795267523497924*^9}},
 CellID->8119247,ExpressionUUID->"0c769d65-7a36-4774-b23d-ad436e41e195"],

Cell["Parameters and initial conditions setup", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.795009082439451*^9}},
 CellID->1168714568,ExpressionUUID->"40c619f4-4fce-4374-a654-7a2ecc79709f"],

Cell["\<\
Populations, hospital beds, quarantine scenarios, medical supplies scenarios\
\>", "Subitem",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.79500913405713*^9}, {3.795168892903407*^9, 
  3.7951688929045877`*^9}, {3.7952675308784523`*^9, 3.795267538078158*^9}},
 CellID->1700308914,ExpressionUUID->"452fec85-f095-4d23-8d9d-fdb486d9c435"],

Cell["Simulation solutions", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.79500913405713*^9}, {3.79516889491639*^9, 
  3.795168908169701*^9}, {3.7955976377083397`*^9, 3.79559764348733*^9}},
 CellID->527026969,ExpressionUUID->"01e4ef6e-d111-4d9e-95f1-2a00e38f9098"],

Cell["Interactive interface", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.7950091449685802`*^9}},
 CellID->1519707755,ExpressionUUID->"bfb1c987-8d7c-4b5c-ba05-caacb74a5ccb"],

Cell["Sensitivity analysis", "Item",
 CellChangeTimes->{{3.795008950730822*^9, 3.7950089603043957`*^9}, {
  3.7950089908598633`*^9, 3.79500915496677*^9}},
 CellID->1705224514,ExpressionUUID->"bbaac76c-c135-49ef-8701-a29637c3f112"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load packages", "Section",
 CellChangeTimes->{{3.793231620635537*^9, 3.793231628723988*^9}},
 CellID->1539137583,ExpressionUUID->"729f7d84-7b68-4cec-bc19-f07e0375237f"],

Cell["\<\
The epidemiological models framework provided by the paclet \
\"AntonAntonov/EpidemiologicalModeling\" was originally implemented with the \
packages [AAp1-AAp4, AA3]; many of the plot functions are from the package \
[AAp5]. This paclet\
\>", "Text",
 CellChangeTimes->{
  3.792942992304307*^9, {3.793025167381392*^9, 3.7930251825463467`*^9}, {
   3.793050739557584*^9, 3.793050740051427*^9}, {3.795168931029976*^9, 
   3.795168946756179*^9}, {3.7955955915961514`*^9, 3.795595613758498*^9}, {
   3.899561790359412*^9, 3.899561859624378*^9}},
 CellID->1844829366,ExpressionUUID->"6a57b3e4-4c30-4fc1-b2a0-8eff6f306a7b"],

Cell[CellGroupData[{

Cell["Load the paclet", "MathCaption",
 CellChangeTimes->{{3.8995618665199623`*^9, 3.899561869231814*^9}},
 CellID->1505550096,ExpressionUUID->"5c81abf8-7534-4900-a0b9-0f608e44ffa7"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AntonAntonov`EpidemiologicalModeling`\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.899561870575471*^9, 3.899561878985882*^9}},
 CellLabel->"In[15]:=",
 CellID->2060244881,ExpressionUUID->"f00186da-1510-488b-b5ad-2f153a2a1665"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SEI2HR-Econ extends SEI2HR", "Section",
 CellChangeTimes->{{3.793231378597383*^9, 3.7932314024183617`*^9}, {
  3.793313893383391*^9, 3.793313894666028*^9}, {3.793463858762034*^9, 
  3.793463887359378*^9}, {3.7950247617148542`*^9, 3.795024767176201*^9}, {
  3.795256795986302*^9, 3.795256799699214*^9}},
 CellID->655411356,ExpressionUUID->"b744aefc-9d5d-4b8a-9b32-24eda6b611ee"],

Cell["\<\
The model SEI2HR-Econ is an extension of the model SEI2HR, [AA4].\
\>", "Text",
 CellChangeTimes->{{3.793464008378028*^9, 3.793464023947825*^9}, {
  3.79346576491387*^9, 3.793465775095315*^9}, {3.79346590801619*^9, 
  3.793465922247696*^9}, {3.795009177972756*^9, 3.7950092499839563`*^9}, {
  3.795168959426126*^9, 3.795168972880556*^9}, {3.795256803501498*^9, 
  3.795256810611732*^9}},
 CellID->1055034829,ExpressionUUID->"b0632cfb-d602-4c34-b437-3b537e7a29b4"],

Cell[CellGroupData[{

Cell["Here is SEI2HR:", "Text",
 CellChangeTimes->{{3.79500925187525*^9, 3.795009258444957*^9}, 
   3.795256817361949*^9},
 CellID->197897724,ExpressionUUID->"6b9734d7-e95a-4713-996b-61d130b11414"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"reprTP", "=", "\"\<AlgebraicEquation\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsModelOpts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Tooltips\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"TooltipStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Background", "\[Rule]", "Yellow"}], ",", 
        RowBox[{"CellFrameColor", "\[Rule]", "Gray"}], ",", 
        RowBox[{"FontSize", "\[Rule]", "20"}]}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelReference", "=", 
   RowBox[{"SEI2HRModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{"\"\<InitialConditions\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<RateRules\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<TotalPopulationRepresentation\>\"", "\[Rule]", "reprTP"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ModelGridTableForm", "[", 
  RowBox[{"modelReference", ",", "lsModelOpts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.793467911948387*^9, 3.793467915610031*^9}, {
   3.795009350159837*^9, 3.795009431847424*^9}, {3.7950095015662823`*^9, 
   3.795009514576685*^9}, {3.795009673959231*^9, 3.795009684738604*^9}, 
   3.795256833834491*^9, {3.795256868688776*^9, 3.795256872034582*^9}, {
   3.79525986866504*^9, 3.795259876554387*^9}},
 CellLabel->"In[16]:=",
 CellID->1762361712,ExpressionUUID->"c9e4ad9e-8e9c-4f6f-b6e2-8d1c8f4dd425"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"TP", "[", "t", "]"}], "\<\"Total Population\"\>"},
       {"2", 
        RowBox[{"SP", "[", "t", "]"}], "\<\"Susceptible Population\"\>"},
       {"3", 
        RowBox[{"EP", "[", "t", "]"}], "\<\"Exposed Population\"\>"},
       {"4", 
        RowBox[{
        "INSP", "[", "t", 
         "]"}], "\<\"Infected Normally Symptomatic Population\"\>"},
       {"5", 
        RowBox[{
        "ISSP", "[", "t", 
         "]"}], "\<\"Infected Severely Symptomatic Population\"\>"},
       {"6", 
        RowBox[{"RP", "[", "t", "]"}], "\<\"Recovered Population\"\>"},
       {"7", 
        RowBox[{
        "MLP", "[", "t", "]"}], "\<\"Money of Lost Productivity\"\>"},
       {"8", 
        RowBox[{"HP", "[", "t", "]"}], "\<\"Hospitalized Population\"\>"},
       {"9", 
        RowBox[{
        "DIP", "[", "t", "]"}], "\<\"Deceased Infected Population\"\>"},
       {"10", 
        RowBox[{"HB", "[", "t", "]"}], "\<\"Hospital Beds\"\>"},
       {"11", 
        RowBox[{
        "MHS", "[", "t", "]"}], "\<\"Money for Hospital Services\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"\[Mu]", "[", "TP", "]"}], "\<\"Population death rate\"\>"},
       {"2", 
        RowBox[{
        "\[Mu]", "[", "INSP", 
         "]"}], "\<\"Infected Normally Symptomatic Population death rate\"\>"},
       {"3", 
        RowBox[{
        "\[Mu]", "[", "ISSP", 
         "]"}], "\<\"Infected Severely Symptomatic Population death rate\"\>"},
       {"4", 
        RowBox[{
        "sspf", "[", "SP", 
         "]"}], "\<\"Severely Symptomatic Population Fraction\"\>"},
       {"5", 
        RowBox[{
        "\[Beta]", "[", "INSP", 
         "]"}], "\<\"Contact rate for the infected normally symptomatic \
population\"\>"},
       {"6", 
        RowBox[{
        "\[Beta]", "[", "ISSP", 
         "]"}], "\<\"Contact rate for the infected severely symptomatic \
population\"\>"},
       {"7", "aip", "\<\"Average infectious period\"\>"},
       {"8", "aincp", "\<\"Average incubation period\"\>"},
       {"9", 
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Lost productivity cost rate (per person per day)\"\>"},
       {"10", 
        RowBox[{
        "\[Mu]", "[", "HP", 
         "]"}], "\<\"Hospitalized Population death rate\"\>"},
       {"11", 
        RowBox[{
        "\[Beta]", "[", "HP", 
         "]"}], "\<\"Contact rate for the hospitalized population\"\>"},
       {"12", 
        RowBox[{
        "nhbr", "[", "TP", "]"}], "\<\"Number of hospital beds rate\"\>"},
       {"13", 
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospital services cost rate (per bed per day)\"\>"},
       {"14", 
        RowBox[{"nhbcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Number of hospital beds change rate (per day)\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"TP", "[", "t", "]"}],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ],
           "\"Total Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"RP", "[", "t", "]"}],
                "\"Recovered Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Recovered Population", "Tooltip"]& ],
              "\"Recovered Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
          "]"}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"SP", "[", "t", "]"}],
                 "\"Susceptible Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Susceptible Population", "Tooltip"]& ],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Beta]", "[", "HP", "]"}],
                 "\"Contact rate for the hospitalized population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Contact rate for the hospitalized population", 
                 "Tooltip"]& ],
               "\"Contact rate for the hospitalized population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Contact rate for the hospitalized population", 
               "Tooltip"]& ]}], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"TP", "[", "t", "]"}],
                "\"Total Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Total Population", "Tooltip"]& ],
              "\"Total Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                
                "\"Contact rate for the infected normally symptomatic \
population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the infected normally symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected normally symptomatic \
population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the infected normally symptomatic population",
               "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                
                "\"Contact rate for the infected severely symptomatic \
population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the infected severely symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected severely symptomatic \
population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the infected severely symptomatic population",
               "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"SP", "[", "t", "]"}],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ],
             "\"Susceptible Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "HP", "]"}],
                "\"Contact rate for the hospitalized population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Contact rate for the hospitalized population", 
                "Tooltip"]& ],
              "\"Contact rate for the hospitalized population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Contact rate for the hospitalized population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                
                "\"Contact rate for the infected normally symptomatic \
population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the infected normally symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected normally symptomatic \
population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the infected normally symptomatic population",
               "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                
                "\"Contact rate for the infected severely symptomatic \
population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the infected severely symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected severely symptomatic \
population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the infected severely symptomatic population",
               "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"EP", "[", "t", "]"}],
               "\"Exposed Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Exposed Population", "Tooltip"]& ],
             "\"Exposed Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "TP", "]"}],
                 "\"Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Population death rate", "Tooltip"]& ],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ]}], 
            ")"}]}]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["INSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"sspf", "[", "SP", "]"}],
                  "\"Severely Symptomatic Population Fraction\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Severely Symptomatic Population Fraction", 
                  "Tooltip"]& ],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ]}], ")"}]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["ISSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"sspf", "[", "SP", "]"}],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ],
              "\"Severely Symptomatic Population Fraction\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Severely Symptomatic Population Fraction", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"6", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
                    ",", 
                    FractionBox[
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"EP", "[", "t", "]"}],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"sspf", "[", "SP", "]"}],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ]}], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox["aincp",
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Average incubation period", "Tooltip"]& ],
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Average incubation period", 
                    "Tooltip"]& ]]}], "]"}], 
                  RowBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
                   "<", 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], ")"}], "-", 
          FractionBox[
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"7", 
        RowBox[{
         RowBox[{
          SuperscriptBox["RP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"RP", "[", "t", "]"}],
               "\"Recovered Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ],
             "\"Recovered Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"8", 
        RowBox[{
         RowBox[{
          SuperscriptBox["DIP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"9", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HB", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HB", "[", "t", "]"}],
              "\"Hospital Beds\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospital Beds", "Tooltip"]& ],
            "\"Hospital Beds\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Number of hospital beds change rate (per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Number of hospital beds change rate (per day)", 
              "Tooltip"]& ],
            "\"Number of hospital beds change rate (per day)\"",
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Number of hospital beds change rate (per day)", 
            "Tooltip"]& ]}]}]},
       {"10", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MHS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HP", "[", "t", "]"}],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ],
            "\"Hospitalized Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"hscr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Hospital services cost rate (per bed per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Hospital services cost rate (per bed per day)", 
              "Tooltip"]& ],
            "\"Hospital services cost rate (per bed per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Hospital services cost rate (per bed per day)", 
            "Tooltip"]& ]}]}]},
       {"11", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MLP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"lpcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Lost productivity cost rate (per person per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Lost productivity cost rate (per person per day)",
               "Tooltip"]& ],
            "\"Lost productivity cost rate (per person per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Lost productivity cost rate (per person per day)", 
            "Tooltip"]& ], " ", 
          RowBox[{"(", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "HP", "]"}],
                 "\"Hospitalized Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Hospitalized Population death rate", 
                 "Tooltip"]& ],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"INSP", "[", "t", "]"}],
                 "\"Infected Normally Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Normally Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "INSP", "]"}],
                 "\"Infected Normally Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Normally Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}], ")"}], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "ISSP", "]"}],
                 "\"Infected Severely Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Severely Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ]}]}], ")"}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ], 
        FractionBox["1", "45625"]},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.035`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.01`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "ISSP", "]"}],
          "\"Contact rate for the infected severely symptomatic population\"",
          
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Contact rate for the infected severely symptomatic population", 
          "Tooltip"]& ], "0.15`"},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "INSP", "]"}],
          "\"Contact rate for the infected normally symptomatic population\"",
          
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Contact rate for the infected normally symptomatic population", 
          "Tooltip"]& ], "0.15`"},
       {"6", 
        TagBox[
         TooltipBox["aip",
          "\"Average infectious period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average infectious period", "Tooltip"]& ], "26"},
       {"7", 
        TagBox[
         TooltipBox["aincp",
          "\"Average incubation period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average incubation period", "Tooltip"]& ], "6"},
       {"8", 
        TagBox[
         TooltipBox[
          RowBox[{"sspf", "[", "SP", "]"}],
          "\"Severely Symptomatic Population Fraction\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Severely Symptomatic Population Fraction", 
          "Tooltip"]& ], "0.2`"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"lpcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Lost productivity cost rate (per person per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Lost productivity cost rate (per person per day)", 
          "Tooltip"]& ], "1"},
       {"10", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ], 
        RowBox[{"0.25`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Mu]", "[", "ISSP", "]"}],
           "\"Infected Severely Symptomatic Population death rate\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Infected Severely Symptomatic Population death rate",
            "Tooltip"]& ]}]},
       {"11", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ], 
        RowBox[{"0.1`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Beta]", "[", "ISSP", "]"}],
           "\"Contact rate for the infected severely symptomatic population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Contact rate for the infected severely symptomatic population", 
           "Tooltip"]& ]}]},
       {"12", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbr", "[", "TP", "]"}],
          "\"Number of hospital beds rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Number of hospital beds rate", "Tooltip"]& ], 
        "0.0029`"},
       {"13", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Number of hospital beds change rate (per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Number of hospital beds change rate (per day)", 
          "Tooltip"]& ], "0"},
       {"14", 
        TagBox[
         TooltipBox[
          RowBox[{"hscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Hospital services cost rate (per bed per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital services cost rate (per bed per day)", 
          "Tooltip"]& ], "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
       {"2", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"4", 
        RowBox[{
         RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"5", 
        RowBox[{
         RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"6", 
        RowBox[{
         RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"7", 
        RowBox[{
         RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]},
       {"8", 
        RowBox[{
         RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"9", 
        RowBox[{
         RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"10", 
        RowBox[{
         RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbr", "[", "TP", "]"}],
              "\"Number of hospital beds rate\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Number of hospital beds rate", "Tooltip"]& ],
            "\"Number of hospital beds rate\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Number of hospital beds rate", "Tooltip"]& ], " ", 
          RowBox[{"TP", "[", "0", "]"}]}]}]},
       {"11", 
        RowBox[{
         RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.899561950081855*^9, 3.899561960025115*^9}},
 CellLabel->"Out[19]=",
 CellID->2131290380,ExpressionUUID->"2d2fc2e5-a1d3-4d57-ad3e-26b13ece3b86"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is SEI2HR-Econ:", "Text",
 CellChangeTimes->{{3.795009275737638*^9, 3.795009284783505*^9}, {
  3.795256837556376*^9, 3.795256838321369*^9}},
 CellID->1918834160,ExpressionUUID->"929c88db-390c-45b7-abe6-1ab66e8984aa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelSEI2HREcon", "=", 
   RowBox[{"SEI2HREconModel", "[", 
    RowBox[{"t", ",", 
     RowBox[{"\"\<InitialConditions\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<RateRules\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"\"\<TotalPopulationRepresentation\>\"", "\[Rule]", "reprTP"}]}],
     "]"}]}], ";"}], "\n", 
 RowBox[{"ModelGridTableForm", "[", 
  RowBox[{"modelSEI2HREcon", ",", "lsModelOpts"}], "]"}]}], "Input",
 CellChangeTimes->{{3.793314282935193*^9, 3.793314319296172*^9}, {
   3.7934449390958233`*^9, 3.79344493909718*^9}, {3.793463636550662*^9, 
   3.7934636565972357`*^9}, {3.7934674315834093`*^9, 3.793467440716679*^9}, {
   3.7950093912892313`*^9, 3.795009397417891*^9}, 3.795009433917156*^9, {
   3.795009677582673*^9, 3.795009678321662*^9}, {3.795256841022133*^9, 
   3.795256852411681*^9}},
 CellLabel->"In[20]:=",
 CellID->1083800121,ExpressionUUID->"efd4e37c-9c93-4864-9095-a57c8a135b1a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"TP", "[", "t", "]"}], "\<\"Total Population\"\>"},
       {"2", 
        RowBox[{"SP", "[", "t", "]"}], "\<\"Susceptible Population\"\>"},
       {"3", 
        RowBox[{"EP", "[", "t", "]"}], "\<\"Exposed Population\"\>"},
       {"4", 
        RowBox[{
        "INSP", "[", "t", 
         "]"}], "\<\"Infected Normally Symptomatic Population\"\>"},
       {"5", 
        RowBox[{
        "ISSP", "[", "t", 
         "]"}], "\<\"Infected Severely Symptomatic Population\"\>"},
       {"6", 
        RowBox[{"RP", "[", "t", "]"}], "\<\"Recovered Population\"\>"},
       {"7", 
        RowBox[{
        "MLP", "[", "t", "]"}], "\<\"Money of Lost Productivity\"\>"},
       {"8", 
        RowBox[{"HP", "[", "t", "]"}], "\<\"Hospitalized Population\"\>"},
       {"9", 
        RowBox[{
        "DIP", "[", "t", "]"}], "\<\"Deceased Infected Population\"\>"},
       {"10", 
        RowBox[{"MS", "[", "t", "]"}], "\<\"Medical Supplies\"\>"},
       {"11", 
        RowBox[{"MSD", "[", "t", "]"}], "\<\"Medical Supplies Demand\"\>"},
       {"12", 
        RowBox[{"HB", "[", "t", "]"}], "\<\"Hospital Beds\"\>"},
       {"13", 
        RowBox[{
        "MMSP", "[", "t", 
         "]"}], "\<\"Money for Medical Supplies Production\"\>"},
       {"14", 
        RowBox[{"MHS", "[", "t", "]"}], "\<\"Money for Hospital Services\"\>"},
       {"15", 
        RowBox[{"HMS", "[", "t", "]"}], "\<\"Hospital Medical Supplies\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"\[Mu]", "[", "TP", "]"}], "\<\"Population death rate\"\>"},
       {"2", 
        RowBox[{
        "\[Mu]", "[", "INSP", 
         "]"}], "\<\"Infected Normally Symptomatic Population death rate\"\>"},
       {"3", 
        RowBox[{
        "\[Mu]", "[", "ISSP", 
         "]"}], "\<\"Infected Severely Symptomatic Population death rate\"\>"},
       {"4", 
        RowBox[{
        "sspf", "[", "SP", 
         "]"}], "\<\"Severely Symptomatic Population Fraction\"\>"},
       {"5", 
        RowBox[{
        "\[Beta]", "[", "INSP", 
         "]"}], "\<\"Contact rate for the infected normally symptomatic \
population\"\>"},
       {"6", 
        RowBox[{
        "\[Beta]", "[", "ISSP", 
         "]"}], "\<\"Contact rate for the infected severely symptomatic \
population\"\>"},
       {"7", "aip", "\<\"Average infectious period\"\>"},
       {"8", "aincp", "\<\"Average incubation period\"\>"},
       {"9", 
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Lost productivity cost rate (per person per day)\"\>"},
       {"10", 
        RowBox[{
        "\[Mu]", "[", "HP", 
         "]"}], "\<\"Hospitalized Population death rate\"\>"},
       {"11", 
        RowBox[{
        "\[Beta]", "[", "HP", 
         "]"}], "\<\"Contact rate for the hospitalized population\"\>"},
       {"12", 
        RowBox[{
        "nhbr", "[", "TP", 
         "]"}], "\<\"Number of hospital beds rate (number of beds per person)\
\"\>"},
       {"13", 
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospital services cost rate (per bed per day)\"\>"},
       {"14", 
        RowBox[{"nhbcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Number of hospital beds change rate (per day)\"\>"},
       {"15", 
        RowBox[{"hpmscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospitalized population medical supplies consumption \
rate (per day)\"\>"},
       {"16", 
        RowBox[{"upmscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Un-hospitalized population medical supplies consumption \
rate (units per day)\"\>"},
       {"17", 
        RowBox[{
        "mspr", "[", "HB", 
         "]"}], "\<\"Medical supplies production rate (units per pay)\"\>"},
       {"18", 
        RowBox[{
        "mspcr", "[", "HB", 
         "]"}], "\<\"Medical supplies production cost rate (per unit)\"\>"},
       {"19", 
        RowBox[{
        "msdr", "[", "HB", 
         "]"}], "\<\"Medical supplies delivery rate (delay factor)\"\>"},
       {"20", 
        RowBox[{
        "msdp", "[", "HB", 
         "]"}], "\<\"Medical supplies delivery period (number of days)\"\>"},
       {"21", 
        RowBox[{
        "mscr", "[", "TP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"22", 
        RowBox[{
        "mscr", "[", "INSP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"23", 
        RowBox[{
        "mscr", "[", "ISSP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"24", 
        RowBox[{
        "mscr", "[", "HP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"25", 
        RowBox[{
        "\[Kappa]", "[", "HMS", 
         "]"}], "\<\"Capacity to store Hospital Medical Supplies\"\>"},
       {"26", 
        RowBox[{
        "\[Kappa]", "[", "MS", 
         "]"}], "\<\"Capacity to store produced Medical Supplies\"\>"},
       {"27", 
        RowBox[{
        "\[Kappa]", "[", "MSD", 
         "]"}], "\<\"Capacity to transport produced Medical Supplies\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"TP", "[", "t", "]"}],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ],
           "\"Total Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"RP", "[", "t", "]"}],
                "\"Recovered Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Recovered Population", "Tooltip"]& ],
              "\"Recovered Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
          "]"}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"SP", "[", "t", "]"}],
                 "\"Susceptible Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Susceptible Population", "Tooltip"]& ],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Beta]", "[", "HP", "]"}],
                 "\"Contact rate for the hospitalized population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Contact rate for the hospitalized population", 
                 "Tooltip"]& ],
               "\"Contact rate for the hospitalized population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Contact rate for the hospitalized population", 
               "Tooltip"]& ]}], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"TP", "[", "t", "]"}],
                "\"Total Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Total Population", "Tooltip"]& ],
              "\"Total Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                
                "\"Contact rate for the infected normally symptomatic \
population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the infected normally symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected normally symptomatic \
population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the infected normally symptomatic population",
               "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                
                "\"Contact rate for the infected severely symptomatic \
population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the infected severely symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected severely symptomatic \
population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the infected severely symptomatic population",
               "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"SP", "[", "t", "]"}],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ],
             "\"Susceptible Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "HP", "]"}],
                "\"Contact rate for the hospitalized population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Contact rate for the hospitalized population", 
                "Tooltip"]& ],
              "\"Contact rate for the hospitalized population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Contact rate for the hospitalized population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "INSP", "]"}],
                
                "\"Contact rate for the infected normally symptomatic \
population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the infected normally symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected normally symptomatic \
population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the infected normally symptomatic population",
               "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}]}], "]"}], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"\[Beta]", "[", "ISSP", "]"}],
                
                "\"Contact rate for the infected severely symptomatic \
population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Contact rate for the infected severely symptomatic \
population", "Tooltip"]& ],
              
              "\"Contact rate for the infected severely symptomatic \
population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Contact rate for the infected severely symptomatic population",
               "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"TP", "[", "t", "]"}],
               "\"Total Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Total Population", "Tooltip"]& ],
             "\"Total Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"EP", "[", "t", "]"}],
               "\"Exposed Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Exposed Population", "Tooltip"]& ],
             "\"Exposed Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "TP", "]"}],
                 "\"Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Population death rate", "Tooltip"]& ],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ]}], 
            ")"}]}]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["INSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"sspf", "[", "SP", "]"}],
                  "\"Severely Symptomatic Population Fraction\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Severely Symptomatic Population Fraction", 
                  "Tooltip"]& ],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ]}], ")"}]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["ISSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["aip",
                "\"Average infectious period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average infectious period", "Tooltip"]& ],
              "\"Average infectious period\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"EP", "[", "t", "]"}],
                "\"Exposed Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Exposed Population", "Tooltip"]& ],
              "\"Exposed Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"sspf", "[", "SP", "]"}],
                "\"Severely Symptomatic Population Fraction\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Severely Symptomatic Population Fraction", 
                "Tooltip"]& ],
              "\"Severely Symptomatic Population Fraction\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Severely Symptomatic Population Fraction", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aincp",
               "\"Average incubation period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average incubation period", "Tooltip"]& ],
             "\"Average incubation period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"6", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"(", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
                    ",", 
                    FractionBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HMS", "[", "t", "]"}],
                    "\"Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                    "\"Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"mscr", "[", "ISSP", "]"}],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]], ",", 
                    FractionBox[
                    RowBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"EP", "[", "t", "]"}],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"sspf", "[", "SP", "]"}],
                    "\"Severely Symptomatic Population Fraction\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ],
                    "\"Severely Symptomatic Population Fraction\"",
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Severely Symptomatic Population Fraction", 
                    "Tooltip"]& ]}], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox["aincp",
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Average incubation period", "Tooltip"]& ],
                    "\"Average incubation period\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Average incubation period", 
                    "Tooltip"]& ]]}], "]"}], 
                  RowBox[{
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
                   "<", 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], ")"}], "-", 
          FractionBox[
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"7", 
        RowBox[{
         RowBox[{
          SuperscriptBox["RP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["aip",
               "\"Average infectious period\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Average infectious period", "Tooltip"]& ],
             "\"Average infectious period\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"RP", "[", "t", "]"}],
               "\"Recovered Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ],
             "\"Recovered Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "TP", "]"}],
               "\"Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Population death rate", "Tooltip"]& ],
             "\"Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Population death rate", "Tooltip"]& ]}]}]}]},
       {"8", 
        RowBox[{
         RowBox[{
          SuperscriptBox["DIP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "HP", "]"}],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ],
             "\"Hospitalized Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Hospitalized Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "INSP", "]"}],
               "\"Infected Normally Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Normally Symptomatic Population death rate", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
             
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"ISSP", "[", "t", "]"}],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"\[Mu]", "[", "ISSP", "]"}],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population death rate\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Infected Severely Symptomatic Population death rate", 
             "Tooltip"]& ]}]}]}]},
       {"9", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HB", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HB", "[", "t", "]"}],
              "\"Hospital Beds\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospital Beds", "Tooltip"]& ],
            "\"Hospital Beds\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Number of hospital beds change rate (per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Number of hospital beds change rate (per day)", 
              "Tooltip"]& ],
            "\"Number of hospital beds change rate (per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Number of hospital beds change rate (per day)", 
            "Tooltip"]& ]}]}]},
       {"10", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HMS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HMS", "[", "t", "]"}],
                 "\"Hospital Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
               "\"Hospital Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "ISSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}]}], "]"}]}], "+", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HB", "[", "t", "]"}],
                  "\"Hospital Beds\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Beds", "Tooltip"]& ],
                "\"Hospital Beds\"",
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "HP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
             RowBox[{
              RowBox[{"-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HMS", "[", "t", "]"}],
                   "\"Hospital Medical Supplies\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                 "\"Hospital Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], 
              "+", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                  "\"Capacity to store Hospital Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Capacity to store Hospital Medical Supplies", 
                  "Tooltip"]& ],
                "\"Capacity to store Hospital Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Capacity to store Hospital Medical Supplies", 
                "Tooltip"]& ]}], ",", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                 "\"Capacity to transport produced Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Capacity to transport produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to transport produced Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Capacity to transport produced Medical Supplies",
                "Tooltip"]& ]}], "]"}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"msdp", "[", "HB", "]"}],
               "\"Medical supplies delivery period (number of days)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies delivery period (number of days)", 
               "Tooltip"]& ],
             "\"Medical supplies delivery period (number of days)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Medical supplies delivery period (number of days)",
              "Tooltip"]& ]]}]}]},
       {"11", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"MS", "[", "t", "]"}],
                  "\"Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Medical Supplies", "Tooltip"]& ],
                "\"Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Medical Supplies", "Tooltip"]& ], "-", 
              FractionBox[
               RowBox[{"Min", "[", 
                RowBox[{
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"MS", "[", "t", "]"}],
                    "\"Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Medical Supplies", "Tooltip"]& ],
                   "\"Medical Supplies\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
                 RowBox[{
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HB", "[", "t", "]"}],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Beds", "Tooltip"]& ],
                    "\"Hospital Beds\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"mscr", "[", "HP", "]"}],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   
                   Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
                 RowBox[{
                  RowBox[{"-", 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HMS", "[", "t", "]"}],
                    "\"Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                    "\"Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Hospital Medical Supplies", 
                    "Tooltip"]& ]}], "+", 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                    "\"Capacity to store Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Capacity to store Hospital Medical Supplies", 
                    "Tooltip"]& ],
                    "\"Capacity to store Hospital Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   
                   Annotation[#, 
                    "Capacity to store Hospital Medical Supplies", 
                    "Tooltip"]& ]}], ",", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                    "\"Capacity to transport produced Medical Supplies\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, 
                    "Capacity to transport produced Medical Supplies", 
                    "Tooltip"]& ],
                   "\"Capacity to transport produced Medical Supplies\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, 
                   "Capacity to transport produced Medical Supplies", 
                   "Tooltip"]& ]}], "]"}], 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"msdp", "[", "HB", "]"}],
                   "\"Medical supplies delivery period (number of days)\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, 
                   "Medical supplies delivery period (number of days)", 
                   "Tooltip"]& ],
                 "\"Medical supplies delivery period (number of days)\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Medical supplies delivery period (number of days)", 
                 "Tooltip"]& ]]}], ",", 
             RowBox[{
              RowBox[{
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"INSP", "[", "t", "]"}],
                   "\"Infected Normally Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Normally Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Normally Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Normally Symptomatic Population", 
                 "Tooltip"]& ], " ", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"mscr", "[", "INSP", "]"}],
                   
                   "\"Medical supplies consumption rate (units per day per \
person)\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, 
                   "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                 
                 "\"Medical supplies consumption rate (units per day per \
person)\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
                 "+", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"ISSP", "[", "t", "]"}],
                    "\"Infected Severely Symptomatic Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    
                    Annotation[#, "Infected Severely Symptomatic Population", 
                    "Tooltip"]& ],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ]}], ")"}], " ", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"mscr", "[", "ISSP", "]"}],
                   
                   "\"Medical supplies consumption rate (units per day per \
person)\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, 
                   "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                 
                 "\"Medical supplies consumption rate (units per day per \
person)\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], "+", 
              RowBox[{
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"mscr", "[", "TP", "]"}],
                   
                   "\"Medical supplies consumption rate (units per day per \
person)\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, 
                   "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                 
                 "\"Medical supplies consumption rate (units per day per \
person)\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ], " ", 
               RowBox[{"(", 
                RowBox[{
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"EP", "[", "t", "]"}],
                    "\"Exposed Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Exposed Population", "Tooltip"]& ],
                   "\"Exposed Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"RP", "[", "t", "]"}],
                    "\"Recovered Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Recovered Population", "Tooltip"]& ],
                   "\"Recovered Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"SP", "[", "t", "]"}],
                    "\"Susceptible Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                    Annotation[#, "Susceptible Population", "Tooltip"]& ],
                   "\"Susceptible Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Susceptible Population", "Tooltip"]& ]}], 
                ")"}]}]}]}], "]"}]}], "+", 
          RowBox[{"Min", "[", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"mspr", "[", "HB", "]"}],
                "\"Medical supplies production rate (units per pay)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies production rate (units per pay)", 
                "Tooltip"]& ],
              "\"Medical supplies production rate (units per pay)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Medical supplies production rate (units per pay)",
               "Tooltip"]& ], ",", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"MS", "[", "t", "]"}],
                  "\"Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Medical Supplies", "Tooltip"]& ],
                "\"Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Medical Supplies", "Tooltip"]& ]}], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MS", "]"}],
                 "\"Capacity to store produced Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Capacity to store produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to store produced Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Capacity to store produced Medical Supplies", 
               "Tooltip"]& ]}]}], "]"}], "-", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HB", "[", "t", "]"}],
                  "\"Hospital Beds\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Beds", "Tooltip"]& ],
                "\"Hospital Beds\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "HP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
             RowBox[{
              RowBox[{"-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HMS", "[", "t", "]"}],
                   "\"Hospital Medical Supplies\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                 "\"Hospital Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], 
              "+", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                  "\"Capacity to store Hospital Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, "Capacity to store Hospital Medical Supplies", 
                  "Tooltip"]& ],
                "\"Capacity to store Hospital Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Capacity to store Hospital Medical Supplies", 
                "Tooltip"]& ]}], ",", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                 "\"Capacity to transport produced Medical Supplies\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Capacity to transport produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to transport produced Medical Supplies\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Capacity to transport produced Medical Supplies",
                "Tooltip"]& ]}], "]"}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"msdp", "[", "HB", "]"}],
               "\"Medical supplies delivery period (number of days)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies delivery period (number of days)", 
               "Tooltip"]& ],
             "\"Medical supplies delivery period (number of days)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Medical supplies delivery period (number of days)",
              "Tooltip"]& ]]}]}]},
       {"12", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MSD", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"HP", "[", "t", "]"}],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "HP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"INSP", "[", "t", "]"}],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Normally Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Normally Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "INSP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"ISSP", "[", "t", "]"}],
               "\"Infected Severely Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Severely Symptomatic Population", 
               "Tooltip"]& ],
             "\"Infected Severely Symptomatic Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Infected Severely Symptomatic Population", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "ISSP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "TP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ], " ", 
           RowBox[{"(", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"EP", "[", "t", "]"}],
                 "\"Exposed Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Exposed Population", "Tooltip"]& ],
               "\"Exposed Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"RP", "[", "t", "]"}],
                 "\"Recovered Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Recovered Population", "Tooltip"]& ],
               "\"Recovered Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"SP", "[", "t", "]"}],
                 "\"Susceptible Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Susceptible Population", "Tooltip"]& ],
               "\"Susceptible Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Susceptible Population", "Tooltip"]& ]}], 
            ")"}]}]}]}]},
       {"13", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MHS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"HP", "[", "t", "]"}],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ],
            "\"Hospitalized Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"hscr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Hospital services cost rate (per bed per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Hospital services cost rate (per bed per day)", 
              "Tooltip"]& ],
            "\"Hospital services cost rate (per bed per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Hospital services cost rate (per bed per day)", 
            "Tooltip"]& ]}]}]},
       {"14", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MMSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"MSD", "[", "t", "]"}],
              "\"Medical Supplies Demand\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Medical Supplies Demand", "Tooltip"]& ],
            "\"Medical Supplies Demand\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Medical Supplies Demand", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"mspcr", "[", "HB", "]"}],
              "\"Medical supplies production cost rate (per unit)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Medical supplies production cost rate (per unit)",
               "Tooltip"]& ],
            "\"Medical supplies production cost rate (per unit)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Medical supplies production cost rate (per unit)", 
            "Tooltip"]& ]}]}]},
       {"15", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MLP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"lpcr", "[", 
               RowBox[{"ISSP", ",", "INSP"}], "]"}],
              "\"Lost productivity cost rate (per person per day)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Lost productivity cost rate (per person per day)",
               "Tooltip"]& ],
            "\"Lost productivity cost rate (per person per day)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Lost productivity cost rate (per person per day)", 
            "Tooltip"]& ], " ", 
          RowBox[{"(", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"INSP", "[", "t", "]"}],
                "\"Infected Normally Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Normally Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Normally Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Normally Symptomatic Population", 
              "Tooltip"]& ], "+", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"ISSP", "[", "t", "]"}],
                "\"Infected Severely Symptomatic Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, "Infected Severely Symptomatic Population", 
                "Tooltip"]& ],
              "\"Infected Severely Symptomatic Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, "Infected Severely Symptomatic Population", 
              "Tooltip"]& ], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HP", "[", "t", "]"}],
                 "\"Hospitalized Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Hospitalized Population", "Tooltip"]& ],
               "\"Hospitalized Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "HP", "]"}],
                 "\"Hospitalized Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Hospitalized Population death rate", 
                 "Tooltip"]& ],
               "\"Hospitalized Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Hospitalized Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"INSP", "[", "t", "]"}],
                 "\"Infected Normally Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Normally Symptomatic Population", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, "Infected Normally Symptomatic Population", 
               "Tooltip"]& ], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "INSP", "]"}],
                 "\"Infected Normally Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Normally Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Normally Symptomatic Population death rate\"",
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Normally Symptomatic Population death rate", 
               "Tooltip"]& ]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                TagBox[
                 TooltipBox[
                  TagBox[
                   TooltipBox[
                    RowBox[{"HP", "[", "t", "]"}],
                    "\"Hospitalized Population\"",
                    
                    TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                   Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], 
               "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"ISSP", "[", "t", "]"}],
                   "\"Infected Severely Symptomatic Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Infected Severely Symptomatic Population", 
                   "Tooltip"]& ],
                 "\"Infected Severely Symptomatic Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Infected Severely Symptomatic Population", 
                 "Tooltip"]& ]}], ")"}], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Mu]", "[", "ISSP", "]"}],
                 "\"Infected Severely Symptomatic Population death rate\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, 
                 "Infected Severely Symptomatic Population death rate", 
                 "Tooltip"]& ],
               "\"Infected Severely Symptomatic Population death rate\"",
               
               TooltipStyle->{
                Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                 GrayLevel[0.5], FontSize -> 20}],
              
              Annotation[#, 
               "Infected Severely Symptomatic Population death rate", 
               "Tooltip"]& ]}]}], ")"}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ], 
        FractionBox["1", "45625"]},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.035`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ], 
        FractionBox["0.01`", 
         TagBox[
          TooltipBox["aip",
           "\"Average infectious period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average infectious period", "Tooltip"]& ]]},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "ISSP", "]"}],
          "\"Contact rate for the infected severely symptomatic population\"",
          
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Contact rate for the infected severely symptomatic population", 
          "Tooltip"]& ], "0.15`"},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "INSP", "]"}],
          "\"Contact rate for the infected normally symptomatic population\"",
          
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Contact rate for the infected normally symptomatic population", 
          "Tooltip"]& ], "0.15`"},
       {"6", 
        TagBox[
         TooltipBox["aip",
          "\"Average infectious period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average infectious period", "Tooltip"]& ], "26"},
       {"7", 
        TagBox[
         TooltipBox["aincp",
          "\"Average incubation period\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Average incubation period", "Tooltip"]& ], "6"},
       {"8", 
        TagBox[
         TooltipBox[
          RowBox[{"sspf", "[", "SP", "]"}],
          "\"Severely Symptomatic Population Fraction\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Severely Symptomatic Population Fraction", 
          "Tooltip"]& ], "0.2`"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"lpcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Lost productivity cost rate (per person per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Lost productivity cost rate (per person per day)", 
          "Tooltip"]& ], "1"},
       {"10", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ], 
        RowBox[{"0.25`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Mu]", "[", "ISSP", "]"}],
           "\"Infected Severely Symptomatic Population death rate\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Infected Severely Symptomatic Population death rate",
            "Tooltip"]& ]}]},
       {"11", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ], 
        RowBox[{"0.1`", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"\[Beta]", "[", "ISSP", "]"}],
           "\"Contact rate for the infected severely symptomatic population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Contact rate for the infected severely symptomatic population", 
           "Tooltip"]& ]}]},
       {"12", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbr", "[", "TP", "]"}],
          "\"Number of hospital beds rate (number of beds per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Number of hospital beds rate (number of beds per person)", 
          "Tooltip"]& ], "0.0029`"},
       {"13", 
        TagBox[
         TooltipBox[
          RowBox[{"nhbcr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Number of hospital beds change rate (per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Number of hospital beds change rate (per day)", 
          "Tooltip"]& ], "0"},
       {"14", 
        TagBox[
         TooltipBox[
          RowBox[{"hscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          "\"Hospital services cost rate (per bed per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital services cost rate (per bed per day)", 
          "Tooltip"]& ], "1"},
       {"15", 
        TagBox[
         TooltipBox[
          RowBox[{"hpmscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          
          "\"Hospitalized population medical supplies consumption rate (per \
day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Hospitalized population medical supplies consumption rate (per \
day)", "Tooltip"]& ], "4"},
       {"16", 
        TagBox[
         TooltipBox[
          RowBox[{"upmscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          
          "\"Un-hospitalized population medical supplies consumption rate \
(units per day)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Un-hospitalized population medical supplies consumption rate \
(units per day)", "Tooltip"]& ], "2"},
       {"17", 
        TagBox[
         TooltipBox[
          RowBox[{"mspcr", "[", "HB", "]"}],
          "\"Medical supplies production cost rate (per unit)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Medical supplies production cost rate (per unit)", 
          "Tooltip"]& ], "1"},
       {"18", 
        TagBox[
         TooltipBox[
          RowBox[{"msdp", "[", "HB", "]"}],
          "\"Medical supplies delivery period (number of days)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Medical supplies delivery period (number of days)", 
          "Tooltip"]& ], "1.5`"},
       {"19", 
        TagBox[
         TooltipBox[
          RowBox[{"mspr", "[", "HB", "]"}],
          "\"Medical supplies production rate (units per pay)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Medical supplies production rate (units per pay)", 
          "Tooltip"]& ], 
        RowBox[{"100", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"nhbr", "[", "TP", "]"}],
           "\"Number of hospital beds rate (number of beds per person)\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Number of hospital beds rate (number of beds per person)", 
           "Tooltip"]& ], " ", 
         RowBox[{"TP", "[", "0", "]"}]}]},
       {"20", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "TP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "0.02`"},
       {"21", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "INSP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "0.7`"},
       {"22", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "ISSP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "3"},
       {"23", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "HP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "4"},
       {"24", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "HMS", "]"}],
          "\"Capacity to store Hospital Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Capacity to store Hospital Medical Supplies", 
          "Tooltip"]& ], 
        RowBox[{"2", " ", 
         RowBox[{"HB", "[", "0", "]"}], " ", 
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "ISSP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ]}]},
       {"25", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MS", "]"}],
          "\"Capacity to store produced Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Capacity to store produced Medical Supplies", 
          "Tooltip"]& ], 
        RowBox[{"2", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "TP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ], " ", 
         RowBox[{"TP", "[", "0", "]"}]}]},
       {"26", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MSD", "]"}],
          "\"Capacity to transport produced Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Capacity to transport produced Medical Supplies", 
          "Tooltip"]& ], 
        FractionBox[
         RowBox[{"HB", "[", "0", "]"}], "10"]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
       {"2", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"4", 
        RowBox[{
         RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"5", 
        RowBox[{
         RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"6", 
        RowBox[{
         RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"7", 
        RowBox[{
         RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]},
       {"8", 
        RowBox[{
         RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"9", 
        RowBox[{
         RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"10", 
        RowBox[{
         RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"nhbr", "[", "TP", "]"}],
              "\"Number of hospital beds rate (number of beds per person)\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             
             Annotation[#, 
              "Number of hospital beds rate (number of beds per person)", 
              "Tooltip"]& ],
            "\"Number of hospital beds rate (number of beds per person)\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, 
            "Number of hospital beds rate (number of beds per person)", 
            "Tooltip"]& ], " ", 
          RowBox[{"TP", "[", "0", "]"}]}]}]},
       {"11", 
        RowBox[{
         RowBox[{"MSD", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"12", 
        RowBox[{
         RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"13", 
        RowBox[{
         RowBox[{"MMSP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"14", 
        RowBox[{
         RowBox[{"HMS", "[", "0", "]"}], "\[Equal]", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"\[Kappa]", "[", "HMS", "]"}],
             "\"Capacity to store Hospital Medical Supplies\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Capacity to store Hospital Medical Supplies", 
             "Tooltip"]& ],
           "\"Capacity to store Hospital Medical Supplies\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Capacity to store Hospital Medical Supplies", 
           "Tooltip"]& ]}]},
       {"15", 
        RowBox[{
         RowBox[{"MS", "[", "0", "]"}], "\[Equal]", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"\[Kappa]", "[", "MS", "]"}],
             "\"Capacity to store produced Medical Supplies\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            
            Annotation[#, "Capacity to store produced Medical Supplies", 
             "Tooltip"]& ],
           "\"Capacity to store produced Medical Supplies\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Capacity to store produced Medical Supplies", 
           "Tooltip"]& ]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8995619501367817`*^9, 3.899561960064637*^9}},
 CellLabel->"Out[21]=",
 CellID->570184700,ExpressionUUID->"70ba95f5-c69b-4582-8c5b-11142f10f422"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the \[OpenCurlyDoubleQuote]differences\[CloseCurlyDoubleQuote] \
between the two models:", "Text",
 CellChangeTimes->{{3.79500929530131*^9, 3.795009313537221*^9}, {
  3.795168984919174*^9, 3.79516900729457*^9}},
 CellID->472339793,ExpressionUUID->"cd909230-75eb-4536-b4d8-16859b12f0a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ModelGridTableForm", "@", 
  RowBox[{"Merge", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"modelSEI2HREcon", ",", "modelReference"}], "}"}], ",", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AssociationQ", "[", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}], ",", 
       RowBox[{"KeyComplement", "[", "#", "]"}], ",", 
       RowBox[{"Complement", "@@", "#"}]}], "]"}], "&"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.795009620847085*^9, 3.795009652165576*^9}, {
   3.7952568808707743`*^9, 3.795256883997085*^9}, 3.795259886165313*^9},
 CellLabel->"In[22]:=",
 CellID->1515341639,ExpressionUUID->"9c0a127c-bbac-4c18-9c5a-c499a34e9d91"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"MS", "[", "t", "]"}], "\<\"Medical Supplies\"\>"},
       {"2", 
        RowBox[{"MSD", "[", "t", "]"}], "\<\"Medical Supplies Demand\"\>"},
       {"3", 
        RowBox[{
        "MMSP", "[", "t", 
         "]"}], "\<\"Money for Medical Supplies Production\"\>"},
       {"4", 
        RowBox[{"HMS", "[", "t", "]"}], "\<\"Hospital Medical Supplies\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"hpmscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Hospitalized population medical supplies consumption \
rate (per day)\"\>"},
       {"2", 
        RowBox[{"upmscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], 
         "]"}], "\<\"Un-hospitalized population medical supplies consumption \
rate (units per day)\"\>"},
       {"3", 
        RowBox[{
        "mspr", "[", "HB", 
         "]"}], "\<\"Medical supplies production rate (units per pay)\"\>"},
       {"4", 
        RowBox[{
        "mspcr", "[", "HB", 
         "]"}], "\<\"Medical supplies production cost rate (per unit)\"\>"},
       {"5", 
        RowBox[{
        "msdr", "[", "HB", 
         "]"}], "\<\"Medical supplies delivery rate (delay factor)\"\>"},
       {"6", 
        RowBox[{
        "msdp", "[", "HB", 
         "]"}], "\<\"Medical supplies delivery period (number of days)\"\>"},
       {"7", 
        RowBox[{
        "mscr", "[", "TP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"8", 
        RowBox[{
        "mscr", "[", "INSP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"9", 
        RowBox[{
        "mscr", "[", "ISSP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"10", 
        RowBox[{
        "mscr", "[", "HP", 
         "]"}], "\<\"Medical supplies consumption rate (units per day per \
person)\"\>"},
       {"11", 
        RowBox[{
        "\[Kappa]", "[", "HMS", 
         "]"}], "\<\"Capacity to store Hospital Medical Supplies\"\>"},
       {"12", 
        RowBox[{
        "\[Kappa]", "[", "MS", 
         "]"}], "\<\"Capacity to store produced Medical Supplies\"\>"},
       {"13", 
        RowBox[{
        "\[Kappa]", "[", "MSD", 
         "]"}], "\<\"Capacity to transport produced Medical Supplies\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HMS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"HMS", "[", "t", "]"}],
                 "\"Hospital Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
               "\"Hospital Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              RowBox[{"HP", "[", "t", "]"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "ISSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}]}], "]"}]}], "+", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              RowBox[{"HB", "[", "t", "]"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "HP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
             RowBox[{
              RowBox[{"-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HMS", "[", "t", "]"}],
                   "\"Hospital Medical Supplies\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                 "\"Hospital Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], 
              "+", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                  "\"Capacity to store Hospital Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, "Capacity to store Hospital Medical Supplies", 
                  "Tooltip"]& ],
                "\"Capacity to store Hospital Medical Supplies\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Capacity to store Hospital Medical Supplies", 
                "Tooltip"]& ]}], ",", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                 "\"Capacity to transport produced Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Capacity to transport produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to transport produced Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Capacity to transport produced Medical Supplies",
                "Tooltip"]& ]}], "]"}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"msdp", "[", "HB", "]"}],
               "\"Medical supplies delivery period (number of days)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies delivery period (number of days)", 
               "Tooltip"]& ],
             "\"Medical supplies delivery period (number of days)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Medical supplies delivery period (number of days)",
              "Tooltip"]& ]]}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["HP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"HP", "[", "t", "]"}], "aip"]}], "+", 
          RowBox[{"(", 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"HB", "[", "t", "]"}], "-", 
                    RowBox[{"HP", "[", "t", "]"}]}], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"EP", "[", "t", "]"}], " ", 
                    RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"], ",", 
                    FractionBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HMS", "[", "t", "]"}],
                    "\"Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                    "\"Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], 
                    
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"mscr", "[", "ISSP", "]"}],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]]}], "]"}], 
                  RowBox[{
                   RowBox[{"HP", "[", "t", "]"}], "<", 
                   RowBox[{"HB", "[", "t", "]"}]}]},
                 {"0", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], ")"}], "-", 
          RowBox[{
           RowBox[{"HP", "[", "t", "]"}], " ", 
           RowBox[{"\[Mu]", "[", "HP", "]"}]}]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MMSP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"MSD", "[", "t", "]"}],
              "\"Medical Supplies Demand\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Medical Supplies Demand", "Tooltip"]& ],
            "\"Medical Supplies Demand\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Medical Supplies Demand", "Tooltip"]& ], " ", 
          TagBox[
           TooltipBox[
            TagBox[
             TooltipBox[
              RowBox[{"mspcr", "[", "HB", "]"}],
              "\"Medical supplies production cost rate (per unit)\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Medical supplies production cost rate (per unit)",
               "Tooltip"]& ],
            "\"Medical supplies production cost rate (per unit)\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Medical supplies production cost rate (per unit)", 
            "Tooltip"]& ]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MS", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"INSP", "[", "t", "]"}], " ", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"mscr", "[", "INSP", "]"}],
                   
                   "\"Medical supplies consumption rate (units per day per \
person)\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, 
                   "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                 
                 "\"Medical supplies consumption rate (units per day per \
person)\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"HP", "[", "t", "]"}]}], "+", 
                 RowBox[{"ISSP", "[", "t", "]"}]}], ")"}], " ", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"mscr", "[", "ISSP", "]"}],
                   
                   "\"Medical supplies consumption rate (units per day per \
person)\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, 
                   "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                 
                 "\"Medical supplies consumption rate (units per day per \
person)\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"EP", "[", "t", "]"}], "+", 
                 RowBox[{"RP", "[", "t", "]"}], "+", 
                 RowBox[{"SP", "[", "t", "]"}]}], ")"}], " ", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"mscr", "[", "TP", "]"}],
                   
                   "\"Medical supplies consumption rate (units per day per \
person)\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, 
                   "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                 
                 "\"Medical supplies consumption rate (units per day per \
person)\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}]}], ",", 
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"MS", "[", "t", "]"}],
                  "\"Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Medical Supplies", "Tooltip"]& ],
                "\"Medical Supplies\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Medical Supplies", "Tooltip"]& ], "-", 
              FractionBox[
               RowBox[{"Min", "[", 
                RowBox[{
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"MS", "[", "t", "]"}],
                    "\"Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Medical Supplies", "Tooltip"]& ],
                   "\"Medical Supplies\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
                 RowBox[{
                  RowBox[{"HB", "[", "t", "]"}], " ", 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"mscr", "[", "HP", "]"}],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                    
                    "\"Medical supplies consumption rate (units per day per \
person)\"",
                    TooltipStyle->"TextStyling"],
                   
                   Annotation[#, 
                    "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
                 RowBox[{
                  RowBox[{"-", 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"HMS", "[", "t", "]"}],
                    "\"Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                    "\"Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "Hospital Medical Supplies", 
                    "Tooltip"]& ]}], "+", 
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                    "\"Capacity to store Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Capacity to store Hospital Medical Supplies", 
                    "Tooltip"]& ],
                    "\"Capacity to store Hospital Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                   
                   Annotation[#, 
                    "Capacity to store Hospital Medical Supplies", 
                    "Tooltip"]& ]}], ",", 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TooltipBox[
                    RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                    "\"Capacity to transport produced Medical Supplies\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, 
                    "Capacity to transport produced Medical Supplies", 
                    "Tooltip"]& ],
                   "\"Capacity to transport produced Medical Supplies\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, 
                   "Capacity to transport produced Medical Supplies", 
                   "Tooltip"]& ]}], "]"}], 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"msdp", "[", "HB", "]"}],
                   "\"Medical supplies delivery period (number of days)\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, 
                   "Medical supplies delivery period (number of days)", 
                   "Tooltip"]& ],
                 "\"Medical supplies delivery period (number of days)\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Medical supplies delivery period (number of days)", 
                 "Tooltip"]& ]]}]}], "]"}]}], "+", 
          RowBox[{"Min", "[", 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"mspr", "[", "HB", "]"}],
                "\"Medical supplies production rate (units per pay)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies production rate (units per pay)", 
                "Tooltip"]& ],
              "\"Medical supplies production rate (units per pay)\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Medical supplies production rate (units per pay)",
               "Tooltip"]& ], ",", 
            RowBox[{
             RowBox[{"-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"MS", "[", "t", "]"}],
                  "\"Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Medical Supplies", "Tooltip"]& ],
                "\"Medical Supplies\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Medical Supplies", "Tooltip"]& ]}], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MS", "]"}],
                 "\"Capacity to store produced Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, "Capacity to store produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to store produced Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Capacity to store produced Medical Supplies", 
               "Tooltip"]& ]}]}], "]"}], "-", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"MS", "[", "t", "]"}],
                 "\"Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Medical Supplies", "Tooltip"]& ],
               "\"Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
             RowBox[{
              RowBox[{"HB", "[", "t", "]"}], " ", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "HP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]}], ",", 
             RowBox[{
              RowBox[{"-", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"HMS", "[", "t", "]"}],
                   "\"Hospital Medical Supplies\"",
                   TooltipStyle->"TextStyling"],
                  Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                 "\"Hospital Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], 
              "+", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"\[Kappa]", "[", "HMS", "]"}],
                  "\"Capacity to store Hospital Medical Supplies\"",
                  TooltipStyle->"TextStyling"],
                 
                 Annotation[#, "Capacity to store Hospital Medical Supplies", 
                  "Tooltip"]& ],
                "\"Capacity to store Hospital Medical Supplies\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Capacity to store Hospital Medical Supplies", 
                "Tooltip"]& ]}], ",", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"\[Kappa]", "[", "MSD", "]"}],
                 "\"Capacity to transport produced Medical Supplies\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Capacity to transport produced Medical Supplies", 
                 "Tooltip"]& ],
               "\"Capacity to transport produced Medical Supplies\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Capacity to transport produced Medical Supplies",
                "Tooltip"]& ]}], "]"}], 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"msdp", "[", "HB", "]"}],
               "\"Medical supplies delivery period (number of days)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies delivery period (number of days)", 
               "Tooltip"]& ],
             "\"Medical supplies delivery period (number of days)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Medical supplies delivery period (number of days)",
              "Tooltip"]& ]]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["MSD", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           RowBox[{"HP", "[", "t", "]"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "HP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"INSP", "[", "t", "]"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "INSP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"ISSP", "[", "t", "]"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "ISSP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"EP", "[", "t", "]"}], "+", 
             RowBox[{"RP", "[", "t", "]"}], "+", 
             RowBox[{"SP", "[", "t", "]"}]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"mscr", "[", "TP", "]"}],
               
               "\"Medical supplies consumption rate (units per day per \
person)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Medical supplies consumption rate (units per day per person)",
                "Tooltip"]& ],
             
             "\"Medical supplies consumption rate (units per day per \
person)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Medical supplies consumption rate (units per day per person)", 
             "Tooltip"]& ]}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        TagBox[
         TooltipBox[
          RowBox[{"hpmscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          
          "\"Hospitalized population medical supplies consumption rate (per \
day)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Hospitalized population medical supplies consumption rate (per \
day)", "Tooltip"]& ], "4"},
       {"2", 
        TagBox[
         TooltipBox[
          RowBox[{"upmscr", "[", 
           RowBox[{"ISSP", ",", "INSP"}], "]"}],
          
          "\"Un-hospitalized population medical supplies consumption rate \
(units per day)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Un-hospitalized population medical supplies consumption rate \
(units per day)", "Tooltip"]& ], "2"},
       {"3", 
        TagBox[
         TooltipBox[
          RowBox[{"mspcr", "[", "HB", "]"}],
          "\"Medical supplies production cost rate (per unit)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Medical supplies production cost rate (per unit)", 
          "Tooltip"]& ], "1"},
       {"4", 
        TagBox[
         TooltipBox[
          RowBox[{"msdp", "[", "HB", "]"}],
          "\"Medical supplies delivery period (number of days)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Medical supplies delivery period (number of days)", 
          "Tooltip"]& ], "1.5`"},
       {"5", 
        TagBox[
         TooltipBox[
          RowBox[{"mspr", "[", "HB", "]"}],
          "\"Medical supplies production rate (units per pay)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Medical supplies production rate (units per pay)", 
          "Tooltip"]& ], 
        RowBox[{"100", " ", 
         RowBox[{"nhbr", "[", "TP", "]"}], " ", 
         RowBox[{"TP", "[", "0", "]"}]}]},
       {"6", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "TP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "0.02`"},
       {"7", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "INSP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "0.7`"},
       {"8", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "ISSP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "3"},
       {"9", 
        TagBox[
         TooltipBox[
          RowBox[{"mscr", "[", "HP", "]"}],
          "\"Medical supplies consumption rate (units per day per person)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Medical supplies consumption rate (units per day per person)", 
          "Tooltip"]& ], "4"},
       {"10", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "HMS", "]"}],
          "\"Capacity to store Hospital Medical Supplies\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Capacity to store Hospital Medical Supplies", 
          "Tooltip"]& ], 
        RowBox[{"2", " ", 
         RowBox[{"HB", "[", "0", "]"}], " ", 
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "ISSP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ]}]},
       {"11", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MS", "]"}],
          "\"Capacity to store produced Medical Supplies\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Capacity to store produced Medical Supplies", 
          "Tooltip"]& ], 
        RowBox[{"2", " ", 
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "TP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           TooltipStyle->"TextStyling"],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ], " ", 
         RowBox[{"TP", "[", "0", "]"}]}]},
       {"12", 
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MSD", "]"}],
          "\"Capacity to transport produced Medical Supplies\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Capacity to transport produced Medical Supplies", 
          "Tooltip"]& ], 
        FractionBox[
         RowBox[{"HB", "[", "0", "]"}], "10"]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"HMS", "[", "0", "]"}], "\[Equal]", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"\[Kappa]", "[", "HMS", "]"}],
             "\"Capacity to store Hospital Medical Supplies\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Capacity to store Hospital Medical Supplies", 
             "Tooltip"]& ],
           "\"Capacity to store Hospital Medical Supplies\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, "Capacity to store Hospital Medical Supplies", 
           "Tooltip"]& ]}]},
       {"2", 
        RowBox[{
         RowBox[{"MMSP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"MS", "[", "0", "]"}], "\[Equal]", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"\[Kappa]", "[", "MS", "]"}],
             "\"Capacity to store produced Medical Supplies\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Capacity to store produced Medical Supplies", 
             "Tooltip"]& ],
           "\"Capacity to store produced Medical Supplies\"",
           TooltipStyle->"TextStyling"],
          
          Annotation[#, "Capacity to store produced Medical Supplies", 
           "Tooltip"]& ]}]},
       {"4", 
        RowBox[{
         RowBox[{"MSD", "[", "0", "]"}], "\[Equal]", "0"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.899561950163018*^9, 3.899561960091592*^9}},
 CellLabel->"Out[22]=",
 CellID->1022219986,ExpressionUUID->"871edb49-34ac-45ed-af23-6d5f5f5d206e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations explanations", "Section",
 CellChangeTimes->{{3.795009755643981*^9, 3.7950097902152576`*^9}},
 CellID->1338356900,ExpressionUUID->"dea9da7e-c11e-477e-90d3-f7f362fff4a3"],

Cell["\<\
In this section we provide rationale for the equations of SEI2HR-Econ. \
\>", "Text",
 CellChangeTimes->{{3.788260077985444*^9, 3.788260105345427*^9}, {
   3.7882601403341007`*^9, 3.78826015034595*^9}, 3.7882602818559847`*^9, 
   3.792432164390764*^9, {3.795009800846743*^9, 3.795009812581058*^9}, {
   3.795010208879356*^9, 3.795010279710746*^9}, {3.795010347797497*^9, 
   3.795010423043984*^9}, {3.7952568933006773`*^9, 3.7952568951461697`*^9}, {
   3.795606975264873*^9, 3.795606977896607*^9}},
 CellID->1020699622,ExpressionUUID->"3b6c374a-dd9b-43ba-a767-42161418adbb"],

Cell["\<\
The equations for Susceptible, Exposed, Infected, Recovered populations of \
SEI2R are \"standard\" and explanations about them are found in [WK1, HH1]. \
For SEI2HR those equations change because of the stocks Hospitalized \
Population and Hospital Beds. For SEI2HR-Econ the SEI2HR equations change \
because of the stocks Medical Supplies, Medical Supplies Demand, and Hospital \
Medical Supplies.\
\>", "Text",
 CellChangeTimes->{{3.788260077985444*^9, 3.788260105345427*^9}, {
   3.7882601403341007`*^9, 3.78826015034595*^9}, 3.7882602818559847`*^9, 
   3.792432164390764*^9, {3.795009800846743*^9, 3.795009812581058*^9}, {
   3.795010208879356*^9, 3.795010279710746*^9}, {3.795010347797497*^9, 
   3.795010465495901*^9}, {3.79525691242625*^9, 3.79525699939046*^9}},
 CellID->799174718,ExpressionUUID->"4c659a56-2a3b-4809-9a8b-a0bd9ab35e0c"],

Cell["\<\
The equations time unit is one day. The time horizon is one year. Since we \
target COVID-19, [Wk2, AA1], we do not consider births.\
\>", "Text",
 CellChangeTimes->{{3.795057270866074*^9, 3.795057331077129*^9}, {
  3.7951690526899*^9, 3.795169074334569*^9}, {3.795169140666552*^9, 
  3.79516914405199*^9}},
 CellID->1366757088,ExpressionUUID->"c5727181-d28b-4581-9eb4-72d7afc55647"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " For convenient reading the equations in this section have tooltips for the \
involved stocks and rates."
}], "Text",
 CellChangeTimes->{{3.79501170809335*^9, 3.795011771026613*^9}, {
  3.7951691521641827`*^9, 3.7951691906278877`*^9}},
 CellID->1601289704,ExpressionUUID->"899d229c-88e3-4ad5-ac33-206c0976f71d"],

Cell[CellGroupData[{

Cell["Verbal description of the model", "Subsection",
 CellChangeTimes->{{3.7951134252262917`*^9, 3.7951134340911922`*^9}, {
  3.7951141298027687`*^9, 3.7951141319626293`*^9}, {3.8184400299673*^9, 
  3.818440031441605*^9}},
 CellID->610990924,ExpressionUUID->"503d4fbe-b939-4c82-9d23-8b7e56efec62"],

Cell["\<\
We start with one infected (normally symptomatic) person, the rest of the \
people are susceptible. The infected people meet other people directly or get \
in contact with them indirectly. (Say, susceptible people touch things \
touched by infected.) For each susceptible person there is a probability to \
get the decease. The decease has an incubation period: before becoming \
infected the susceptible are (merely) exposed. The infected recover after a \
certain average infection period or die. A certain fraction of the infected \
become severely symptomatic. The severely symptomatic infected are \
hospitalized if there are enough hospital beds and enough medical supplies. \
The hospitalized severely infected have different death rate than the \
non-hospitalized ones. The number of hospital beds might change: hospitals \
are extended, new hospitals are build, or there are not enough medical \
personnel or supplies. \
\>", "Text",
 CellChangeTimes->{{3.795113436992867*^9, 3.795113977520782*^9}, {
  3.7951140165923243`*^9, 3.79511412378368*^9}, {3.795169200467272*^9, 
  3.795169351460434*^9}, {3.795266405960306*^9, 3.795266482282241*^9}, {
  3.795266518485387*^9, 3.7952666870013027`*^9}, {3.795599909792276*^9, 
  3.7956002097172623`*^9}},
 CellID->1805143361,ExpressionUUID->"5d412dee-0e75-47a7-a378-6505522d07c6"],

Cell["\<\
The different types of populations (infected, hospitalized, recovered, etc.) \
have their own consumption rates of medical supplies. The medical supplies \
are produced with a certain rate (units per day) and delivered after a \
certain delay period. The hospitals have their own storage for medical \
supplies. Medical supplies are delivered to the hospitals only, \
non-hospitalized people go to the medical supplies producer to buy supplies. \
The hospitals have precedence for the medical supplies: if the medical \
supplies are not enough for everyone, the hospital needs are covered first \
(as much as possible.) \
\>", "Text",
 CellChangeTimes->{{3.795113436992867*^9, 3.795113977520782*^9}, {
  3.7951140165923243`*^9, 3.79511412378368*^9}, {3.795169200467272*^9, 
  3.795169351460434*^9}, {3.795266405960306*^9, 3.795266482282241*^9}, {
  3.795266518485387*^9, 3.7952666870013027`*^9}, {3.795599909792276*^9, 
  3.795600193364479*^9}, {3.7956002334268017`*^9, 3.795600267368258*^9}, {
  3.795600303975923*^9, 3.795600375216481*^9}, {3.79560059189097*^9, 
  3.7956006301193657`*^9}, {3.795600664072548*^9, 3.79560067138487*^9}},
 CellID->1542987158,ExpressionUUID->"18ca54b9-5de8-471a-b93c-ee459f6989f5"],

Cell["\<\
The medical supplies producer has a certain storage capacity (for supplies.) \
The medical supplies delivery vehicles have a certain -- generally speaking, \
smaller -- capacity. The hospitals have a certain capacity to store medical \
supplies. It is assumed that both producer and hospitals have initial stocks \
of medical supplies. (Following a certain normal, general preparedness \
protocol.)\
\>", "Text",
 CellChangeTimes->{{3.795600382949986*^9, 3.795600585658383*^9}, {
  3.795607170852016*^9, 3.795607249647728*^9}, {3.7956073233693733`*^9, 
  3.795607365447937*^9}, {3.795607397792699*^9, 3.795607441624823*^9}},
 CellID->2120126981,ExpressionUUID->"0e459d73-45c3-4815-80a2-f194428a1ba5"],

Cell["\<\
The combined demand from all populations for medical supplies is tracked \
(accumulated.) The deaths from infection are tracked (accumulated.) Money for \
medical supplies production, money for hospital services, and money from lost \
productivity are tracked (accumulated.) \
\>", "Text",
 CellChangeTimes->{{3.795113436992867*^9, 3.795113977520782*^9}, {
  3.7951140165923243`*^9, 3.79511412378368*^9}, {3.795169200467272*^9, 
  3.795169351460434*^9}, {3.795266405960306*^9, 3.795266482282241*^9}, {
  3.795266518485387*^9, 3.7952666870013027`*^9}, {3.795599909792276*^9, 
  3.795600193364479*^9}, {3.7956002334268017`*^9, 3.795600267368258*^9}, {
  3.795600303975923*^9, 3.7956003648432617`*^9}, {3.795607472652686*^9, 
  3.7956074783565807`*^9}},
 CellID->1925498643,ExpressionUUID->"2ce0baf8-cbbc-4dbf-9aa0-de4e3443260f"],

Cell["\<\
The equations below give mathematical interpretation of the model description \
above.\
\>", "Text",
 CellChangeTimes->{{3.7951141429201393`*^9, 3.795114172463463*^9}},
 CellID->1424616258,ExpressionUUID->"3898aed7-eac2-4a88-808d-e3513392368c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code for the equations", "Subsection",
 CellChangeTimes->{{3.795055087060851*^9, 3.7950551002116947`*^9}},
 CellID->1230267803,ExpressionUUID->"d62b6ce5-7368-4f82-9cd6-90ebe6ea7583"],

Cell[CellGroupData[{

Cell["\<\
Each equation in this section are derived with code like this:\
\>", "Text",
 CellChangeTimes->{{3.795052951449155*^9, 3.795053023766011*^9}, {
  3.795169381746522*^9, 3.795169385220583*^9}},
 CellID->1138411705,ExpressionUUID->"363a8834-4c1a-4a0d-bbed-77a20df8a6cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ModelGridTableForm", "[", 
    RowBox[{"modelSEI2HREcon", ",", " ", "lsModelOpts"}], "]"}], "[", 
   "\"\<Equations\>\"", "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", " ", 
    RowBox[{
     RowBox[{"EquationPosition", "[", 
      RowBox[{"modelSEI2HREcon", ",", " ", "RP"}], "]"}], " ", "+", " ", 
     "1"}], ",", " ", "2"}], "]"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellChangeTimes->{{3.795257070772932*^9, 3.795257076056204*^9}},
 CellLabel->"In[393]:=",
 CellID->1353714812,ExpressionUUID->"076c19c2-db77-486a-aedf-ede22c71fffc"]
}, Open  ]],

Cell[TextData[{
 "and then the output cell is edited to be \
\[OpenCurlyDoubleQuote]DisplayFormula\[CloseCurlyDoubleQuote] and have ",
 StyleBox["CellLabel", "Program"],
 " value corresponding to the stock of interest."
}], "Text",
 CellChangeTimes->{{3.795053027634798*^9, 3.7950530654130917`*^9}, {
  3.795053137977296*^9, 3.795053152219589*^9}, {3.795053185430107*^9, 
  3.795053219518152*^9}},
 CellID->1443088966,ExpressionUUID->"145c2961-6f19-489a-822c-4ff0387f8963"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The infected and hospitalized populations", "Subsection",
 CellChangeTimes->{{3.795012203731121*^9, 3.795012248214262*^9}},
 CellID->315942344,ExpressionUUID->"db3809a1-b685-4b6e-ab3b-488030024fa7"],

Cell["\<\
SEI2HR has two types of infected populations: a normally symptomatic one and \
a severely symptomatic one. A major assumption for SEI2HR is that only the \
severely symptomatic people are hospitalized. (That assumption is also \
reflected in the diagram in the introduction.)\
\>", "Text",
 CellChangeTimes->{{3.795012170891933*^9, 3.795012197037404*^9}, {
  3.795012261129662*^9, 3.7950124243923893`*^9}, {3.795169404460878*^9, 
  3.795169426667719*^9}},
 CellID->1463400224,ExpressionUUID->"7853027e-9aa2-4973-80ab-c65dac9d2aa3"],

Cell["\<\
Each of those three populations have their own contact rates and mortality \
rates.\
\>", "Text",
 CellChangeTimes->{{3.795012435530241*^9, 3.795012482105783*^9}, 
   3.795012649923788*^9},
 CellID->237355677,ExpressionUUID->"27846be7-6914-4973-9352-654b481ec39b"],

Cell[CellGroupData[{

Cell["Here are the contact rates from the SEI2HR-Econ dictionary", "Text",
 CellChangeTimes->{{3.795169453185158*^9, 3.7951694963064423`*^9}, {
  3.795257049610869*^9, 3.795257050399251*^9}},
 CellID->1359730860,ExpressionUUID->"e9212d95-57cc-4182-bf45-b902fbcd942d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "@", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"modelSEI2HREcon", "[", "\"\<Rates\>\"", "]"}]}], ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "[", "_", "]"}], "\[Rule]", "_"}], "]"}], ",", 
    "\[Infinity]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795012546310937*^9, 3.7950126193806953`*^9}, {
  3.795257031499102*^9, 3.795257032061474*^9}},
 CellLabel->"In[23]:=",
 CellID->1623076293,ExpressionUUID->"a323678d-a011-4664-b493-24735bfb99e8"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "INSP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the infected normally symptomatic \
population\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "ISSP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the infected severely symptomatic \
population\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Beta]", "[", "HP", "]"}], 
      "\[Rule]", "\<\"Contact rate for the hospitalized population\"\>"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{$CellContext`\[Beta][$CellContext`INSP] -> 
    "Contact rate for the infected normally symptomatic population", \
$CellContext`\[Beta][$CellContext`ISSP] -> 
    "Contact rate for the infected severely symptomatic population", \
$CellContext`\[Beta][$CellContext`HP] -> 
    "Contact rate for the hospitalized population"}],
  Editable->False]], "Output",
 CellChangeTimes->{{3.899561955742496*^9, 3.8995619601076202`*^9}},
 CellLabel->"Out[23]=",
 CellID->582128702,ExpressionUUID->"cd39ce6e-8711-4493-9575-af2d98d9c49f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the mortality rates from the SEI2HR-Econ dictionary", "Text",
 CellChangeTimes->{{3.7951694750076237`*^9, 3.795169493707717*^9}, {
  3.795257041510532*^9, 3.795257046461287*^9}},
 CellID->1705972257,ExpressionUUID->"00f1b8a6-7a70-44db-bd82-4dc87e2a1d6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColumnForm", "@", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"Normal", "@", 
     RowBox[{"modelSEI2HREcon", "[", "\"\<Rates\>\"", "]"}]}], ",", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "_", "]"}], "\[Rule]", "_"}], "]"}], ",", 
    "\[Infinity]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795012546310937*^9, 3.795012631947336*^9}, {
  3.7952570385309563`*^9, 3.795257039115144*^9}},
 CellLabel->"In[24]:=",
 CellID->1221552302,ExpressionUUID->"2f962c6e-63e3-4a39-9f36-8552e219c795"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "TP", "]"}], 
      "\[Rule]", "\<\"Population death rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "INSP", "]"}], 
      "\[Rule]", "\<\"Infected Normally Symptomatic Population death \
rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "ISSP", "]"}], 
      "\[Rule]", "\<\"Infected Severely Symptomatic Population death \
rate\"\>"}]},
    {
     RowBox[{
      RowBox[{"\[Mu]", "[", "HP", "]"}], 
      "\[Rule]", "\<\"Hospitalized Population death rate\"\>"}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
  ColumnForm[{$CellContext`\[Mu][$CellContext`TP] -> 
    "Population death rate", $CellContext`\[Mu][$CellContext`INSP] -> 
    "Infected Normally Symptomatic Population death rate", \
$CellContext`\[Mu][$CellContext`ISSP] -> 
    "Infected Severely Symptomatic Population death rate", \
$CellContext`\[Mu][$CellContext`HP] -> "Hospitalized Population death rate"}],
  
  Editable->False]], "Output",
 CellChangeTimes->{{3.899561955770968*^9, 3.8995619601147957`*^9}},
 CellLabel->"Out[24]=",
 CellID->2049082429,ExpressionUUID->"f34c0902-c82f-4460-a248-86deaa4edc3e"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Below with \[OpenCurlyDoubleQuote]Infected Population\
\[CloseCurlyDoubleQuote] we mean both stocks Infected Normally Symptomatic \
Population (INSP) and Infected Severely Symptomatic Population (ISSP)."
}], "Text",
 CellChangeTimes->{{3.795012809518549*^9, 3.795012868053237*^9}, {
  3.795013451701508*^9, 3.7950134695881767`*^9}},
 CellID->685874394,ExpressionUUID->"11566673-68a7-4650-92fe-8a0e21ce0c8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Total Population", "Subsection",
 CellChangeTimes->{{3.795011305110136*^9, 3.795011315079767*^9}},
 CellID->1946206509,ExpressionUUID->"463a7d21-1934-4aa6-9491-9dc3964ab905"],

Cell[CellGroupData[{

Cell["\<\
In this notebook we consider a DAE\[CloseCurlyQuote]s formulation of \
SEI2HR-Econ. The stock Total Population has the following (obvious) algebraic \
equation:\
\>", "Text",
 CellChangeTimes->{{3.7950113306945877`*^9, 3.7950113823776007`*^9}, {
  3.7950115573188667`*^9, 3.7950116299716253`*^9}, {3.795257055146229*^9, 
  3.79525705599053*^9}},
 CellID->1569369306,ExpressionUUID->"0fb16545-6503-4650-a26b-64a21495d8c9"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TooltipBox[
    TagBox[
     TooltipBox[
      RowBox[{"TP", "[", "t", "]"}],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ],
    "\"Total Population\"",
    TooltipStyle->{
     Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
      FontSize -> 20}],
   Annotation[#, "Total Population", "Tooltip"]& ], "\[Equal]", 
  RowBox[{"Max", "[", 
   RowBox[{"0", ",", 
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"RP", "[", "t", "]"}],
         "\"Recovered Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Recovered Population", "Tooltip"]& ],
       "\"Recovered Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ]}]}], 
   "]"}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520942594571*^9, 3.7955228316999817`*^9, 
  3.795525996038437*^9, 3.79552603844665*^9, 3.795532564962467*^9, 
  3.795540133279353*^9},
 CellLabel->"(TP)",
 CellID->995773488,ExpressionUUID->"826b2e5d-15a9-4356-89f1-d288b641e551"]
}, Open  ]],

Cell[TextData[{
 "Note that with ",
 StyleBox["Max", "Program"],
 " we specified that the total population cannot be less than ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]],ExpressionUUID->
  "80d70a27-37e9-429a-ae34-00128e666d73"],
 "."
}], "Text",
 CellChangeTimes->{{3.795011824465151*^9, 3.7950118660692053`*^9}, {
  3.795169520877777*^9, 3.79516955222272*^9}},
 CellID->624951745,ExpressionUUID->"12733964-96fc-423f-b946-5a7d8e521d48"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " As mentioned in the introduction, the package [AAp1] allows for the use of \
non-algebraic formulation, without an equation for TP."
}], "Text",
 CellChangeTimes->{{3.795011390804233*^9, 3.795011431203477*^9}, {
  3.795011779812842*^9, 3.79501178866679*^9}, {3.7951695653608837`*^9, 
  3.79516957526053*^9}},
 CellID->221460738,ExpressionUUID->"eb9c1c25-252b-4e38-876d-d89843436aeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Susceptible Population", "Subsection",
 CellChangeTimes->{{3.7924327404893208`*^9, 3.792432755970215*^9}, {
  3.792432786814529*^9, 3.792432787106859*^9}},
 CellID->501463315,ExpressionUUID->"cb75eb3e-3f39-4ccf-a891-2aa5d3e9f7f8"],

Cell[CellGroupData[{

Cell["\<\
The stock Susceptible Population (SP) is decreased by (1) infections derived \
from stocks Infected Populations and Hospitalized Population (HP), and (2) \
morality cases derived with the typical mortality rate.\
\>", "Text",
 CellChangeTimes->{{3.795011267109112*^9, 3.795011268705738*^9}, {
  3.7950120902396917`*^9, 3.795012131516259*^9}, {3.795012683563665*^9, 
  3.795012782698024*^9}, {3.795012871844652*^9, 3.795012919230579*^9}, {
  3.7950134363343573`*^9, 3.795013445243763*^9}},
 CellID->1368104377,ExpressionUUID->"84859e2a-5311-43d4-a6f9-2a051cf7bd79"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["SP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"HP", "[", "t", "]"}],
          "\"Hospitalized Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population", "Tooltip"]& ],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"SP", "[", "t", "]"}],
          "\"Susceptible Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Susceptible Population", "Tooltip"]& ],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Beta]", "[", "HP", "]"}],
          "\"Contact rate for the hospitalized population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Contact rate for the hospitalized population", 
          "Tooltip"]& ],
        "\"Contact rate for the hospitalized population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Contact rate for the hospitalized population", 
        "Tooltip"]& ]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"TP", "[", "t", "]"}],
         "\"Total Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Total Population", "Tooltip"]& ],
       "\"Total Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Total Population", "Tooltip"]& ]]}], "-", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "INSP", "]"}],
         "\"Contact rate for the normally symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the normally symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the normally symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the normally symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"SP", "[", "t", "]"}],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ],
      "\"Susceptible Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520942656529*^9, 3.795522831746725*^9, 
  3.795525996075317*^9, 3.795526038484165*^9, 3.795532565005309*^9, 
  3.795540133319583*^9, 3.795540185584311*^9},
 CellLabel->"(SP)",
 CellID->622855810,ExpressionUUID->"927cb174-6c36-4db0-a0ce-483c3800f3f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Because we hospitalize the severely infected people only instead of the term\
\>", "Text",
 CellChangeTimes->{{3.795013088546363*^9, 3.795013112486208*^9}},
 CellID->1502303192,ExpressionUUID->"507caf3e-ddd2-461b-98f3-e51851395222"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"ISSP", "[", "t", "]"}], 
   RowBox[{"SP", "[", "t", "]"}], 
   RowBox[{"\[Beta]", "[", "ISSP", "]"}]}], 
  RowBox[{"TP", "[", "t", "]"}]]], "DisplayFormula",
 CellChangeTimes->{{3.795013137784575*^9, 3.795013155102044*^9}, {
  3.795013235922861*^9, 3.795013237228023*^9}},
 CellID->1244510165,ExpressionUUID->"976ab1fe-53eb-4460-964d-c68cdde5a93d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["we have the terms ", "Text",
 CellChangeTimes->{{3.795013184959922*^9, 3.795013188537169*^9}},
 CellID->2139105022,ExpressionUUID->"23a0efbd-c169-47ed-8710-f3713a10df1c"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"SP", "[", "t", "]"}],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ],
      "\"Susceptible Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Beta]", "[", "HP", "]"}],
        "\"Contact rate for the hospitalized population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Contact rate for the hospitalized population", 
        "Tooltip"]& ],
      "\"Contact rate for the hospitalized population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Contact rate for the hospitalized population", 
      "Tooltip"]& ]}], 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"TP", "[", "t", "]"}],
       "\"Total Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Total Population", "Tooltip"]& ],
     "\"Total Population\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], 
   "."}]}]], "DisplayFormula",
 CellChangeTimes->{{3.7950132026218*^9, 3.7950132318285713`*^9}},
 CellID->914370327,ExpressionUUID->"99083e5b-8643-4f8a-8a21-a0b174859e75"]
}, Open  ]],

Cell[TextData[{
 "The first term is for the infections derived from the hospitalized \
population. The second term for the infections derived from people who are \
infected severely symptomatic and ",
 StyleBox["not",
  FontSlant->"Italic"],
 " hospitalized."
}], "Text",
 CellChangeTimes->{{3.795013242280198*^9, 3.795013384583099*^9}, {
  3.795169680359105*^9, 3.79516968572535*^9}},
 CellID->429107957,ExpressionUUID->"5858c26a-2ca1-4442-88b9-37c12e5137d2"],

Cell[CellGroupData[{

Cell["Births term", "Subsubsection",
 CellChangeTimes->{{3.7950576027462673`*^9, 3.795057606380949*^9}},
 CellID->767346673,ExpressionUUID->"64dd99d5-ef1d-4e76-b7ac-0f8d4373f317"],

Cell[CellGroupData[{

Cell["\<\
Note that we do not consider in this notebook births, but the births term can \
be included in SP\[CloseCurlyQuote]s equation:\
\>", "Text",
 CellChangeTimes->{{3.7950574656071463`*^9, 3.7950575132513103`*^9}},
 CellID->1156232876,ExpressionUUID->"3a6b6548-23a7-4708-87ed-44023564a56f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "=", 
     RowBox[{"SEI2HREconModel", "[", 
      RowBox[{"t", ",", 
       RowBox[{"\"\<BirthsTerm\>\"", "\[Rule]", "True"}]}], "]"}]}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ModelGridTableForm", "[", "m", "]"}], "[", "\"\<Equations\>\"", 
     "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"EquationPosition", "[", 
       RowBox[{"m", ",", "SP"}], "]"}], "+", "1"}], ",", "2"}], 
    "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7950573427497377`*^9, 3.795057448811531*^9}, {
  3.795259942139579*^9, 3.795259942858982*^9}},
 CellLabel->"In[25]:=",
 CellID->226425229,ExpressionUUID->"1821d1b7-916b-43e1-9cd7-f54edcea2724"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["SP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Susceptible Population", "Tooltip"]& ]}], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "Population death rate", "Tooltip"]& ]}], "-", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"HP", "[", "t", "]"}],
         "\"Hospitalized Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ],
       "\"Hospitalized Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "HP", "]"}],
         "\"Contact rate for the hospitalized population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Contact rate for the hospitalized population", 
         "Tooltip"]& ],
       "\"Contact rate for the hospitalized population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Contact rate for the hospitalized population", 
       "Tooltip"]& ]}], 
    RowBox[{"TP", "[", "0", "]"}]], "-", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "INSP", "]"}],
         "\"Contact rate for the infected normally symptomatic population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, 
         "Contact rate for the infected normally symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the infected normally symptomatic population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Contact rate for the infected normally symptomatic population", 
       "Tooltip"]& ]}], 
    RowBox[{"TP", "[", "0", "]"}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            TooltipStyle->"TextStyling"],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the infected severely symptomatic population\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, 
         "Contact rate for the infected severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the infected severely symptomatic population\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Contact rate for the infected severely symptomatic population", 
       "Tooltip"]& ]}], 
    RowBox[{"TP", "[", "0", "]"}]], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->"TextStyling"],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "Population death rate", "Tooltip"]& ], " ", 
    RowBox[{"TP", "[", "0", "]"}]}]}]}]], "Output",
 CellChangeTimes->{{3.899561955785701*^9, 3.899561960136745*^9}},
 CellLabel->"Out[25]=",
 CellID->1880620911,ExpressionUUID->"a86e1a86-6eca-4f48-87e9-f704950c5f65"]
}, Open  ]]
}, Open  ]],

Cell["\<\
The births rate is the same as the death rate, but it can be programmatically \
changed. (See [AAp2].)\
\>", "Text",
 CellChangeTimes->{{3.795057523184978*^9, 3.7950575655759*^9}, {
  3.795169710914278*^9, 3.795169725223934*^9}},
 CellID->187801319,ExpressionUUID->"c20d58ef-8c2d-484c-8690-8acff10bc7d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exposed Population", "Subsection",
 CellChangeTimes->{{3.7950129643131742`*^9, 3.795012971420479*^9}},
 CellID->1723290990,ExpressionUUID->"467bca16-b905-4c84-8955-d3b25f60951c"],

Cell[CellGroupData[{

Cell["\<\
The stock Exposed Population (EP) is increased by (1) infections derived from \
the stocks Infected Populations and Hospitalized Population, and (2) \
mortality cases derived with the typical mortality rate. EP is decreased by \
(1) the people who after a certain average incubation period (aincp) become \
ill, and (2) mortality cases derived with the typical mortality rate.\
\>", "Text",
 CellChangeTimes->{{3.795011267109112*^9, 3.795011268705738*^9}, {
  3.7950120902396917`*^9, 3.795012131516259*^9}, {3.795012683563665*^9, 
  3.795012782698024*^9}, {3.795012871844652*^9, 3.795012919230579*^9}, {
  3.795012987496993*^9, 3.795012993503879*^9}, {3.795013405599039*^9, 
  3.795013431811366*^9}, {3.795013483450334*^9, 3.795013611240715*^9}, {
  3.7950145599567747`*^9, 3.795014563905554*^9}, {3.795014710994252*^9, 
  3.795014712678007*^9}, {3.795169741456602*^9, 3.7951697418978567`*^9}, {
  3.7951699972209473`*^9, 3.795169997227285*^9}},
 CellID->239721841,ExpressionUUID->"686a0aea-f90a-4452-9750-b746cd967fd9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["EP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"HP", "[", "t", "]"}],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ],
       "\"Hospitalized Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "HP", "]"}],
         "\"Contact rate for the hospitalized population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the hospitalized population", 
         "Tooltip"]& ],
       "\"Contact rate for the hospitalized population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the hospitalized population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "INSP", "]"}],
         "\"Contact rate for the normally symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the normally symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the normally symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the normally symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}]}], "]"}], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"SP", "[", "t", "]"}],
         "\"Susceptible Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Susceptible Population", "Tooltip"]& ],
       "\"Susceptible Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Susceptible Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"\[Beta]", "[", "ISSP", "]"}],
         "\"Contact rate for the severely symptomatic population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Contact rate for the severely symptomatic population", 
         "Tooltip"]& ],
       "\"Contact rate for the severely symptomatic population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Contact rate for the severely symptomatic population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"TP", "[", "t", "]"}],
        "\"Total Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Total Population", "Tooltip"]& ],
      "\"Total Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Total Population", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"EP", "[", "t", "]"}],
        "\"Exposed Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Exposed Population", "Tooltip"]& ],
      "\"Exposed Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox["aincp",
           "\"Average incubation period\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Average incubation period", "Tooltip"]& ],
         "\"Average incubation period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average incubation period", "Tooltip"]& ]], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "TP", "]"}],
          "\"Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Population death rate", "Tooltip"]& ],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ]}], 
     ")"}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.7955209427360477`*^9, 3.795522831837886*^9, 
  3.795525996146151*^9, 3.795526038555345*^9, 3.795532565095487*^9, 
  3.79554013339822*^9, 3.795540238909336*^9},
 CellLabel->"(EP)",
 CellID->325659915,ExpressionUUID->"ed8ed641-5593-4252-b6cc-e404d31c05a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Infected Normally Symptomatic Population", "Subsection",
 CellChangeTimes->{{3.792432758488686*^9, 3.792432803735303*^9}},
 CellID->1577858849,ExpressionUUID->"c8745bef-6d9b-4310-9a32-ce39d505abdd"],

Cell[CellGroupData[{

Cell["\<\
INSP is increased by a fraction of the people who have been exposed. That \
fraction is derived with the parameter severely symptomatic population \
fraction (sspf). INSP is decreased by (1) the people who recover after a \
certain average infection period (aip), and (2) the normally symptomatic \
people who die from the disease.\
\>", "Text",
 CellChangeTimes->{{3.7950145768662252`*^9, 3.795014860425259*^9}, {
  3.795169794167276*^9, 3.79516981121101*^9}},
 CellID->1945601987,ExpressionUUID->"730b7a23-541f-4f6c-a37c-02d5833754b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["INSP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox["aip",
         "\"Average infectious period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average infectious period", "Tooltip"]& ],
       "\"Average infectious period\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"sspf", "[", "SP", "]"}],
           "\"Severely Symptomatic Population Fraction\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Severely Symptomatic Population Fraction", 
           "Tooltip"]& ],
         "\"Severely Symptomatic Population Fraction\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Severely Symptomatic Population Fraction", 
         "Tooltip"]& ]}], ")"}]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aincp",
        "\"Average incubation period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average incubation period", "Tooltip"]& ],
      "\"Average incubation period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"INSP", "[", "t", "]"}],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "INSP", "]"}],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520942771061*^9, 3.7955228318834963`*^9, 
  3.795525996182294*^9, 3.795526038590839*^9, 3.795532565138287*^9, 
  3.795540133436645*^9, 3.795540285300967*^9},
 CellLabel->"(INSP)",
 CellID->2146586287,ExpressionUUID->"51ed93a1-1989-4f35-82bb-1e09e3572782"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Infected Severely Symptomatic Population", "Subsection",
 CellChangeTimes->{{3.792432758488686*^9, 3.792432784992174*^9}},
 CellID->2097939656,ExpressionUUID->"03d955dc-805e-4937-be13-74cdc159aae2"],

Cell[CellGroupData[{

Cell["\<\
ISSP is increased by a fraction of the people who have been exposed. That \
fraction is corresponds to the parameter severely symptomatic population \
fraction (sspf). ISSP is decreased by (1) the people who recover after a \
certain average infection period (aip), (2) the hospitalized severely \
symptomatic people who die from the disease, and (3) the non-hospitalized \
severely symptomatic people who die from the disease.\
\>", "Text",
 CellChangeTimes->{{3.7950145768662252`*^9, 3.795014878900036*^9}, {
  3.795015376562159*^9, 3.795015415250908*^9}, {3.79516985073234*^9, 
  3.795169867393639*^9}},
 CellID->537798299,ExpressionUUID->"4236665e-c1fa-49b6-85b0-5910d55efaf6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["ISSP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox["aip",
         "\"Average infectious period\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Average infectious period", "Tooltip"]& ],
       "\"Average infectious period\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Average infectious period", "Tooltip"]& ]]}], "+", 
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"EP", "[", "t", "]"}],
         "\"Exposed Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Exposed Population", "Tooltip"]& ],
       "\"Exposed Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"sspf", "[", "SP", "]"}],
         "\"Severely Symptomatic Population Fraction\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Severely Symptomatic Population Fraction", 
         "Tooltip"]& ],
       "\"Severely Symptomatic Population Fraction\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Severely Symptomatic Population Fraction", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aincp",
        "\"Average incubation period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average incubation period", "Tooltip"]& ],
      "\"Average incubation period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average incubation period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HP", "[", "t", "]"}],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"ISSP", "[", "t", "]"}],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population", 
        "Tooltip"]& ]}], ")"}], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "ISSP", "]"}],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Severely Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Severely Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520942811768*^9, 3.795522831927884*^9, 
  3.795525996218272*^9, 3.79552603862712*^9, 3.795532565181128*^9, 
  3.795540133475604*^9, 3.7955403144192867`*^9, 3.795540373948051*^9},
 CellLabel->"(ISSP)",
 CellID->17341070,ExpressionUUID->"c90a2e0f-0cc3-4de2-ba4e-07430d7acb96"]
}, Open  ]],

Cell["\<\
Note that we do not assume that severely symptomatic people recover faster if \
they are hospitalized, only that they have a different death rate.\
\>", "Text",
 CellChangeTimes->{{3.795015781197987*^9, 3.795015848687818*^9}},
 CellID->1541071145,ExpressionUUID->"dcc0ac6f-083f-4fac-8180-47496a815bb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospitalized Population", "Subsection",
 CellChangeTimes->{{3.795014886201209*^9, 3.7950148910265713`*^9}, {
  3.795015657276829*^9, 3.795015657681332*^9}},
 CellID->2129951195,ExpressionUUID->"f65b0c40-3859-467c-8c6b-5af1f885d110"],

Cell["\<\
The amount of people that can be hospitalized is determined by the available \
Hospital Beds (HB) -- the stock Hospitalized Population (HP) is subject to a \
resource limitation by the stock HB.\
\>", "Text",
 CellChangeTimes->{{3.795015965081923*^9, 3.7950161008835*^9}, {
  3.7950161387975473`*^9, 3.7950161553116302`*^9}, {3.795169923319195*^9, 
  3.795169928357889*^9}},
 CellID->1684822522,ExpressionUUID->"9526e094-fa4f-4fcf-bd98-b76583f2811d"],

Cell["\<\
The equation of the stock HP can be easily understood from the following \
dynamics description points:\
\>", "Text",
 CellChangeTimes->{{3.7950156429448633`*^9, 3.795015722910379*^9}},
 CellID->92757912,ExpressionUUID->"a315b7d0-dded-4d23-b2c2-1bb8c7efe65c"],

Cell["\<\
If the number of hospitalized people is less that the number of hospital beds \
we hospitalize the new ISSP people.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.7950159589622183`*^9}, {3.795016165752198*^9, 
  3.795016271492449*^9}, {3.795542419308798*^9, 3.795542419309042*^9}},
 CellID->2056582909,ExpressionUUID->"e23bc588-d0fc-4fa5-9bcd-831eccf0753f"],

Cell["\<\
The Available Hospital Beds (AHB) are determined by the minimum of (i) the \
non-occupied hospital beds, and (ii) the hospital medical supplies divided by \
the ISSP consumption rate.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.7950159589622183`*^9}, {3.795016165752198*^9, 
  3.795016271492449*^9}, {3.795542421027326*^9, 3.795542568528359*^9}},
 CellID->1239653098,ExpressionUUID->"e62149d5-f4ce-4044-a289-a304b3b756a7"],

Cell["\<\
If the new ISSP people are more than AHB the hospital takes as many as AHB.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016378922151*^9}, {3.795542409135491*^9, 3.795542415930564*^9}, {
  3.795542512400385*^9, 3.795542514652516*^9}, {3.79560762751339*^9, 
  3.7956076360174313`*^9}},
 CellID->2110758539,ExpressionUUID->"2fb237aa-840a-4f11-bc85-250c85234514"],

Cell["\<\
Hospitalized people have the same average infection period (aip).\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016441181155*^9}},
 CellID->1236400180,ExpressionUUID->"ffdadea6-4b0a-40ba-8f73-89b5db2d97e3"],

Cell["\<\
Hospitalized (severely symptomatic) people have their own mortality rate.\
\>", "Item",
 CellChangeTimes->{{3.795015726678234*^9, 3.7950157641877127`*^9}, {
  3.795015894870757*^9, 3.795015924591757*^9}, {3.7950162407792463`*^9, 
  3.795016511121223*^9}, {3.795017657941299*^9, 3.795017675593258*^9}, {
  3.795542344489006*^9, 3.795542344492969*^9}},
 CellID->1126056888,ExpressionUUID->"1246858b-6c1a-4eed-986d-fd35ff2b9ea3"],

Cell[CellGroupData[{

Cell["Here is the HP equation:", "Text",
 CellChangeTimes->{{3.795564895154669*^9, 3.795564910904443*^9}},
 CellID->2012219252,ExpressionUUID->"675bba49-998c-47c9-bf32-d9914d58132a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["HP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HB", "[", "t", "]"}],
                  "\"Hospital Beds\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Beds", "Tooltip"]& ],
                "\"Hospital Beds\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ], "-", 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HP", "[", "t", "]"}],
                  "\"Hospitalized Population\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospitalized Population", "Tooltip"]& ],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], ",", 
             
             FractionBox[
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"HMS", "[", "t", "]"}],
                  "\"Hospital Medical Supplies\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
                "\"Hospital Medical Supplies\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox[
                  RowBox[{"mscr", "[", "ISSP", "]"}],
                  
                  "\"Medical supplies consumption rate (units per day per \
person)\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 
                 Annotation[#, 
                  "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ],
                
                "\"Medical supplies consumption rate (units per day per \
person)\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               
               Annotation[#, 
                "Medical supplies consumption rate (units per day per \
person)", "Tooltip"]& ]], ",", 
             FractionBox[
              RowBox[{
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"EP", "[", "t", "]"}],
                   "\"Exposed Population\"",
                   
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  Annotation[#, "Exposed Population", "Tooltip"]& ],
                 "\"Exposed Population\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                Annotation[#, "Exposed Population", "Tooltip"]& ], " ", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox[
                   RowBox[{"sspf", "[", "SP", "]"}],
                   "\"Severely Symptomatic Population Fraction\"",
                   TooltipStyle->{
                    Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                  
                  Annotation[#, "Severely Symptomatic Population Fraction", 
                   "Tooltip"]& ],
                 "\"Severely Symptomatic Population Fraction\"",
                 
                 TooltipStyle->{
                  Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                   GrayLevel[0.5], FontSize -> 20}],
                
                Annotation[#, "Severely Symptomatic Population Fraction", 
                 "Tooltip"]& ]}], 
              TagBox[
               TooltipBox[
                TagBox[
                 TooltipBox["aincp",
                  "\"Average incubation period\"",
                  
                  TooltipStyle->{
                   Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                    GrayLevel[0.5], FontSize -> 20}],
                 Annotation[#, "Average incubation period", "Tooltip"]& ],
                "\"Average incubation period\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Average incubation period", "Tooltip"]& ]]}], 
            "]"}], 
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HP", "[", "t", "]"}],
                "\"Hospitalized Population\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospitalized Population", "Tooltip"]& ],
              "\"Hospitalized Population\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospitalized Population", "Tooltip"]& ], "<", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"HB", "[", "t", "]"}],
                "\"Hospital Beds\"",
                
                TooltipStyle->{
                 Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                  GrayLevel[0.5], FontSize -> 20}],
               Annotation[#, "Hospital Beds", "Tooltip"]& ],
              "\"Hospital Beds\"",
              
              TooltipStyle->{
               Background -> RGBColor[1, 1, 0], CellFrameColor -> 
                GrayLevel[0.5], FontSize -> 20}],
             Annotation[#, "Hospital Beds", "Tooltip"]& ]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True], ")"}], "-", 
   FractionBox[
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aip",
        "\"Average infectious period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average infectious period", "Tooltip"]& ],
      "\"Average infectious period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795542798916285*^9, 3.795547094485388*^9, 
  3.795557881192458*^9, 3.7955580339994383`*^9},
 CellLabel->"(HP)",
 CellID->796495408,ExpressionUUID->"860c0abc-7071-4ced-8ad3-945436ceb9a4"]
}, Open  ]],

Cell["\<\
Note that although we know that in a given day some hospital beds are going \
to be freed they are not considered in the hospitalization plans for that \
day. Similarly, we know that new medical supplies are coming but we do not \
include them into AHB.\
\>", "Text",
 CellChangeTimes->{{3.795057218204574*^9, 3.795057257377419*^9}, {
  3.7950576554470587`*^9, 3.795057769260702*^9}, {3.795557957062524*^9, 
  3.795558011896863*^9}},
 CellID->1432750505,ExpressionUUID->"05bf61a4-3fcb-402d-95ac-95e93aee918f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Recovered Population", "Subsection",
 CellChangeTimes->{{3.792432904959959*^9, 3.792432913325151*^9}},
 CellID->503603724,ExpressionUUID->"ed925532-19d2-4d96-8c1f-17b18d96460a"],

Cell[CellGroupData[{

Cell["\<\
The stock Recovered Population (RP) is increased by the recovered infected \
people and decreased by mortality cases derived with the typical mortality \
rate.\
\>", "Text",
 CellChangeTimes->{{3.7950176864611464`*^9, 3.795017823952033*^9}, {
   3.795018241646221*^9, 3.79501825521381*^9}, 3.79516998382215*^9},
 CellID->834736441,ExpressionUUID->"95fbc531-5dad-4b80-9d30-cf02adeea16c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["RP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   FractionBox[
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", 
       "Tooltip"]& ]}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox["aip",
        "\"Average infectious period\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Average infectious period", "Tooltip"]& ],
      "\"Average infectious period\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Average infectious period", "Tooltip"]& ]], "-", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"RP", "[", "t", "]"}],
        "\"Recovered Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Recovered Population", "Tooltip"]& ],
      "\"Recovered Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Recovered Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "TP", "]"}],
        "\"Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Population death rate", "Tooltip"]& ],
      "\"Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.7955209428874683`*^9, 3.79552283207892*^9, 
  3.7955259962923803`*^9, 3.795526038699987*^9, 3.79553256526856*^9, 
  3.795540133556961*^9, 3.795540452836811*^9},
 CellLabel->"(RP)",
 CellID->2052181683,ExpressionUUID->"c6531211-15af-476b-b60c-69cb649ad443"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deceased Infected Population", "Subsection",
 CellChangeTimes->{{3.795015491686062*^9, 3.795015498614624*^9}, {
  3.795017874057209*^9, 3.7950178753284683`*^9}},
 CellID->282691714,ExpressionUUID->"8b474ee6-2052-4649-8e68-401f464c1fac"],

Cell[CellGroupData[{

Cell["\<\
The stock Deceased Infected Population (DIP) accumulates the deaths of the \
people who are infected. Note that we utilize the different death rates for \
HP and ISSP.\
\>", "Text",
 CellChangeTimes->{{3.7950178311707897`*^9, 3.795017955610054*^9}, {
  3.7950182366955976`*^9, 3.795018237010264*^9}},
 CellID->965810034,ExpressionUUID->"0ad2dd15-5bb8-493e-b3e2-b7a0c0180168"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["DIP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"HP", "[", "t", "]"}],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ],
      "\"Hospitalized Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "HP", "]"}],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
      "\"Hospitalized Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"INSP", "[", "t", "]"}],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "INSP", "]"}],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population death rate", 
      "Tooltip"]& ]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HP", "[", "t", "]"}],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"ISSP", "[", "t", "]"}],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population", 
        "Tooltip"]& ]}], ")"}], " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"\[Mu]", "[", "ISSP", "]"}],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ],
      "\"Infected Severely Symptomatic Population death rate\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Severely Symptomatic Population death rate", 
      "Tooltip"]& ]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.7955209429217157`*^9, 3.7955228321251497`*^9, 
  3.795525996327709*^9, 3.795526038735182*^9, 3.795532565311884*^9, 
  3.795540133594998*^9, 3.7955404776310053`*^9},
 CellLabel->"(DIP)",
 CellID->1687837412,ExpressionUUID->"536b4922-56c2-4de2-871e-a0db95a07739"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospital Beds", "Subsection",
 CellChangeTimes->{{3.7924329553216743`*^9, 3.792432978237731*^9}, {
  3.795015560402337*^9, 3.795015565205371*^9}},
 CellID->1371890261,ExpressionUUID->"bbc1e304-6a90-41aa-a142-53e1c4f493cb"],

Cell[CellGroupData[{

Cell["\<\
The stock Hospital Beds (HB) can change with a rate that reflects the number \
of hospital beds change rate (nhbcr) per day. Generally speaking, using nhbcr \
we can capture scenarios, like, extending hospitals, building new hospitals, \
recruitment of new medical personnel, loss of medical personnel (due to \
infections.)\
\>", "Text",
 CellChangeTimes->{{3.795017960256741*^9, 3.795018199075117*^9}, {
  3.795018231925222*^9, 3.795018232509716*^9}, {3.795170071371283*^9, 
  3.795170074059346*^9}},
 CellID->1975182435,ExpressionUUID->"14aa692f-10ca-4a7c-a3e2-8e630f78f608"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["HB", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"HB", "[", "t", "]"}],
       "\"Hospital Beds\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospital Beds", "Tooltip"]& ],
     "\"Hospital Beds\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"nhbcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Number of hospital beds change rate (per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Number of hospital beds change rate (per day)", 
       "Tooltip"]& ],
     "\"Number of hospital beds change rate (per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Number of hospital beds change rate (per day)", 
     "Tooltip"]& ]}]}]], "DisplayFormula",
 CellChangeTimes->{3.79502519794875*^9, 3.795025833891605*^9},
 CellLabel->"(HB)",
 CellID->1088969719,ExpressionUUID->"13158e1b-317f-420a-9238-191d277c8a87"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospital Medical Supplies", "Subsection",
 CellChangeTimes->{{3.795257404308092*^9, 3.795257415704412*^9}, {
  3.795257447294034*^9, 3.795257448329671*^9}},
 CellID->1458427499,ExpressionUUID->"0d83a69d-364d-45cf-89ad-ef4b1299f740"],

Cell["\<\
The Hospital Medical Supplies (HMS) are decreased according to the medical \
supplies consumption rate (mscr) of HP and increased by a Medical Supplies \
(MS) delivery term (to be described next.)\
\>", "Text",
 CellChangeTimes->{{3.795558093821093*^9, 3.795558206862734*^9}, {
  3.795558486010749*^9, 3.7955585001886873`*^9}, {3.7955591408757353`*^9, 
  3.7955591856064453`*^9}, {3.795559263639245*^9, 3.795559265708139*^9}},
 CellID->412628835,ExpressionUUID->"8a713671-825a-4e48-8a35-47e7dd66b8c0"],

Cell["\<\
The MS delivery term is build with the following assumptions / postulates: \
\>", "Text",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955590952342377`*^9}, {
  3.79555919091645*^9, 3.795559232068512*^9}, {3.7955592735478163`*^9, 
  3.7955593091115017`*^9}},
 CellID->828133682,ExpressionUUID->"71f06649-2fe6-41d6-b5fa-efd0158fe711"],

Cell["\<\
 Every day the hospital attempts to order MS that correspond to HB multiplied \
by mscr.\
\>", "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.79555931618855*^9}, {3.795559576115971*^9, 
  3.795559576116148*^9}},
 CellID->601277167,ExpressionUUID->"85b8e2c2-0eb6-47be-ab3c-1735b93db5c2"],

Cell[TextData[{
 "The hospital has limited capacity of MS storage, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "[", "HMS", "]"}], TraditionalForm]],ExpressionUUID->
  "28739406-0e2d-461c-aca3-c3ba61eddd2e"],
 "."
}], "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.79555931618855*^9}, {3.795559577046814*^9, 
  3.795559612518949*^9}},
 CellID->1754786634,ExpressionUUID->"f199c9b1-ec20-4973-a467-d003a4465258"],

Cell[TextData[{
 "The MS producer has limited capacity for delivery, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "[", "MDS", "]"}], TraditionalForm]],ExpressionUUID->
  "a69a9c7f-7924-4c37-899c-7b1be97c7e53"],
 "."
}], "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.7955593944356318`*^9}},
 CellID->1306033387,ExpressionUUID->"d34bad95-512c-45b9-8f3b-15615bf22594"],

Cell["\<\
The hospital demand for MS has precedence over the demands for the \
non-hospitalized populations.\
\>", "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.795559434337143*^9}},
 CellID->1072779322,ExpressionUUID->"59b8b9e4-2656-462c-a6ed-cffd4b56593b"],

Cell["\<\
Hence, if the MS producer has less stock of MS than the demand of the \
hospital then MS producer\[CloseCurlyQuote]s whole amount of MS goes to the \
hospital.\
\>", "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.795559348801683*^9}, {3.795559475253771*^9, 
  3.795559530118023*^9}, {3.795559623529941*^9, 3.795559623533687*^9}, {
  3.795607748375429*^9, 3.795607759501176*^9}},
 CellID->2076848289,ExpressionUUID->"901ae09d-6183-43ed-8bea-19e409cdc4d9"],

Cell["\<\
The supplies are delivered with some delay period: the medical supplies \
delivery period (msdp).\
\>", "Item",
 CellChangeTimes->{{3.7955588861836042`*^9, 3.7955591299851294`*^9}, {
  3.7955593147590027`*^9, 3.795559348801683*^9}, {3.795559475253771*^9, 
  3.795559530118023*^9}, {3.795559624287034*^9, 3.7955596986279287`*^9}},
 CellID->389994885,ExpressionUUID->"41d7292e-dd73-40fb-b91e-19feb9ac79bb"],

Cell[CellGroupData[{

Cell["Here is the MS delivery term:", "Text",
 CellChangeTimes->{{3.795561492707038*^9, 3.795561505205473*^9}},
 CellID->523941551,ExpressionUUID->"0d1419c7-201b-4e58-a1be-ba7e32ef6e4d"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Min", "[", 
   RowBox[{
    RowBox[{"MS", "[", "t", "]"}], ",", 
    RowBox[{"\[Kappa]", "[", "MSD", "]"}], ",", 
    RowBox[{
     RowBox[{"HB", "[", "t", "]"}], " ", 
     RowBox[{"mscr", "[", "HP", "]"}]}], ",", 
    RowBox[{
     RowBox[{"\[Kappa]", "[", "HMS", "]"}], "-", 
     RowBox[{"HMS", "[", "t", "]"}]}]}], "]"}], 
  RowBox[{"msdp", "[", "HB", "]"}]]], "DisplayFormula",
 CellChangeTimes->{{3.79556199969177*^9, 3.795562003770822*^9}, {
  3.7955620597221203`*^9, 3.795562062886879*^9}, {3.795616398045906*^9, 
  3.795616404086885*^9}, {3.795616464107374*^9, 3.795616482547504*^9}},
 CellID->1202694957,ExpressionUUID->"a030dc3f-1f1d-4a30-8940-43fa238cc0e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is the corresponding HMS equation:", "Text",
 CellChangeTimes->{{3.795559705512985*^9, 3.795559720880821*^9}},
 CellID->1578056735,ExpressionUUID->"b458fcbc-4527-425e-be5e-65333fb7dc14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["HMS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Min", "[", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"HMS", "[", "t", "]"}],
          "\"Hospital Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
        "\"Hospital Medical Supplies\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ], ",", 
      RowBox[{
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HP", "[", "t", "]"}],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ],
         "\"Hospitalized Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "ISSP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ],
         "\"Medical supplies consumption rate (units per day per person)\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, 
         "Medical supplies consumption rate (units per day per person)", 
         "Tooltip"]& ]}]}], "]"}]}], "+", 
   FractionBox[
    RowBox[{"Min", "[", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"MS", "[", "t", "]"}],
          "\"Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Medical Supplies", "Tooltip"]& ],
        "\"Medical Supplies\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Medical Supplies", "Tooltip"]& ], ",", 
      RowBox[{
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"HB", "[", "t", "]"}],
           "\"Hospital Beds\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospital Beds", "Tooltip"]& ],
         "\"Hospital Beds\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Hospital Beds", "Tooltip"]& ], " ", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"mscr", "[", "ISSP", "]"}],
           "\"Medical supplies consumption rate (units per day per person)\"",
           
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, 
           "Medical supplies consumption rate (units per day per person)", 
           "Tooltip"]& ],
         "\"Medical supplies consumption rate (units per day per person)\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, 
         "Medical supplies consumption rate (units per day per person)", 
         "Tooltip"]& ]}], ",", 
      RowBox[{
       RowBox[{"-", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"HMS", "[", "t", "]"}],
            "\"Hospital Medical Supplies\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ],
          "\"Hospital Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospital Medical Supplies", "Tooltip"]& ]}], "+", 
       TagBox[
        TooltipBox[
         TagBox[
          TooltipBox[
           RowBox[{"\[Kappa]", "[", "HMS", "]"}],
           "\"Capacity to store Hospital Medical Supplies\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          
          Annotation[#, "Capacity to store Hospital Medical Supplies", 
           "Tooltip"]& ],
         "\"Capacity to store Hospital Medical Supplies\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Capacity to store Hospital Medical Supplies", 
         "Tooltip"]& ]}], ",", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Kappa]", "[", "MSD", "]"}],
          "\"Capacity to transport produced Medical Supplies\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Capacity to transport produced Medical Supplies", 
          "Tooltip"]& ],
        "\"Capacity to transport produced Medical Supplies\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Capacity to transport produced Medical Supplies", 
        "Tooltip"]& ]}], "]"}], 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"msdp", "[", "HB", "]"}],
        "\"Medical supplies delivery period (number of days)\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Medical supplies delivery period (number of days)", 
        "Tooltip"]& ],
      "\"Medical supplies delivery period (number of days)\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Medical supplies delivery period (number of days)", 
      "Tooltip"]& ]]}]}]], "DisplayFormula",
 CellChangeTimes->{
  3.7955209429570208`*^9, 3.795522832169839*^9, 3.795525996363226*^9, 
   3.795526038771268*^9, 3.795532565356113*^9, 3.795540133633727*^9, {
   3.7955411513790827`*^9, 3.795541176558571*^9}, 3.79554279895724*^9, 
   3.795547094526565*^9, 3.795557881230196*^9, {3.795558023634534*^9, 
   3.795558034038474*^9}, 3.7955580875025187`*^9, 3.795558401471685*^9},
 CellLabel->"(HMS)",
 CellID->976504695,ExpressionUUID->"3663fb06-a173-4854-ad22-56de7baa92ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Medical Supplies", "Subsection",
 CellChangeTimes->{{3.795257387870854*^9, 3.795257393372752*^9}},
 CellID->1044378491,ExpressionUUID->"feaeee52-9ad3-4f67-90fc-181eb54a813c"],

Cell["\<\
The equation of the Medical Supplies (MS) stock is based on the following \
assumptions / postulates:\
\>", "Text",
 CellChangeTimes->{{3.795563429382001*^9, 3.795563490155335*^9}},
 CellID->1485451306,ExpressionUUID->"8f9d84da-3389-42d4-a515-c9025998b8b0"],

Cell["\<\
The non-hospitalized people go to the MS producer to buy supplies. (I.e. MS \
delivery is to the hospital only.)\
\>", "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.79556356004102*^9}, {
  3.795607809599927*^9, 3.795607822964005*^9}},
 CellID->1482703567,ExpressionUUID->"1bedc568-4b38-4e04-a9f3-525b22fd63f4"],

Cell[TextData[{
 "The MS producer vehicles have certain capacity, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "[", "MSD", "]"}], TraditionalForm]],ExpressionUUID->
  "d4293150-3dc3-4596-95ca-ab895929d4a5"],
 "."
}], "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.795563594094672*^9}, {
  3.795564282328924*^9, 3.795564282329981*^9}, {3.795607839109335*^9, 
  3.795607857089973*^9}},
 CellID->398610781,ExpressionUUID->"46f94934-af3d-4fe4-a616-7a23a04e72f9"],

Cell["\<\
The MS producer has a certain storage capacity (for MS stock.)\
\>", "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.795563594094672*^9}, {
  3.795564282977831*^9, 3.795564315839705*^9}},
 CellID->1449901274,ExpressionUUID->"4ab998fb-e2c3-48c6-8715-5d4eea3b2f9a"],

Cell["\<\
Each of the populations INSP, ISSP, and HP has its own specific medical \
supplies consumption rate (mscr). EP, RP, and TP have the same mscr.\
\>", "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.79556369494154*^9}, {
  3.795563763590469*^9, 3.795563797982285*^9}, {3.79560789432524*^9, 
  3.795607904630165*^9}},
 CellID->993769609,ExpressionUUID->"d65ff4b7-843f-48b1-a441-d1ad9399e6cc"],

Cell["\<\
The hospital has precedence in its MS order. I.e. the demand from the \
hospital is satisfied first, and then the demand of the rest of the \
populations.\
\>", "Item",
 CellChangeTimes->{{3.795563510157613*^9, 3.795563747356545*^9}, {
  3.795563990000916*^9, 3.795564000226679*^9}, {3.795607926174942*^9, 
  3.795607932497357*^9}},
 CellID->1305495744,ExpressionUUID->"15b7d819-6e50-4518-9a4d-4bc3de0d4cdd"],

Cell[CellGroupData[{

Cell["\<\
Here is the MS delivery term described in the previous section:\
\>", "Text",
 CellChangeTimes->{{3.7955640568160973`*^9, 3.79556408433342*^9}},
 CellID->626548009,ExpressionUUID->"2732e2c0-ce5a-4299-9659-b8b64f0313ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dlvr", "=", 
   FractionBox[
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"MS", "[", "t", "]"}], ",", 
      RowBox[{"\[Kappa]", "[", "MSD", "]"}], ",", 
      RowBox[{
       RowBox[{"HB", "[", "t", "]"}], " ", 
       RowBox[{"mscr", "[", "HP", "]"}]}], ",", 
      RowBox[{
       RowBox[{"\[Kappa]", "[", "HMS", "]"}], "-", 
       RowBox[{"HMS", "[", "t", "]"}]}]}], "]"}], 
    RowBox[{"msdp", "[", "HB", "]"}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.795561678683587*^9, 3.795561690880993*^9}, {
  3.795561878266411*^9, 3.795561881334057*^9}, {3.795562078556941*^9, 
  3.795562081021557*^9}, {3.79556494954044*^9, 3.7955649502134027`*^9}},
 CellLabel->"In[26]:=",
 CellID->1280066022,ExpressionUUID->"92543145-bfa0-43ba-a4c8-18fe88e85b49"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Here is the MS formula with the MS delivery term replaced with \
\[OpenCurlyDoubleQuote]Dlvr\[CloseCurlyDoubleQuote]:\
\>", "Text",
 CellChangeTimes->{{3.795564086898384*^9, 3.79556412089655*^9}, {
   3.795564158438341*^9, 3.795564159203266*^9}, 3.795564851447219*^9},
 CellID->578456108,ExpressionUUID->"ffad612d-f4ad-4d71-a1ec-7c1dcd2f4596"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ModelGridTableForm", "[", 
     RowBox[{"modelSEI2HREcon", ",", 
      RowBox[{"\"\<Tooltips\>\"", "\[Rule]", "False"}]}], "]"}], "[", 
    "\"\<Equations\>\"", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{"1", ",", 
    RowBox[{
     RowBox[{"EquationPosition", "[", 
      RowBox[{"modelSEI2HREcon", ",", "MS"}], "]"}], "+", "1"}], ",", "2"}], 
   "\[RightDoubleBracket]"}], "/.", 
  RowBox[{"dlvr", "\[Rule]", "Dlvr"}]}]], "Input",
 CellChangeTimes->{{3.795563916279305*^9, 3.795563952765279*^9}, {
  3.795564163278318*^9, 3.795564164198698*^9}},
 CellLabel->"In[27]:=",
 CellID->453337187,ExpressionUUID->"105e686b-321b-438d-8afa-9b4fb0445d4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "Dlvr"}], "-", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "Dlvr"}], "+", 
      RowBox[{"MS", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"INSP", "[", "t", "]"}], " ", 
       RowBox[{"mscr", "[", "INSP", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"HP", "[", "t", "]"}]}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"mscr", "[", "ISSP", "]"}]}], "+", 
      RowBox[{
       RowBox[{"mscr", "[", "TP", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], "+", 
         RowBox[{"RP", "[", "t", "]"}], "+", 
         RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}], "]"}], "+", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"mspr", "[", "HB", "]"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"MS", "[", "t", "]"}]}], "+", 
      RowBox[{"\[Kappa]", "[", "MS", "]"}]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.8995619558068943`*^9, 3.899561960159134*^9}},
 CellLabel->"Out[27]=",
 CellID->931334631,ExpressionUUID->"9d39d42e-562c-4b74-8939-204674f1e25b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "We can see from that equation that MS is increased by medical supplies \
production rate (mspr) with measuring dimension number of units per day. The \
production is restricted by the storage capacity, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "[", "MS", "]"}], TraditionalForm]],ExpressionUUID->
  "5c4f3482-be76-411b-9c92-0c610ec0040b"],
 ":"
}], "Text",
 CellChangeTimes->{{3.7955641863838043`*^9, 3.795564276802003*^9}, {
  3.795564319350822*^9, 3.7955644869201517`*^9}, {3.795564919770821*^9, 
  3.795564975132174*^9}, {3.79560796962462*^9, 3.795607973695623*^9}},
 CellID->2113606000,ExpressionUUID->"45953ef6-5cea-4362-bb33-6e0024d9deb3"],

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{"mspr", "[", "HB", "]"}], ",", " ", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"MS", "[", "t", "]"}]}], " ", "+", " ", 
    RowBox[{"\[Kappa]", "[", "MS", "]"}]}]}], "]"}]], "DisplayFormula",
 CellChangeTimes->{{3.7955649941452627`*^9, 3.7955650088618927`*^9}},
 CellID->1849036973,ExpressionUUID->"65b5cf8a-f6b0-413d-bdf9-ac3354c269f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
MS is decreased by the MS delivery term and the demand from the \
non-hospitalized populations. Because the hospital has precedence, we use \
this term form in the equation:\
\>", "Text",
 CellChangeTimes->{{3.7955641863838043`*^9, 3.795564276802003*^9}, {
  3.795564319350822*^9, 3.7955644869201517`*^9}, {3.795564919770821*^9, 
  3.795564960003827*^9}, {3.795608008797823*^9, 3.7956080284402723`*^9}},
 CellID->528549474,ExpressionUUID->"dc48796c-b7eb-442e-865c-a6a3b2c81a36"],

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "Dlvr"}], "+", 
    RowBox[{"MS", "[", "t", "]"}]}], ",", "\"\<non-hospital demand\>\""}], 
  "]"}]], "DisplayFormula",
 CellChangeTimes->{{3.795565040935051*^9, 3.795565047853057*^9}},
 CellID->1338645526,ExpressionUUID->"5b1b4d8e-9633-4803-8d4c-9965e941b711"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here is the full MS equation:", "Text",
 CellChangeTimes->{{3.7955654825939083`*^9, 3.795565496003687*^9}},
 CellID->1576669510,ExpressionUUID->"299bef40-d675-4074-85cd-cb534322e5b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"MS", "[", "t", "]"}], "-", 
       FractionBox[
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"MS", "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"HB", "[", "t", "]"}], " ", 
           RowBox[{"mscr", "[", "HP", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HMS", "[", "t", "]"}]}], "+", 
           RowBox[{"\[Kappa]", "[", "HMS", "]"}]}], ",", 
          RowBox[{"\[Kappa]", "[", "MSD", "]"}]}], "]"}], 
        RowBox[{"msdp", "[", "HB", "]"}]]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"INSP", "[", "t", "]"}], " ", 
        RowBox[{"mscr", "[", "INSP", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"HP", "[", "t", "]"}]}], "+", 
          RowBox[{"ISSP", "[", "t", "]"}]}], ")"}], " ", 
        RowBox[{"mscr", "[", "INSP", "]"}]}], "+", 
       RowBox[{
        RowBox[{"mscr", "[", "TP", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EP", "[", "t", "]"}], "+", 
          RowBox[{"RP", "[", "t", "]"}], "+", 
          RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}], "]"}]}], "+", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"mspr", "[", "HB", "]"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"MS", "[", "t", "]"}]}], "+", 
      RowBox[{"\[Kappa]", "[", "MS", "]"}]}]}], "]"}], "-", 
   FractionBox[
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"MS", "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"HB", "[", "t", "]"}], " ", 
       RowBox[{"mscr", "[", "HP", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"HMS", "[", "t", "]"}]}], "+", 
       RowBox[{"\[Kappa]", "[", "HMS", "]"}]}], ",", 
      RowBox[{"\[Kappa]", "[", "MSD", "]"}]}], "]"}], 
    RowBox[{"msdp", "[", "HB", "]"}]]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795565497215063*^9},
 CellLabel->"(MS)",
 CellID->1283734237,ExpressionUUID->"7018ed6f-bbab-439b-9faa-7313d4d7ba50"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Medical Supplies Demand", "Subsection",
 CellChangeTimes->{{3.795257387870854*^9, 3.795257393372752*^9}, {
  3.795524614914877*^9, 3.7955246188294983`*^9}},
 CellID->2100603497,ExpressionUUID->"9de8cc0c-fd38-420b-9630-1e74b6a7ac96"],

Cell[CellGroupData[{

Cell["\<\
The stock Medical Supplies Demand (MSD) simply accumulates the MS demand \
derived from population stocks and their corresponding mscr:\
\>", "Text",
 CellChangeTimes->{{3.795564496955394*^9, 3.795564523549687*^9}, {
  3.795564571609775*^9, 3.795564611188342*^9}},
 CellID->211817399,ExpressionUUID->"7a96038c-73e8-4a99-b63b-a8000f2e7d00"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MSD", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"INSP", "[", "t", "]"}],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "\"Infected Normally Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"mscr", "[", "INSP", "]"}],
        "\"Medical supplies consumption rate (units per day per person)\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, 
        "Medical supplies consumption rate (units per day per person)", 
        "Tooltip"]& ],
      "\"Medical supplies consumption rate (units per day per person)\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, 
      "Medical supplies consumption rate (units per day per person)", 
      "Tooltip"]& ]}], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"ISSP", "[", "t", "]"}],
        "\"Infected Severely Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ],
      "\"Infected Severely Symptomatic Population\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ], 
    " ", 
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"mscr", "[", "ISSP", "]"}],
        "\"Medical supplies consumption rate (units per day per person)\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, 
        "Medical supplies consumption rate (units per day per person)", 
        "Tooltip"]& ],
      "\"Medical supplies consumption rate (units per day per person)\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, 
      "Medical supplies consumption rate (units per day per person)", 
      "Tooltip"]& ]}], "+", 
   RowBox[{
    TagBox[
     TooltipBox[
      TagBox[
       TooltipBox[
        RowBox[{"mscr", "[", "TP", "]"}],
        "\"Medical supplies consumption rate (units per day per person)\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, 
        "Medical supplies consumption rate (units per day per person)", 
        "Tooltip"]& ],
      "\"Medical supplies consumption rate (units per day per person)\"",
      TooltipStyle->{
       Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
        FontSize -> 20}],
     Annotation[#, 
      "Medical supplies consumption rate (units per day per person)", 
      "Tooltip"]& ], " ", 
    RowBox[{"(", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"EP", "[", "t", "]"}],
          "\"Exposed Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Exposed Population", "Tooltip"]& ],
        "\"Exposed Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Exposed Population", "Tooltip"]& ], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"RP", "[", "t", "]"}],
          "\"Recovered Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Recovered Population", "Tooltip"]& ],
        "\"Recovered Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Recovered Population", "Tooltip"]& ], "+", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"SP", "[", "t", "]"}],
          "\"Susceptible Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Susceptible Population", "Tooltip"]& ],
        "\"Susceptible Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Susceptible Population", "Tooltip"]& ]}], 
     ")"}]}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795532565451776*^9, 3.795540133715475*^9, 
  3.795542799039349*^9, 3.795547094607923*^9, 3.7955578813062363`*^9, 
  3.795558034132753*^9, 3.795558401553171*^9, 3.795558851362688*^9, 
  3.795562096085333*^9, 3.7955638439078503`*^9},
 CellLabel->"(MSD)",
 CellID->1634621914,ExpressionUUID->"c0476444-3bc2-4fd0-801f-d96f209f0263"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Money for Hospital Services", "Subsection",
 CellChangeTimes->{{3.792432981646702*^9, 3.7924330142384863`*^9}, 
   3.795015555761284*^9},
 CellID->332212527,ExpressionUUID->"0c285b61-3a82-436a-a5aa-42f8ba35406d"],

Cell[CellGroupData[{

Cell["\<\
The stock Money for Hospital Services (MHS) simply tracks expenses for \
hospitalized people. The parameter hospital services cost rate (hscr) with \
unit money per bed per day simply multiplies HP.\
\>", "Text",
 CellChangeTimes->{{3.795018205173071*^9, 3.795018227627721*^9}, {
  3.795018259984024*^9, 3.795018289098675*^9}, {3.795170109138433*^9, 
  3.795170113460578*^9}, {3.7951702129326973`*^9, 3.79517024661449*^9}, {
  3.795170367644785*^9, 3.795170412735022*^9}},
 CellID->38459089,ExpressionUUID->"6c5cee7e-1066-4867-941c-f04cdc17e2a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MHS", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"HP", "[", "t", "]"}],
       "\"Hospitalized Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospitalized Population", "Tooltip"]& ],
     "\"Hospitalized Population\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"hscr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Hospital services cost rate (per bed per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Hospital services cost rate (per bed per day)", 
       "Tooltip"]& ],
     "\"Hospital services cost rate (per bed per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Hospital services cost rate (per bed per day)", 
     "Tooltip"]& ]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795025197999638*^9, 3.7950258406102943`*^9},
 CellLabel->"(MHS)",
 CellID->2136814723,ExpressionUUID->"cc91c72b-0ab4-4015-beec-03e076866577"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Money from Lost Productivity", "Subsection",
 CellChangeTimes->{{3.795015571168536*^9, 3.795015582744377*^9}},
 CellID->1076020680,ExpressionUUID->"135031df-abc7-4070-b630-3f6ab9b3bc38"],

Cell[CellGroupData[{

Cell["\<\
The stock Money from Lost Productivity (MLP) simply tracks the work \
non-availability of the infected and died from infection people. The \
parameter lost productivity cost rate (lpcr) with unit money per person per \
day multiplies the total count of the infected and dead from infection.\
\>", "Text",
 CellChangeTimes->{{3.795018205173071*^9, 3.795018227627721*^9}, {
  3.795018259984024*^9, 3.795018306109063*^9}, {3.79517011894851*^9, 
  3.7951701991284447`*^9}, {3.795170420869096*^9, 3.795170518576726*^9}},
 CellID->719777373,ExpressionUUID->"fea75b41-fa29-4d9f-8ac4-fed3d59face5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["MLP", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{
   TagBox[
    TooltipBox[
     TagBox[
      TooltipBox[
       RowBox[{"lpcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}],
       "\"Lost productivity cost rate (per person per day)\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Lost productivity cost rate (per person per day)", 
       "Tooltip"]& ],
     "\"Lost productivity cost rate (per person per day)\"",
     TooltipStyle->{
      Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
       FontSize -> 20}],
    Annotation[#, "Lost productivity cost rate (per person per day)", 
     "Tooltip"]& ], " ", 
   RowBox[{"(", 
    RowBox[{
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"INSP", "[", "t", "]"}],
         "\"Infected Normally Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Normally Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Normally Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Normally Symptomatic Population", "Tooltip"]& ],
      "+", 
     TagBox[
      TooltipBox[
       TagBox[
        TooltipBox[
         RowBox[{"ISSP", "[", "t", "]"}],
         "\"Infected Severely Symptomatic Population\"",
         TooltipStyle->{
          Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
           FontSize -> 20}],
        Annotation[#, "Infected Severely Symptomatic Population", 
         "Tooltip"]& ],
       "\"Infected Severely Symptomatic Population\"",
       TooltipStyle->{
        Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
         FontSize -> 20}],
      Annotation[#, "Infected Severely Symptomatic Population", "Tooltip"]& ],
      "+", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"HP", "[", "t", "]"}],
          "\"Hospitalized Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population", "Tooltip"]& ],
        "\"Hospitalized Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population", "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "HP", "]"}],
          "\"Hospitalized Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ],
        "\"Hospitalized Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Hospitalized Population death rate", "Tooltip"]& ]}], 
     "+", 
     RowBox[{
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"INSP", "[", "t", "]"}],
          "\"Infected Normally Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population", 
          "Tooltip"]& ],
        "\"Infected Normally Symptomatic Population\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population", 
        "Tooltip"]& ], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "INSP", "]"}],
          "\"Infected Normally Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Normally Symptomatic Population death rate", 
          "Tooltip"]& ],
        "\"Infected Normally Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Normally Symptomatic Population death rate", 
        "Tooltip"]& ]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         TagBox[
          TooltipBox[
           TagBox[
            TooltipBox[
             RowBox[{"HP", "[", "t", "]"}],
             "\"Hospitalized Population\"",
             
             TooltipStyle->{
              Background -> RGBColor[1, 1, 0], CellFrameColor -> 
               GrayLevel[0.5], FontSize -> 20}],
            Annotation[#, "Hospitalized Population", "Tooltip"]& ],
           "\"Hospitalized Population\"",
           
           TooltipStyle->{
            Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5],
              FontSize -> 20}],
          Annotation[#, "Hospitalized Population", "Tooltip"]& ]}], "+", 
        TagBox[
         TooltipBox[
          TagBox[
           TooltipBox[
            RowBox[{"ISSP", "[", "t", "]"}],
            "\"Infected Severely Symptomatic Population\"",
            
            TooltipStyle->{
             Background -> RGBColor[1, 1, 0], CellFrameColor -> 
              GrayLevel[0.5], FontSize -> 20}],
           
           Annotation[#, "Infected Severely Symptomatic Population", 
            "Tooltip"]& ],
          "\"Infected Severely Symptomatic Population\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population", 
          "Tooltip"]& ]}], ")"}], " ", 
      TagBox[
       TooltipBox[
        TagBox[
         TooltipBox[
          RowBox[{"\[Mu]", "[", "ISSP", "]"}],
          "\"Infected Severely Symptomatic Population death rate\"",
          
          TooltipStyle->{
           Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
            FontSize -> 20}],
         Annotation[#, "Infected Severely Symptomatic Population death rate", 
          "Tooltip"]& ],
        "\"Infected Severely Symptomatic Population death rate\"",
        TooltipStyle->{
         Background -> RGBColor[1, 1, 0], CellFrameColor -> GrayLevel[0.5], 
          FontSize -> 20}],
       Annotation[#, "Infected Severely Symptomatic Population death rate", 
        "Tooltip"]& ]}]}], ")"}]}]}]], "DisplayFormula",
 CellChangeTimes->{3.795520943030692*^9, 3.795522832292738*^9, 
  3.795525996473214*^9, 3.795526038880262*^9, 3.795532565494246*^9, 
  3.795540133754086*^9, 3.795542799084373*^9, 3.795547094646611*^9, 
  3.795557881343405*^9, 3.7955580341857347`*^9, 3.7955584015916443`*^9, 
  3.79555885140587*^9, 3.7955620961336107`*^9, 3.795563843946082*^9},
 CellLabel->"(MLP)",
 CellID->522924460,ExpressionUUID->"7edce198-b89c-41be-b825-c5bcf7f4e686"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quarantine scenarios", "Section",
 CellChangeTimes->{{3.79510289504558*^9, 3.7951029011540537`*^9}},
 CellID->1288315696,ExpressionUUID->"9e60b82f-9cd2-4bfb-a159-009cd35143c3"],

Cell[TextData[{
 "In order to model quarantine scenarios we use piecewise constant functions \
for the contact rates ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "ISSP", "]"}], TraditionalForm]],ExpressionUUID->
  "c56c4f1d-c2fa-4522-be7b-d1cfbf56b436"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "INSP", "]"}], TraditionalForm]],ExpressionUUID->
  "54db8db6-4d59-4162-bdec-25dd53e77dbd"],
 ". "
}], "Text",
 CellChangeTimes->{{3.795102903516485*^9, 3.795102972717986*^9}, {
  3.795103288522572*^9, 3.7951033014265537`*^9}, {3.795170539873241*^9, 
  3.795170541473916*^9}},
 CellID->1791773618,ExpressionUUID->"158a4789-7bb5-44f9-a59b-91cd7650758a"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Other functions can be used, like, functions derived through some \
statistical fitting. "
}], "Text",
 CellChangeTimes->{{3.7951705498191*^9, 3.795170631483403*^9}},
 CellID->176015845,ExpressionUUID->"be9f440d-c107-4187-a089-9fcb0f1c21e7"],

Cell[CellGroupData[{

Cell["Here is an example plot :", "Text",
 CellChangeTimes->{{3.795102984778503*^9, 3.7951029949711647`*^9}, {
  3.7951037701657047`*^9, 3.795103781753631*^9}},
 CellID->1213324996,ExpressionUUID->"39fb7d73-9747-41a0-9b7a-555671ad2bf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"func", "=", 
     RowBox[{"\[Beta]", "*", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"qcrf", ",", 
            RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
             RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
       "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Legended", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Beta]", "=", "0.56"}], ",", 
         RowBox[{"qsd", "=", "60"}], ",", 
         RowBox[{"ql", "=", 
          RowBox[{"8", "*", "7"}]}], ",", 
         RowBox[{"qcrf", "=", "0.25"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"func", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "365"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "func"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795103006720628*^9, 3.795103120962385*^9}, {
  3.795103209189027*^9, 3.795103212385117*^9}, {3.7951037282157497`*^9, 
  3.795103756048126*^9}, {3.795103798857175*^9, 3.795103865045116*^9}, {
  3.795112878698709*^9, 3.795112922961647*^9}, {3.795112958076275*^9, 
  3.795112966874749*^9}},
 CellLabel->"In[28]:=",
 CellID->1995979507,ExpressionUUID->"1a04a998-5244-4183-9331-5e18558014fa"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxd0znOHFUUBeALkUMHBAQIFQghhBBq5pn/gZnHtpnnh8EMBtvNGN+EvJfw
ltAh4WUHvYRHDEEvASF+C/VXSemro6OjG9RtF69duHRjRFy9IeLf93/P4eTv
87/f+ttff56cfmjHPoPP4pvwzfgWvODb8R34TnwXvhvfg+/FK3wfvh8/gB/E
D+GH8SP4UfwYfhw/gZ/ET+Gn8Qlux04cz5DjeJYcxzlyHM+R43ieHMcL5Dhe
JMfxEjmOl8lxvEKO41VyHK+R43idHMcb5Nf9x2n+5rETx/rYDScuHOfp48SF
4wJ9nLhwvEUfJy4cb9PHiQvHO/Rx4sLxLn2cuHC8Rx8nLhzv08eJC8cH9HHi
wvEhfZy4cHxEHycuHB/Tx4kLxyf0cV736f9ZOD49dsOJC8dn9HHiwtGPveCG
O048cOGJ43P2ccMdJx648MRxkX3ccMeJBy48cXzBPm6448QDF544vmQfN9xx
4oELTxyX2McNd5x44MITx1fs44Y7Tjxw4Ynja/Zxwx0nHrjwxPEN+7jhjhMP
XHji+JZ93HDHiQcuPHFcZh833HHigQtPHN+xjxvuOPHAhSeO79nHDXeceODC
E8cV9nHDHSceuPDEcZV93HDHiQcuPHFcYx833HHigQtPHJtjn8ULXuGG17jj
DU68xQPvcOE9nviA4wfuxwte4YbXuOMNTrzFA+9w4T2e+IDjR+7HC17hhte4
4w1OvMUD73DhPZ74gOMn7scLXuGG17jjDU68xQPvcOE9nviA42fuxwte4YbX
uOMNTrzFA+9w4T2e+IDjF+7HC17hhte44w1OvMUD73DhPZ74gONX7scLXuGG
17jjDU68xQPvcOE9nv/7H0X8Dfg=
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1:eJxd0znOHFUUBeALkUMHBAQIFQghhBBq5pn/gZnHtpnnh8EMBtvNGN+EvJfw
ltAh4WUHvYRHDEEvASF+C/VXSemro6OjG9RtF69duHRjRFy9IeLf93/P4eTv
87/f+ttff56cfmjHPoPP4pvwzfgWvODb8R34TnwXvhvfg+/FK3wfvh8/gB/E
D+GH8SP4UfwYfhw/gZ/ET+Gn8Qlux04cz5DjeJYcxzlyHM+R43ieHMcL5Dhe
JMfxEjmOl8lxvEKO41VyHK+R43idHMcb5Nf9x2n+5rETx/rYDScuHOfp48SF
4wJ9nLhwvEUfJy4cb9PHiQvHO/Rx4sLxLn2cuHC8Rx8nLhzv08eJC8cH9HHi
wvEhfZy4cHxEHycuHB/Tx4kLxyf0cV736f9ZOD49dsOJC8dn9HHiwtGPveCG
O048cOGJ43P2ccMdJx648MRxkX3ccMeJBy48cXzBPm6448QDF544vmQfN9xx
4oELTxyX2McNd5x44MITx1fs44Y7Tjxw4Ynja/Zxwx0nHrjwxPEN+7jhjhMP
XHji+JZ93HDHiQcuPHFcZh833HHigQtPHN+xjxvuOPHAhSeO79nHDXeceODC
E8cV9nHDHSceuPDEcZV93HDHiQcuPHFcYx833HHigQtPHJtjn8ULXuGG17jj
DU68xQPvcOE9nviA4wfuxwte4YbXuOMNTrzFA+9w4T2e+IDjR+7HC17hhte4
4w1OvMUD73DhPZ74gOMn7scLXuGG17jjDU68xQPvcOE9nviA42fuxwte4YbX
uOMNTrzFA+9w4T2e+IDjF+7HC17hhte44w1OvMUD73DhPZ74gONX7scLXuGG
17jjDU68xQPvcOE9nv/7H0X8Dfg=
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PlotRange" -> {{0., 366.}, {0, 0.56}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[1, 90]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{0., 366.}, {0, 0.56}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 90]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJxd0znOHFUUBeALkUMHBAQIFQghhBBq5pn/gZnHtpnnh8EMBtvNGN+EvJfw
ltAh4WUHvYRHDEEvASF+C/VXSemro6OjG9RtF69duHRjRFy9IeLf93/P4eTv
87/f+ttff56cfmjHPoPP4pvwzfgWvODb8R34TnwXvhvfg+/FK3wfvh8/gB/E
D+GH8SP4UfwYfhw/gZ/ET+Gn8Qlux04cz5DjeJYcxzlyHM+R43ieHMcL5Dhe
JMfxEjmOl8lxvEKO41VyHK+R43idHMcb5Nf9x2n+5rETx/rYDScuHOfp48SF
4wJ9nLhwvEUfJy4cb9PHiQvHO/Rx4sLxLn2cuHC8Rx8nLhzv08eJC8cH9HHi
wvEhfZy4cHxEHycuHB/Tx4kLxyf0cV736f9ZOD49dsOJC8dn9HHiwtGPveCG
O048cOGJ43P2ccMdJx648MRxkX3ccMeJBy48cXzBPm6448QDF544vmQfN9xx
4oELTxyX2McNd5x44MITx1fs44Y7Tjxw4Ynja/Zxwx0nHrjwxPEN+7jhjhMP
XHji+JZ93HDHiQcuPHFcZh833HHigQtPHN+xjxvuOPHAhSeO79nHDXeceODC
E8cV9nHDHSceuPDEcZV93HDHiQcuPHFcYx833HHigQtPHJtjn8ULXuGG17jj
DU68xQPvcOE9nviA4wfuxwte4YbXuOMNTrzFA+9w4T2e+IDjR+7HC17hhte4
4w1OvMUD73DhPZ74gOMn7scLXuGG17jjDU68xQPvcOE9nviA42fuxwte4YbX
uOMNTrzFA+9w4T2e+IDjF+7HC17hhte44w1OvMUD73DhPZ74gONX7scLXuGG
17jjDU68xQPvcOE9nv/7H0X8Dfg=
            "]]}, "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 366.}, {0, 0.56}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
          "Axes" -> {True, True}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 366.}, {0, 0.56}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     RowBox[{"\[Beta]", " ", 
       RowBox[{"(", 
         TagBox[
          GridBox[{{"\[Piecewise]", 
             GridBox[{{"1", 
                RowBox[{"t", "<", "qsd"}]}, {"qcrf", 
                RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]}, {"1", 
                TagBox["True", "PiecewiseDefault", AutoDelete -> True]}}, 
              ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, ColumnWidths -> 
              Automatic, AllowedDimensions -> {2, Automatic}, Selectable -> 
              True, Editable -> True]}}, ColumnAlignments -> {Left}, 
           ColumnSpacings -> 0.5, ColumnWidths -> Automatic], "Piecewise", 
          SyntaxForm -> Equal, SelectWithContents -> True, StripWrapperBoxes -> 
          True, Selectable -> False, Editable -> False, DeleteWithContents -> 
          True], ")"}]}], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.899561960423422*^9},
 CellLabel->"Out[28]=",
 CellID->2080323881,ExpressionUUID->"e1a4e25c-de1d-4f17-b34c-26325c0ab5cc"]
}, Open  ]]
}, Open  ]],

Cell["\<\
To model quarantine with a piecewise constant function we use the following  \
parameters:\
\>", "Text",
 CellChangeTimes->{{3.79510313339395*^9, 3.795103170855811*^9}, {
  3.795103251791792*^9, 3.795103285405793*^9}, {3.7951706507446632`*^9, 
  3.795170650893552*^9}},
 CellID->585524362,ExpressionUUID->"467ac358-b4f6-4cd7-bc26-17acfaf33430"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox["qsd", TraditionalForm]],ExpressionUUID->
  "ec862d9d-0d25-4ace-a411-20abdcddf1ee"],
 " for quarantine's start"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.7951031809517927`*^9}},
 CellID->1137881580,ExpressionUUID->"cbe03e53-fa9b-4df2-ba4f-21d70a95a063"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["ql", TraditionalForm]],ExpressionUUID->
  "c9eff96e-8a1a-4b7a-913c-758e02db52d3"],
 " for quarantines duration"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.79510319899936*^9}},
 CellID->1033838525,ExpressionUUID->"f68c1ebe-2da8-42e8-90a9-4c0e86b1cd2d"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["qcrf", TraditionalForm]],ExpressionUUID->
  "5dcd36a0-e8bb-4c3d-b0c7-580582cc64bc"],
 " for the effect on the quarantine on the contact rate"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.795103239472946*^9}},
 CellID->433901798,ExpressionUUID->"83320db3-7e99-491e-a43f-743ce16a4fc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Medical supplies scenarios", "Section",
 CellChangeTimes->{{3.7952579890258503`*^9, 3.7952580150358047`*^9}, {
  3.795268209657048*^9, 3.795268211828533*^9}},
 CellID->1880537421,ExpressionUUID->"f98474ac-54ca-4016-a14d-2e083b6af136"],

Cell["We consider three main scenarios for the medical supplies:", "Text",
 CellChangeTimes->{{3.79526677421301*^9, 3.795266798266367*^9}},
 CellID->1675601848,ExpressionUUID->"3e19d562-8000-48cc-9030-71c2a70fff96"],

Cell["\<\
Constant production rate and consistent delivery (constant delivery period)\
\>", "ItemNumbered",
 CellChangeTimes->{{3.795266803643586*^9, 3.7952668326281357`*^9}, {
  3.7952668726168327`*^9, 3.795266881482478*^9}},
 CellID->1887196225,ExpressionUUID->"f5227400-6187-4c0a-8984-bb96a289d694"],

Cell["Constant production rate and disrupted delivery", "ItemNumbered",
 CellChangeTimes->{{3.795266803643586*^9, 3.7952668848287153`*^9}},
 CellID->1920971032,ExpressionUUID->"035e977f-7402-436a-ac36-9c642fed9a54"],

Cell["Disrupted production and disrupted delivery", "ItemNumbered",
 CellChangeTimes->{{3.795266803643586*^9, 3.7952669032184896`*^9}},
 CellID->490985826,ExpressionUUID->"30ef86d6-313e-4a1d-b556-504350592f19"],

Cell["\<\
The disruptions are simulated with simple pulse functions -- we want to see \
how the system being modeled reacts to singular, elementary disruption.\
\>", "Text",
 CellChangeTimes->{{3.795266911802944*^9, 3.795266972700158*^9}},
 CellID->1366605808,ExpressionUUID->"85c46cde-0497-4f77-a4bd-25b43466042d"],

Cell[CellGroupData[{

Cell["\<\
Here is an example plot of a disruption of delivery period plot :\
\>", "Text",
 CellChangeTimes->{{3.795102984778503*^9, 3.7951029949711647`*^9}, {
  3.7951037701657047`*^9, 3.795103781753631*^9}, {3.795267830953454*^9, 
  3.795267836061697*^9}, {3.7952679463916073`*^9, 3.795267954356269*^9}, {
  3.7952681660748167`*^9, 3.795268200015606*^9}},
 CellID->1206210391,ExpressionUUID->"84cc4044-bbe3-45a0-bfa3-14490a40a61f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"func", "=", 
     RowBox[{"dbp", "*", 
      RowBox[{"Piecewise", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"t", "<", "dds"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"dsf", ",", 
            RowBox[{"dds", "\[LessEqual]", "t", "\[LessEqual]", 
             RowBox[{"dds", "+", "ddl"}]}]}], "}"}]}], "}"}], ",", "1"}], 
       "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Legended", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dbp", "=", "1"}], ",", 
         RowBox[{"dds", "=", "70"}], ",", 
         RowBox[{"ddl", "=", "7"}], ",", 
         RowBox[{"dsf", "=", "1.8"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListLinePlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"func", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "365"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "func"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795103006720628*^9, 3.795103120962385*^9}, {
  3.795103209189027*^9, 3.795103212385117*^9}, {3.7951037282157497`*^9, 
  3.795103756048126*^9}, {3.795103798857175*^9, 3.795103865045116*^9}, {
  3.795112878698709*^9, 3.795112922961647*^9}, {3.795112958076275*^9, 
  3.795112966874749*^9}, {3.7952678480231533`*^9, 3.795267986567069*^9}, {
  3.7952681008469267`*^9, 3.795268112828506*^9}, {3.795595832408463*^9, 
  3.795595843713099*^9}, {3.795596026013885*^9, 3.795596044843845*^9}},
 CellLabel->"In[29]:=",
 CellID->532413857,ExpressionUUID->"031e6b61-33ad-4de0-8afd-e21d20dea8f6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, 
     InterpretationBox[{
       TagBox[{{{}, {}, 
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxdzkcOnEUQBeCCFctZsGDBYkAIIYTQkDNuMDmObXIwjQPBOAxxXUeYI/QR
5gh1AJDmCH2EOQALZIGE/q83pU9PT6/vu3Tr/NU7I+LmHRG377/vdGZ5oy19
F17hu/E9+F68xvfjB/CD+CH8MH4EP4o3+DH8OH4CP4mfwk/jZ/Cz+Dn8PH4B
v4hfwi/jM7gtnTheIcfxKjmOs+Q4XiPH8To5jjfIcbxJjuMtchxvk+N4hxzH
u+Q43iPH8T45jg/IcXxIjmO7dMOJC8c5+jhxnWt//Xn7/f1f//zSDScuHBfo
48R1gf9/xP9x4sLxMX2cuHB8Qh8nLhyf0seJC8dn9HHiwvE5fZy4cHxBHycu
HF/Sx4kLx1f0ceLC8TV9nLhwXKSPExeOb+jjxIWjL73GDXeceODCE8e37OOG
O048cOGJ4xL7uOGOEw9ceOK4zD5uuOPEAxeeOK6wjxvuOPHAhSeOq+zjhjtO
PHDhieM79nHDHSceuPDE8T37uOGOEw9ceOL4gX3ccMeJBy48cfzIPm6448QD
F544rrGPG+448cCFJ46f2McNd5x44MITx3X2ccMdJx648MRxg33ccMeJBy48
cdxkHzfcceKBC08ct9jHDXeceODCE8du6RVe4w1ueIs73uHEezzwARc+4olP
OH5eeoXXeIMb3uKOdzjxHg98wIWPeOITjl+WXuE13uCGt7jjHU68xwMfcOEj
nviE49elV3iNN7jhLe54hxPv8cAHXPiIJz7h+G3pFV7jDW54izve4cR7PPAB
Fz7iiU84fl96hdd4gxve4o53OPEeD3zAhY944hOOP5Ze4TXe4Ia3uOMdTrzH
Ax9w4SOe//sffFZLnQ==
             "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}}, {
        "WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1:eJxdzkcOnEUQBeCCFctZsGDBYkAIIYTQkDNuMDmObXIwjQPBOAxxXUeYI/QR
5gh1AJDmCH2EOQALZIGE/q83pU9PT6/vu3Tr/NU7I+LmHRG377/vdGZ5oy19
F17hu/E9+F68xvfjB/CD+CH8MH4EP4o3+DH8OH4CP4mfwk/jZ/Cz+Dn8PH4B
v4hfwi/jM7gtnTheIcfxKjmOs+Q4XiPH8To5jjfIcbxJjuMtchxvk+N4hxzH
u+Q43iPH8T45jg/IcXxIjmO7dMOJC8c5+jhxnWt//Xn7/f1f//zSDScuHBfo
48R1gf9/xP9x4sLxMX2cuHB8Qh8nLhyf0seJC8dn9HHiwvE5fZy4cHxBHycu
HF/Sx4kLx1f0ceLC8TV9nLhwXKSPExeOb+jjxIWjL73GDXeceODCE8e37OOG
O048cOGJ4xL7uOGOEw9ceOK4zD5uuOPEAxeeOK6wjxvuOPHAhSeOq+zjhjtO
PHDhieM79nHDHSceuPDE8T37uOGOEw9ceOL4gX3ccMeJBy48cfzIPm6448QD
F544rrGPG+448cCFJ46f2McNd5x44MITx3X2ccMdJx648MRxg33ccMeJBy48
cdxkHzfcceKBC08ct9jHDXeceODCE8du6RVe4w1ueIs73uHEezzwARc+4olP
OH5eeoXXeIMb3uKOdzjxHg98wIWPeOITjl+WXuE13uCGt7jjHU68xwMfcOEj
nviE49elV3iNN7jhLe54hxPv8cAHXPiIJz7h+G3pFV7jDW54izve4cR7PPAB
Fz7iiU84fl96hdd4gxve4o53OPEeD3zAhY944hOOP5Ze4TXe4Ia3uOMdTrzH
Ax9w4SOe//sffFZLnQ==
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PlotRange" -> {{0., 366.}, {0.9555555555555579, 1.8}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0., 0.9555555555555579}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[1, 90]], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{0., 366.}, {0.9555555555555579, 1.8}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0., 0.9555555555555579}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 90]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 90]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJxdzkcOnEUQBeCCFctZsGDBYkAIIYTQkDNuMDmObXIwjQPBOAxxXUeYI/QR
5gh1AJDmCH2EOQALZIGE/q83pU9PT6/vu3Tr/NU7I+LmHRG377/vdGZ5oy19
F17hu/E9+F68xvfjB/CD+CH8MH4EP4o3+DH8OH4CP4mfwk/jZ/Cz+Dn8PH4B
v4hfwi/jM7gtnTheIcfxKjmOs+Q4XiPH8To5jjfIcbxJjuMtchxvk+N4hxzH
u+Q43iPH8T45jg/IcXxIjmO7dMOJC8c5+jhxnWt//Xn7/f1f//zSDScuHBfo
48R1gf9/xP9x4sLxMX2cuHB8Qh8nLhyf0seJC8dn9HHiwvE5fZy4cHxBHycu
HF/Sx4kLx1f0ceLC8TV9nLhwXKSPExeOb+jjxIWjL73GDXeceODCE8e37OOG
O048cOGJ4xL7uOGOEw9ceOK4zD5uuOPEAxeeOK6wjxvuOPHAhSeOq+zjhjtO
PHDhieM79nHDHSceuPDE8T37uOGOEw9ceOL4gX3ccMeJBy48cfzIPm6448QD
F544rrGPG+448cCFJ46f2McNd5x44MITx3X2ccMdJx648MRxg33ccMeJBy48
cdxkHzfcceKBC08ct9jHDXeceODCE8du6RVe4w1ueIs73uHEezzwARc+4olP
OH5eeoXXeIMb3uKOdzjxHg98wIWPeOITjl+WXuE13uCGt7jjHU68xwMfcOEj
nviE49elV3iNN7jhLe54hxPv8cAHXPiIJz7h+G3pFV7jDW54izve4cR7PPAB
Fz7iiU84fl96hdd4gxve4o53OPEeD3zAhY944hOOP5Ze4TXe4Ia3uOMdTrzH
Ax9w4SOe//sffFZLnQ==
            "]]}, "Charting`Private`Tag#1"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0., 366.}, {0.9555555555555579, 1.8}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {0., 0.9555555555555579}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0., 0.9555555555555579}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 366.}, {0.9555555555555579, 1.8}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     RowBox[{"dbp", " ", 
       RowBox[{"(", 
         TagBox[
          GridBox[{{"\[Piecewise]", 
             GridBox[{{"1", 
                RowBox[{"t", "<", "dds"}]}, {"dsf", 
                RowBox[{"dds", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ddl", "+", "dds"}]}]}, {"1", 
                TagBox["True", "PiecewiseDefault", AutoDelete -> True]}}, 
              ColumnAlignments -> {Left}, ColumnSpacings -> 1.2, ColumnWidths -> 
              Automatic, AllowedDimensions -> {2, Automatic}, Selectable -> 
              True, Editable -> True]}}, ColumnAlignments -> {Left}, 
           ColumnSpacings -> 0.5, ColumnWidths -> Automatic], "Piecewise", 
          SyntaxForm -> Equal, SelectWithContents -> True, StripWrapperBoxes -> 
          True, Selectable -> False, Editable -> False, DeleteWithContents -> 
          True], ")"}]}], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.899561960469737*^9},
 CellLabel->"Out[29]=",
 CellID->822211160,ExpressionUUID->"03dfed31-74b3-4484-bc01-f977f7b11386"]
}, Open  ]]
}, Open  ]],

Cell["\<\
To model disruption of delivery with a piecewise constant function we use the \
following  parameters:\
\>", "Text",
 CellChangeTimes->{{3.79510313339395*^9, 3.795103170855811*^9}, {
  3.795103251791792*^9, 3.795103285405793*^9}, {3.7951706507446632`*^9, 
  3.795170650893552*^9}, {3.795267997433805*^9, 3.795268005692079*^9}},
 CellID->1862821197,ExpressionUUID->"139c84d9-f8fe-4ed1-8079-e7b28bfa8ef5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["dbp", TraditionalForm]],ExpressionUUID->
  "6150f708-e4c8-4b8f-ae08-c3cbf7778b71"],
 " for the delivery base period "
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.7951031809517927`*^9}, {
  3.795268010687355*^9, 3.79526802298402*^9}, {3.795268087460291*^9, 
  3.7952681309068327`*^9}, {3.795595981470626*^9, 3.795595988872958*^9}},
 CellID->271768366,ExpressionUUID->"90b0db47-e196-4588-ba03-cdb332c25875"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["dds", TraditionalForm]],ExpressionUUID->
  "00f00c89-bc55-4aee-8e8f-f16d596d0047"],
 " for delivery disruption start"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.7951031809517927`*^9}, {
  3.795268010687355*^9, 3.79526802298402*^9}, {3.795595991731496*^9, 
  3.795595996310316*^9}},
 CellID->2060693840,ExpressionUUID->"a6182589-68ec-4b3b-b840-945d66877fc7"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["ddl", TraditionalForm]],ExpressionUUID->
  "f44f3b5d-71cb-4e33-85a4-9bb6995fdfdb"],
 " for delivery disruption duration"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.79510319899936*^9}, {
  3.795268025132593*^9, 3.79526803139916*^9}, {3.7955959984142227`*^9, 
  3.7955960023290377`*^9}},
 CellID->1612593711,ExpressionUUID->"d7d380ba-243b-4e5a-b061-ad303cfcbe08"],

Cell[TextData[{
 Cell[BoxData[
  FormBox["dsf", TraditionalForm]],ExpressionUUID->
  "130cadef-95fe-4c7f-8a65-85bbfff6c7e7"],
 " for how much slower or faster the delivery period becomes"
}], "Item",
 CellChangeTimes->{{3.79510313339395*^9, 3.795103239472946*^9}, {
  3.795268036652493*^9, 3.795268085727466*^9}, {3.795268134690611*^9, 
  3.795268151337214*^9}, {3.795596016167753*^9, 3.7955960177197113`*^9}},
 CellID->1618875637,ExpressionUUID->"e3714765-a9ab-4e13-8eac-1aa7e8be9e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters and actual simulation equations code", "Section",
 CellChangeTimes->{{3.7927811232134533`*^9, 3.79278112749964*^9}, {
  3.7927817799333563`*^9, 3.792781784691574*^9}, {3.792782250686778*^9, 
  3.792782260451419*^9}, {3.7927824681435013`*^9, 3.792782468411478*^9}, {
  3.792783085731715*^9, 3.792783104744426*^9}},
 CellID->1972507216,ExpressionUUID->"bfaa2dad-c9c4-4697-b269-9af2daf2f61d"],

Cell[CellGroupData[{

Cell["\<\
Here are the parameters we want to experiment with (or do calibration with):\
\>", "Text",
 CellChangeTimes->{{3.792782885557115*^9, 3.792782913850957*^9}},
 CellID->1223720573,ExpressionUUID->"ec66026c-ce7d-424f-81bb-903aa9a07681"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsFocusParams", "=", 
   RowBox[{"{", 
    RowBox[{"aincp", ",", "aip", ",", 
     RowBox[{"sspf", "[", "SP", "]"}], ",", 
     RowBox[{"\[Beta]", "[", "HP", "]"}], ",", "qsd", ",", "ql", ",", "qcrf", 
     ",", 
     RowBox[{"nhbcr", "[", 
      RowBox[{"ISSP", ",", "INSP"}], "]"}], ",", 
     RowBox[{"nhbr", "[", "TP", "]"}], ",", 
     RowBox[{"mspr", "[", "HB", "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7863148338718843`*^9, 3.7863148644238167`*^9}, {
   3.786314969410964*^9, 3.786314969770688*^9}, {3.786315318877136*^9, 
   3.786315423456758*^9}, {3.786315466907583*^9, 3.786315467039927*^9}, {
   3.786315534473729*^9, 3.786315535036262*^9}, 3.7863155993404713`*^9, 
   3.7863174496926823`*^9, {3.786317496751482*^9, 3.786317565432353*^9}, {
   3.7863177467407846`*^9, 3.786317747077957*^9}, 3.7863179750983877`*^9, {
   3.786318053354103*^9, 3.78631805379137*^9}, {3.7863180874206123`*^9, 
   3.7863180878904448`*^9}, {3.786318193576859*^9, 3.78631819420512*^9}, {
   3.786318225683996*^9, 3.7863182264702682`*^9}, {3.786318451093602*^9, 
   3.786318464796071*^9}, 3.7863185848337793`*^9, {3.786318762276565*^9, 
   3.786318787991737*^9}, {3.786318877363761*^9, 3.7863189048831797`*^9}, {
   3.7863191345789337`*^9, 3.786319179396864*^9}, {3.7863192276959763`*^9, 
   3.786319243996009*^9}, 3.786319882705675*^9, {3.7863204115173597`*^9, 
   3.786320430150361*^9}, {3.786320824602812*^9, 3.786320832250454*^9}, 
   3.786320911094233*^9, {3.786321002131366*^9, 3.786321057592033*^9}, {
   3.786322419080089*^9, 3.786322428376965*^9}, {3.786548989402964*^9, 
   3.786548990706039*^9}, {3.786549162937529*^9, 3.786549163565218*^9}, {
   3.786549287240192*^9, 3.7865492939884253`*^9}, {3.7867549383743258`*^9, 
   3.7867549702797527`*^9}, {3.78681085193745*^9, 3.7868108618553247`*^9}, {
   3.7870672422451077`*^9, 3.787067246810301*^9}, {3.787067293377285*^9, 
   3.787067293937261*^9}, 3.787067362210042*^9, {3.78706807533466*^9, 
   3.7870680757391663`*^9}, {3.7870681214696903`*^9, 3.787068127587439*^9}, {
   3.787501433289083*^9, 3.787501434283085*^9}, {3.7879332682485933`*^9, 
   3.787933290318729*^9}, {3.788011564525116*^9, 3.788011598218856*^9}, {
   3.792338815009306*^9, 3.7923388191018*^9}, {3.792341071071682*^9, 
   3.7923410713251257`*^9}, {3.7923466525491962`*^9, 3.7923466693789043`*^9}, 
   3.792432616989259*^9, 3.7924326928489313`*^9, {3.792443472165268*^9, 
   3.7924434725022078`*^9}, {3.792451530856949*^9, 3.792451539720593*^9}, 
   3.792518559606106*^9, {3.79326158407848*^9, 3.793261592514369*^9}, {
   3.793262125671596*^9, 3.7932621261005783`*^9}, {3.793263354678767*^9, 
   3.7932633548438873`*^9}, {3.7932891569010553`*^9, 3.793289160206669*^9}, {
   3.793290541062859*^9, 3.7932905494816647`*^9}, {3.793466376655335*^9, 
   3.793466377170805*^9}, {3.793466523131755*^9, 3.793466526597267*^9}, 
   3.793765266084045*^9, 3.795259636949252*^9, {3.795259812233391*^9, 
   3.795259812664221*^9}, {3.795260030498876*^9, 3.7952600326914263`*^9}, {
   3.795261852962491*^9, 3.795261853613853*^9}, {3.795596392430717*^9, 
   3.7955963931407824`*^9}},
 CellLabel->"In[30]:=",
 CellID->620783092,ExpressionUUID->"64d0861f-583a-4f83-bc44-6ac66b7e9088"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here we set custom rates and initial conditions:", "Text",
 CellChangeTimes->{{3.7928417223874493`*^9, 3.792841744259144*^9}},
 CellID->1025870118,ExpressionUUID->"eedf11aa-c103-410f-a050-660852631d31"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"population", "=", 
   RowBox[{"10", "^", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelSEI2HREcon", "=", "\[IndentingNewLine]", 
   RowBox[{"SetRateRules", "[", "\[IndentingNewLine]", 
    RowBox[{"modelSEI2HREcon", ",", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"TP", "[", "0", "]"}], "\[Rule]", "population"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "ISSP", "]"}], "\[Rule]", 
        RowBox[{"0.5", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"qcrf", ",", 
               RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "INSP", "]"}], "\[Rule]", 
        RowBox[{"0.5", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "qsd"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"qcrf", ",", 
               RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"qsd", "+", "ql"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"qsd", "\[Rule]", "60"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ql", "\[Rule]", 
        RowBox[{"8", "*", "7"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"qcrf", "\[Rule]", "0.25"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Beta]", "[", "HP", "]"}], "\[Rule]", "0.01"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]", "[", "ISSP", "]"}], "\[Rule]", 
        RowBox[{"0.035", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Mu]", "[", "INSP", "]"}], "\[Rule]", 
        RowBox[{"0.01", "/", "aip"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
        RowBox[{"3", "/", "1000"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lpcr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"hscr", "[", 
         RowBox[{"ISSP", ",", "INSP"}], "]"}], "\[Rule]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"msdp", "[", "HB", "]"}], "\[Rule]", 
        RowBox[{"dbp", "*", 
         RowBox[{"Piecewise", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"t", "<", "dds"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"dsf", ",", 
               RowBox[{"dds", "\[LessEqual]", "t", "\[LessEqual]", 
                RowBox[{"dds", "+", "ddl"}]}]}], "}"}]}], "}"}], ",", "1"}], 
          "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"dbp", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"dds", "\[Rule]", "70"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ddl", "\[Rule]", "7"}], ",", "\[IndentingNewLine]", 
       RowBox[{"dsf", "\[Rule]", "2"}]}], "\[IndentingNewLine]", "|>"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.792840997471833*^9, 3.7928410014208717`*^9}, {
   3.7928412515120993`*^9, 3.792841338172965*^9}, {3.792841623513248*^9, 
   3.792841624005987*^9}, 3.792841673104003*^9, {3.792842466685299*^9, 
   3.792842493309701*^9}, {3.792842554897097*^9, 3.7928425660755167`*^9}, {
   3.792842634422552*^9, 3.792842653500198*^9}, {3.7932318140523043`*^9, 
   3.7932318159184217`*^9}, {3.793232568306192*^9, 3.793232612889409*^9}, {
   3.7932328265342627`*^9, 3.793232827780119*^9}, {3.7932333137456837`*^9, 
   3.793233319389818*^9}, {3.7932334725987377`*^9, 3.793233481954981*^9}, {
   3.793233567549234*^9, 3.7932335753344173`*^9}, {3.793234109076193*^9, 
   3.79323411002955*^9}, {3.793234625649644*^9, 3.793234666632866*^9}, {
   3.793234753643496*^9, 3.793234787953348*^9}, {3.793237818566841*^9, 
   3.79323784712894*^9}, {3.7932382885097313`*^9, 3.7932382888255787`*^9}, {
   3.793238935032902*^9, 3.793238966746608*^9}, {3.793313925754953*^9, 
   3.793313925762312*^9}, {3.7933140660863247`*^9, 3.793314088892256*^9}, {
   3.7933143247089853`*^9, 3.793314337125317*^9}, {3.79331441978144*^9, 
   3.793314421209125*^9}, {3.7933144629826*^9, 3.7933144874941998`*^9}, {
   3.793444939104265*^9, 3.793444939112287*^9}, {3.7934650562504883`*^9, 
   3.793465094490333*^9}, {3.793465163597599*^9, 3.793465168447773*^9}, {
   3.793466043268198*^9, 3.793466091493733*^9}, {3.793466358624346*^9, 
   3.793466370794099*^9}, {3.793466506015046*^9, 3.793466507433257*^9}, {
   3.793901212182459*^9, 3.7939012155622807`*^9}, {3.793901370610619*^9, 
   3.7939014032602882`*^9}, {3.7939014833062267`*^9, 
   3.7939014897208033`*^9}, {3.795065336766263*^9, 3.795065340973969*^9}, {
   3.7950653960460978`*^9, 3.7950653975625067`*^9}, {3.795090919469816*^9, 
   3.795090920255754*^9}, {3.7952596155693293`*^9, 3.795259629996791*^9}, {
   3.795262807427458*^9, 3.79526281386172*^9}, {3.795595905771832*^9, 
   3.795595969052392*^9}, 3.795596054159274*^9, {3.7955962148034077`*^9, 
   3.795596269893502*^9}, {3.795596311922524*^9, 3.795596345133943*^9}, {
   3.7955966572421227`*^9, 3.7955966630135717`*^9}},
 CellLabel->"In[31]:=",
 CellID->1800355110,ExpressionUUID->"ac191dbd-6b76-4e32-9351-ebbeefd95ae5"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " Note the piecewise functions for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "ISSP", "]"}], TraditionalForm]],ExpressionUUID->
  "6f5537a0-042d-411b-a0b4-515c1ee5d2a6"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Beta]", "[", "INSP", "]"}], TraditionalForm]],ExpressionUUID->
  "64be359a-c683-4961-afe3-f6d2cf4fed79"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"msdp", "[", "HB", "]"}], TraditionalForm]],ExpressionUUID->
  "0a34be04-1444-4837-9be3-8b0a6516c7cb"],
 "."
}], "Text",
 CellChangeTimes->{{3.795102808824319*^9, 3.795102886844214*^9}, {
  3.795102954671949*^9, 3.795102956617049*^9}, {3.795600704551323*^9, 
  3.7956007252068253`*^9}},
 CellID->523747540,ExpressionUUID->"0820f768-b38a-4e0f-a20a-4766c1e624ca"],

Cell[CellGroupData[{

Cell[TextData[{
 "Here is the system of ODE\[CloseCurlyQuote]s we use to do ",
 StyleBox["parametrized",
  FontSlant->"Italic"],
 " simulations:"
}], "Text",
 CellChangeTimes->{{3.792782947793372*^9, 3.792782973825616*^9}, {
  3.7927830226521187`*^9, 3.792783032912167*^9}, {3.7927831258393993`*^9, 
  3.792783136661377*^9}, {3.793898052777491*^9, 3.7938980532013817`*^9}},
 CellID->89435727,ExpressionUUID->"e13cca22-bc6c-4353-94ec-2bdde9c6d72e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsActualEquations", "=", 
   RowBox[{"ModelNDSolveEquations", "[", 
    RowBox[{"modelSEI2HREcon", ",", 
     RowBox[{"KeyDrop", "[", 
      RowBox[{
       RowBox[{"modelSEI2HREcon", "[", "\"\<RateRules\>\"", "]"}], ",", 
       "lsFocusParams"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"List", "/@", "lsActualEquations"}], "]"}]}], "Input",
 CellChangeTimes->{{3.792781370593688*^9, 3.792781390023394*^9}, {
  3.7927829817931423`*^9, 3.7927830097817163`*^9}, {3.7932318172925797`*^9, 
  3.793231820148613*^9}, {3.793313925767356*^9, 3.793313925768722*^9}, {
  3.7933149092314243`*^9, 3.793314933272561*^9}, {3.793444939116008*^9, 
  3.7934449391183367`*^9}, {3.795259831594865*^9, 3.795259837617635*^9}, {
  3.795260159566546*^9, 3.79526016097078*^9}, {3.795260343119873*^9, 
  3.7952603498009453`*^9}, {3.7952618164449797`*^9, 3.795261857249148*^9}, {
  3.7952619680296793`*^9, 3.795261968323023*^9}, {3.795262083051684*^9, 
  3.795262086593916*^9}},
 CellLabel->"In[33]:=",
 CellID->2055194436,ExpressionUUID->"a2434fd2-dd0c-4149-9481-488106bc0340"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{
      RowBox[{"TP", "[", "t", "]"}], "\[Equal]", 
      RowBox[{"Max", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], "+", 
         RowBox[{"INSP", "[", "t", "]"}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}], "+", 
         RowBox[{"RP", "[", "t", "]"}], "+", 
         RowBox[{"SP", "[", "t", "]"}]}]}], "]"}]}]},
    {"2", 
     RowBox[{
      RowBox[{
       SuperscriptBox["SP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"SP", "[", "t", "]"}], "45625"]}], "-", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"INSP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "-", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"HP", "[", "t", "]"}]}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"HP", "[", "t", "]"}], " ", 
         RowBox[{"SP", "[", "t", "]"}], " ", 
         RowBox[{"\[Beta]", "[", "HP", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]]}]}]},
    {"3", 
     RowBox[{
      RowBox[{
       SuperscriptBox["EP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", "45625"], "+", 
            FractionBox["1", "aincp"]}], ")"}], " ", 
          RowBox[{"EP", "[", "t", "]"}]}], ")"}]}], "+", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"INSP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "+", 
       FractionBox[
        RowBox[{"0.5`", " ", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"HP", "[", "t", "]"}]}], "+", 
            RowBox[{"ISSP", "[", "t", "]"}]}]}], "]"}], " ", 
         RowBox[{"(", 
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {"1", 
                 RowBox[{"t", "<", "qsd"}]},
                {"qcrf", 
                 RowBox[{"qsd", "\[LessEqual]", "t", "\[LessEqual]", 
                  RowBox[{"ql", "+", "qsd"}]}]},
                {"1", 
                 TagBox["True",
                  "PiecewiseDefault",
                  AutoDelete->True]}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
               GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}},
               Selectable->True]}
            },
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], ")"}], " ", 
         RowBox[{"SP", "[", "t", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"HP", "[", "t", "]"}], " ", 
         RowBox[{"SP", "[", "t", "]"}], " ", 
         RowBox[{"\[Beta]", "[", "HP", "]"}]}], 
        RowBox[{"TP", "[", "t", "]"}]]}]}]},
    {"4", 
     RowBox[{
      RowBox[{
       SuperscriptBox["INSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1.01`", " ", 
          RowBox[{"INSP", "[", "t", "]"}]}], "aip"]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"sspf", "[", "SP", "]"}]}], ")"}]}], "aincp"]}]}]},
    {"5", 
     RowBox[{
      RowBox[{
       SuperscriptBox["ISSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"0.00875`", " ", 
          RowBox[{"HP", "[", "t", "]"}]}], "aip"]}], "-", 
       FractionBox[
        RowBox[{"ISSP", "[", "t", "]"}], "aip"], "-", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"EP", "[", "t", "]"}], " ", 
         RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"]}]}]},
    {"6", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1.00875`", " ", 
          RowBox[{"HP", "[", "t", "]"}]}], "aip"]}], "+", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{"Min", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"HMS", "[", "t", "]"}], "3"], ",", 
                 RowBox[{
                  RowBox[{"HB", "[", "t", "]"}], "-", 
                  RowBox[{"HP", "[", "t", "]"}]}], ",", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"EP", "[", "t", "]"}], " ", 
                   RowBox[{"sspf", "[", "SP", "]"}]}], "aincp"]}], "]"}], 
               RowBox[{
                RowBox[{"HP", "[", "t", "]"}], "<", 
                RowBox[{"HB", "[", "t", "]"}]}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True], ")"}]}]}]},
    {"7", 
     RowBox[{
      RowBox[{
       SuperscriptBox["RP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"INSP", "[", "t", "]"}], "+", 
         RowBox[{"ISSP", "[", "t", "]"}]}], "aip"], "-", 
       FractionBox[
        RowBox[{"RP", "[", "t", "]"}], "45625"]}]}]},
    {"8", 
     RowBox[{
      RowBox[{
       SuperscriptBox["DIP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"0.00875`", " ", 
         RowBox[{"HP", "[", "t", "]"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{"0.01`", " ", 
         RowBox[{"INSP", "[", "t", "]"}]}], "aip"], "+", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"]}]}]},
    {"9", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HB", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"HB", "[", "t", "]"}], " ", 
       RowBox[{"nhbcr", "[", 
        RowBox[{"ISSP", ",", "INSP"}], "]"}]}]}]},
    {"10", 
     RowBox[{
      RowBox[{
       SuperscriptBox["HMS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"HMS", "[", "t", "]"}], ",", 
          RowBox[{"3", " ", 
           RowBox[{"HP", "[", "t", "]"}]}]}], "]"}]}], "+", 
       FractionBox[
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"HB", "[", "t", "]"}]}], ",", 
          RowBox[{"MS", "[", "t", "]"}], ",", 
          RowBox[{"100000", " ", 
           RowBox[{"nhbr", "[", "TP", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HMS", "[", "t", "]"}]}], "+", 
           RowBox[{"6000000", " ", 
            RowBox[{"nhbr", "[", "TP", "]"}]}]}]}], "]"}], 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"1", 
               RowBox[{"t", "<", "70"}]},
              {"2", 
               RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
              {"1", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True]]}]}]},
    {"11", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"40000.`", "\[VeryThinSpace]", "-", 
          RowBox[{"MS", "[", "t", "]"}]}], ",", 
         RowBox[{"mspr", "[", "HB", "]"}]}], "]"}], "-", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MS", "[", "t", "]"}], "-", 
          FractionBox[
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"HB", "[", "t", "]"}]}], ",", 
             RowBox[{"MS", "[", "t", "]"}], ",", 
             RowBox[{"100000", " ", 
              RowBox[{"nhbr", "[", "TP", "]"}]}], ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"HMS", "[", "t", "]"}]}], "+", 
              RowBox[{"6000000", " ", 
               RowBox[{"nhbr", "[", "TP", "]"}]}]}]}], "]"}], 
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {"1", 
                  RowBox[{"t", "<", "70"}]},
                 {"2", 
                  RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
                 {"1", 
                  TagBox["True",
                   "PiecewiseDefault",
                   AutoDelete->True]}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                Selectable->True]}
             },
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True]]}], ",", 
         RowBox[{
          RowBox[{"0.7`", " ", 
           RowBox[{"INSP", "[", "t", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"HP", "[", "t", "]"}]}], "+", 
             RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{"0.02`", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"EP", "[", "t", "]"}], "+", 
             RowBox[{"RP", "[", "t", "]"}], "+", 
             RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}], "]"}], "-", 
       FractionBox[
        RowBox[{"Min", "[", 
         RowBox[{
          RowBox[{"4", " ", 
           RowBox[{"HB", "[", "t", "]"}]}], ",", 
          RowBox[{"MS", "[", "t", "]"}], ",", 
          RowBox[{"100000", " ", 
           RowBox[{"nhbr", "[", "TP", "]"}]}], ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HMS", "[", "t", "]"}]}], "+", 
           RowBox[{"6000000", " ", 
            RowBox[{"nhbr", "[", "TP", "]"}]}]}]}], "]"}], 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {"1", 
               RowBox[{"t", "<", "70"}]},
              {"2", 
               RowBox[{"70", "\[LessEqual]", "t", "\[LessEqual]", "77"}]},
              {"1", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True]]}]}]},
    {"12", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MSD", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"HP", "[", "t", "]"}]}], "+", 
       RowBox[{"0.7`", " ", 
        RowBox[{"INSP", "[", "t", "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"ISSP", "[", "t", "]"}]}], "+", 
       RowBox[{"0.02`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EP", "[", "t", "]"}], "+", 
          RowBox[{"RP", "[", "t", "]"}], "+", 
          RowBox[{"SP", "[", "t", "]"}]}], ")"}]}]}]}]},
    {"13", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MHS", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"HP", "[", "t", "]"}]}]},
    {"14", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MMSP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"MSD", "[", "t", "]"}]}]},
    {"15", 
     RowBox[{
      RowBox[{
       SuperscriptBox["MLP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"0.00875`", " ", 
         RowBox[{"HP", "[", "t", "]"}]}], "aip"], "+", 
       RowBox[{"INSP", "[", "t", "]"}], "+", 
       FractionBox[
        RowBox[{"0.01`", " ", 
         RowBox[{"INSP", "[", "t", "]"}]}], "aip"], "+", 
       RowBox[{"ISSP", "[", "t", "]"}], "+", 
       FractionBox[
        RowBox[{"0.035`", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"HP", "[", "t", "]"}]}], "+", 
           RowBox[{"ISSP", "[", "t", "]"}]}], ")"}]}], "aip"]}]}]},
    {"16", 
     RowBox[{
      RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99998"}]},
    {"17", 
     RowBox[{
      RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"18", 
     RowBox[{
      RowBox[{"ISSP", "[", "0", "]"}], "\[Equal]", "1"}]},
    {"19", 
     RowBox[{
      RowBox[{"INSP", "[", "0", "]"}], "\[Equal]", "1"}]},
    {"20", 
     RowBox[{
      RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"21", 
     RowBox[{
      RowBox[{"MLP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"22", 
     RowBox[{
      RowBox[{"TP", "[", "0", "]"}], "\[Equal]", "100000"}]},
    {"23", 
     RowBox[{
      RowBox[{"HP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"24", 
     RowBox[{
      RowBox[{"DIP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"25", 
     RowBox[{
      RowBox[{"HB", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"1000000", " ", 
       RowBox[{"nhbr", "[", "TP", "]"}]}]}]},
    {"26", 
     RowBox[{
      RowBox[{"MSD", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"27", 
     RowBox[{
      RowBox[{"MHS", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"28", 
     RowBox[{
      RowBox[{"MMSP", "[", "0", "]"}], "\[Equal]", "0"}]},
    {"29", 
     RowBox[{
      RowBox[{"HMS", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"6000000", " ", 
       RowBox[{"nhbr", "[", "TP", "]"}]}]}]},
    {"30", 
     RowBox[{
      RowBox[{"MS", "[", "0", "]"}], "\[Equal]", "40000.`"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.89956196051908*^9},
 CellLabel->"Out[34]=",
 CellID->1993181322,ExpressionUUID->"21d0d64d-dfa9-4641-9634-26cc23223135"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation", "Section",
 CellChangeTimes->{{3.7927811232134533`*^9, 3.79278112749964*^9}, {
  3.7927817799333563`*^9, 3.792781784691574*^9}, {3.792782250686778*^9, 
  3.792782260451419*^9}, {3.7927824681435013`*^9, 3.792782468411478*^9}},
 CellID->1525907504,ExpressionUUID->"6c1d1bdc-1f11-4941-98b1-769e76064484"],

Cell[TextData[{
 "Instead of using ",
 StyleBox["ParametricNDSolve", "Program"],
 " as in [AA4] in this notebook we use ",
 StyleBox["ModelNDSolve", "Program"],
 " and ",
 StyleBox["SetRateRules", "Program"],
 " from the package [AAp4]."
}], "Text",
 CellChangeTimes->{{3.795595285219509*^9, 3.795595368403311*^9}, {
  3.79559563277175*^9, 3.795595652944387*^9}},
 CellID->677707254,ExpressionUUID->"964f891d-af5b-4878-b35e-5e7e0047f794"],

Cell[CellGroupData[{

Cell["Different quarantine starts", "Subsection",
 CellChangeTimes->{{3.795596448353148*^9, 3.795596457555822*^9}},
 CellID->2120037937,ExpressionUUID->"70241834-79ca-4981-9507-3ab21e4c58e2"],

Cell[CellGroupData[{

Cell["\<\
Here we compute simulation solutions for a set of quarantine starts:\
\>", "Text",
 CellChangeTimes->{{3.79559565982668*^9, 3.795595681518528*^9}},
 CellID->428936135,ExpressionUUID->"52b544ae-710b-459a-9058-c0954fa3038c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "qsdVar", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"qsdVar", "->", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"ModelNDSolve", "[", 
             RowBox[{
              RowBox[{"SetRateRules", "[", 
               RowBox[{"modelSEI2HREcon", ",", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{"ql", "\[Rule]", "56"}], ",", 
                  RowBox[{"qsd", "\[Rule]", "qsdVar"}]}], "|>"}]}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}]}],
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Range", "[", 
        RowBox[{"40", ",", "120", ",", "20"}], "]"}]}], "\[IndentingNewLine]",
       "]"}]}]}], ";"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.795594988373721*^9, 3.795595042599126*^9}, {
  3.795595077487207*^9, 3.795595109899185*^9}},
 CellLabel->"In[35]:=",
 CellID->27017966,ExpressionUUID->"0e662ebf-b91a-4286-850c-a543558a056c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.148002`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.8995619606795483`*^9},
 CellLabel->"Out[35]=",
 CellID->801069301,ExpressionUUID->"42b8d0f1-0d07-4fab-8d66-4ec1667b3e44"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here we plot the results for ISSP only:", "Text",
 CellChangeTimes->{{3.795595685872078*^9, 3.7955957289149427`*^9}},
 CellID->971905045,ExpressionUUID->"e59b7cb5-f743-41e0-b4a1-7f648cd4b9f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "2532", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "ISSP", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", "\[LessEqual]", "70"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"120", ",", "200"}], "}"}], "]"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"80", ",", "110"}], "}"}], "]"}]}], "]"}], ",", 
          "Above"}], "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{"LegendLabel", "\[Rule]", "\"\<Quarantine start\>\""}]}], 
     "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"ISSP", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795595056179405*^9, 
   3.795595072738517*^9}, {3.795595157671277*^9, 3.795595199632392*^9}, {
   3.7955952456250753`*^9, 3.795595273084453*^9}, {3.79559570107738*^9, 
   3.795595721873345*^9}, {3.795600793823765*^9, 3.79560083814741*^9}, 
   3.79560204252104*^9},
 CellLabel->"In[36]:=",
 CellID->1047472233,ExpressionUUID->"e2ec9842-9757-4094-ae72-7c2501ad06de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7000809823414906627", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7000809823414906627", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0}], 0, 20, 20}, {CompressedData["
1:eJw9lUtqH0cQh4XJIlsnvkAOYKjqevbSS4EXwSEHcIhsvFFAMoTcPl9P93jh
P3L3TD1+r/ntr38+fXnz8PDw+jM/nz7/++Hl5fN/f7zlP38+v377+vz09+Pz
96evTy/pX35fz/3Ez8dvr98ff+UPl05LE82hJdbT+jp/P7LLOyXUrVXE5nWe
VZKTQ5/hWapa13nFjBrBY1kUS1O/ztUnV24hLapZ2brrxxgqo8eIdi+G2HUY
ontOGekyGEDVrvNmOB+ZGdpJ/Qp7fLfq1Jg8ozoqfYzVN/fF6OYxc6GgT8sY
vi+i5tphaNfkd7Lo1WLQ1lOYK4TN3SxPa/Op5cKMFHE67udNKDR4g3fae8gZ
qSNTZszZxYLqdNsXZhxwl1QfVakd+8LNKSBdNUojVGafJcSqu0tdqpVXKq7e
MQQi3LWY7np+w+rNRmNMygjVs8emoWrBw6rKuLNAeJyRUqdCWjYEshx8bH7K
q4BVs2evZfKANFIDctYPQ9BkgwQFFt7RbZ5sM+WshkQ8onwRZ8OY66CUq98a
fl5ogcd9MYx+LvvfKLodMCBOWwTukayqpB+CMphxRMBmG72OJue0KW1zcSMI
CK1uuMGNmWQuXcgCfWxU19jsnRaBjP2HGYAxB5VLkAZ960bPxALsTQVq0Hpu
tdpQxOLMm7Nqig492sME0SiwMRbKRaAbVmkkpIbAE24aAPa5hq4quEERG2Nt
eoBRFANq0LUvFexzRI9WZEkFeSKfvlf2xFXant1ioH0uDM4ASM2BtWPw0AZ1
pqJwyrMCYRC34Xr9OdjBZyftZ/RpDV4hEDmuBUPOCgmMhj+5hyN6HVtFEBes
sFw+fe24E6aR7zQoiER1Lbeh4TZMHHVUccUm80iMR2Ki44Bh5gX38waeyUjs
Mazd6H5488tS06ATEQFr2BEAgsNAgQIQB3kgBwz4T7whWB7tW9YNRtES8EA6
EZ7KBsOoikkw24pQBAoYv1zLsfQKAcBm0bsv1qQuq6FWY38rOfVxBe68Qnqi
wr5t5UvDyLuwnSxfyxaGMRAcdg/sGKSM3ZqHz1rAjaUKXTCeFisaER90I8dB
Zh2iOV35nDTBvDx1PgF0pIlhiSS0wtzPsARPL1THQo+vAJbbM7HrldFrZhCx
E6BFddRH+CFBcp8F9znRAHEoBlPMXpxsG/L6wLUTZOdKuiP693N9dZLcSQ9b
AWp3uPFlIUGXistWrPQtDBmk0jI74U3ADjk8MA3BxlpqfKvuYKgJXsQa0RyB
XgjBE8M8NG3FGGFe0LjPeyWaIRkDv7WantgmFKQw9/72wMaPzGMK5Ihr+bih
5Wn/AzzDac8=
     "], 4, 0}}, RawArray["UnsignedInteger64",{7000809823414906627, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899561960713881*^9},
 CellLabel->"Out[36]=",
 CellID->996758864,ExpressionUUID->"6dbba97b-8418-43e4-9349-99242db79744"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHlcjPv7xidJi6hUdpmOSFTaE9KlLG3ad8VMe9M2e9ZjZOnIUpK9MkU6
OFKkKDTUOcdJQvYlRhERopLdt99r7v749c+83q/7ubqea+Z5Pp/7cxtGpvrF
DGIwGClKDMb/fSr+upz+/ycDlR2vddvmvidWw+k3ev568QOsjQoPjX87zQau
10OUzNEqW+UD8Wjc6NvV1ODwkXg8TMqV7uY2dRMzoT6xpW5xYy/xb7D96bkg
0ukzsRFa2xY/nj3zG/EU7GZVChOv/iSeCnVmtJXyZiUoeBpu186TjdYfTGwK
FsPsUOc4VWJzcBJHJjee0iC2wLcLqlc6Pg4ntkTxn5x/lX7oEFthtmHA5j29
esTW8Npuhra00cQ2eORcM2Ne3nhiW2zb6xFQXssktkOGqUfhH4WTiO1xZ8dm
20xVY+KZKM5YtHWi+nRiB7A5rTZ3L80gngXp5Y46zaNWxLPhYu5tPKTLlngO
Vnw52uTS6EDsiLRXBdzfQuYSz4VObN9arwfziJ0wPcyteShjATEg69n9vfiM
q4IlwGut+2VmuoupPg/5Pq8tlMf5Un0eluNUsxczgOrOuDa6S+3giWCqO0M6
ZeUiycMlVHfBsgV9/9qzWVR3QVK8xtZq5yiqz8e0kHTvhMOxVJ+P/1QPZD07
wKH6AoTfKDLfUpBC9QXYPCdQ860ej+oLwX8UUqJWyqf6QoTqDG9bNUVI9UXI
tBhvV5QhovoiHDl7xbflvpjqrjBmH3YazFxOdVdMKJNMqGavoLob/B0ZD8sL
V1LdDY8Ov1dva11FdXeMF26bdtp4DdXdcWhFT6M+/3eqe6DcMOZ4cd1aqntA
U33q2MfbJVT3xNh74axKrKO6J9JLblo/7iNmLEZmutLuqop0qi9G4ISazcVp
66nuhYiLq5s/YwPVvbCrer3md+2NVPfGv5eyF3a/JJZ4o+GKu92EfzZR3QeW
Ce/GVxzPUDB80PTiRdK7vX/Q9T5Qb3Vy/LVts4JlPkiZOGnXyC2ZpPdFbcNv
e9jZW0jviz9NjuZoFGwlvS+Y79wZDhXbSO+LvJZjMTq3tpPeDxnPDw498zWL
9H5YUHvgZdGubNL7IXOtu02O1Q7S+4E7eQWHf5uY4Y/aj0duZq3KIb0/TDnX
uiym7iS9PyTi/ILch8QyfyR1xfl35+SSPgDKY21uR/juIn0A7gf85V6iv5v0
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
X69k
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {1}}]& ], 
          "40"], Annotation[#, 40, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
Y/k/lVvJJA==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {2}}]& ], 
          "60"], Annotation[#, 60, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHk4lPv7x0eRaEEblSJpT6SQVN5E9n0XNXYztjGLtKhRORInRBI6FC0k
USJOaVot7VqOTmTraFNUShK+fpfbHz//zPW67uee1/Mez/L53PO8w+z9xjAY
jFAxBuP/Pkf+uvX//ycDZe8/TG3f0EU8Hpc+TnOYFjjKsii1kK7uVBs9fhp8
ROs1kyS+ECvgce+Rh3W6X4kVsaRE7EXqw2/EypBSarpldf87sQq0Bi2NvfV/
Equird2qUW9NP/FCpDHL+EH3BokXQ0rZV3NsnBhGeCmeXTcQKUwXJ14OJkMt
t3O2JPEKsINmhNy/KE2sgf5rkjXvv04mXolTZ9nVYgNyxJrQm+cYd/T7NOJV
sD6khvZtCsSr8crwb3WDLEViLfyZbuFYcl2ZWBuxyy1OHDgxn1gHz5PjtA5K
LiJeg1OxJglKUsuIdeHFblv94oY68Vrk3Hx/a2K+JrEeNq6wWTSuW4t4Hbb3
5T/ceF+XeD22vfuLo+K6gXgD5Px791i/NCDWxzJ3s/oJDGNiQNST9vvUZdMR
FgIfZBqK1aZaUd0Ax20/aIydbUd1A0TiYr21siPVDfFAoXt89nkXqhsiZ+EO
E+G/m6m+EVuNe6t1vJhU34jgQOmESkMfqhthqeteG1aeP9WNcCj4Y1ZrJpvq
xthgpHB9oWEY1Y2x+Z2aopQ7l+qbIPMw/pxvnIDqm/C9M7V7puF2qpvA0mxC
fdmxKKqb4MWKK3HmjtFUN4XGnHW7h4z2U90UEs/koVQUS3UzFEXWztqUE091
M7ydckO1dEYS1c3xx3r5RrPSw1Q3R+bE9u+3Lx6hugWs/k5maSgeo7oFquqE
bid+Z1HdElqprJ7DJTlUt8Td8r6Dq9RzqW6FELnSwsUDp6huhcd5ipmrlfKp
bo2qS02vldIKqW4NXjrLcbd6MdVtsF3lgpyR7kWq22DnjHfmft6lVLfFQGXe
wYSTZSMMWyy2+WemWdcVOt4WU37qnTi07u8RFtnirESgbUjUNeq3g0z73JhP
edep3w5jmy+WRT4VUb8dAo5turj76g3qt4N+RtoJ/7ib1G+PIcn5KQ46t6jf
Hmsb/aaX3SYW2iPl3p6mNStvU789BhXlP6dEETMcECKa5+R8jhgOUItZtPz8
VWKhA+7BykatdLTfAaeTZfbkpY72OyIharvTN+ZovyOW3wjT7pw92u8Ij6i2
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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {3}}]& ], 
          "80"], Annotation[#, 80, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHk8lGsfxidt5BSVUDkZKVSUraIsV7Yisi/JMvZlmGbMQkkNRWmRSouW
Y4hKqZAoxCgtJ3JEeetEKTlFTmnfeXs/fv54/ePz/Vzz851rPPM8931rBK91
C5NhMBicEQzG/34P/fRb/v9vBsp7eid3WbwhlsWFV0ruSpHDrIiyleNu9ukN
v14JIVJzw8zRb4lV0fx5f9Nt03fEaphTMqItq+k9MRNy6h3XnBo/Es/EwgFH
22DLL8Sz8KzLqX2pyXdiLRxglQvYDQPEOpBjhhqOTB+BIZ6Le7XLpKpTRhHr
gsXQO943fSzxfESzlWMbS8cR6+P7lbG3et5NIDZAwanomyN+TiQ2xFINj/SD
H5WIjbAqQw9d8arExnhkVbVg2VE14oXYdWilR0ktk3gRtuquzN2Wq0m8GPf3
pC/cPlab2AQFW5fvVJebR2yKoOhnxm11C4iXQHK159pvhYbES2E931l7TP9C
YjOs+1rYZN1oSmyO+Jd/cGf6WBBbYGL4502rHi4jtsQ8X/sWeYYtMSD9cOBH
wcUVQywGehUeFOtNdqJ8GY659OqPnO5K+TIkoLRlFdODcivcUe2XzTnrTbkV
JFrrl4v/XkO5NQJtP99cHMSi3BoxkeN2VlqFUG6DuT4pzlH54ZTbICPm1dGn
R6Ipt4WFjWqtltVaym2x5qWempxvHOV2UGjacSY0XUi5HT72ZfVPtVpH+XI4
2su3lGcnUb4cbfMvpTt4JFO+Avq/m20ctNlC+QqMvqcC9XNbKbfHuYQ/p9lJ
dlBujxeT6maVKWdS7oA0c5V2+7K9lDvgyG9dH+tL91O+Ek5Ve6L01bIpX4ma
2+LVuT+OUu6IhVlRH/aWSCh3xI2Kr9uNFhyn3AmxE8uKdH4WUO6E5ny1I8bq
hZSvQs2FjsfqB4ooXwX+oSiPjQuKKXfGupnnJ9qYllLujETllw5hwWWUu+Bn
Zf72nXnlQwwX6Dj/Z6r9m0v0ehdM+rI0N8OsaoilLjg1OtIlNukKzbtCoWtG
6r/5tTTvipFPSssTWqU074qIbLvSjdV1NO8Ky8MHcsPTr9K8GwbHau5zX3yN
5t2wpD1sSnk9sdgN+xo2dZgY1NO8GwbUVF7vSyJmuCNWquHpdYYY7tBL1dY9
W00sdkcDnJz1yobn3XFij8Km/KzheQ/sTFrn+Z41PO+BykkOxn3Th+c9kFg/
vsniFr0fqQfmri+7Ex1JzPCEn15rX8UA9YEn2hqMBIa7iMWeyJLvljkzhVjq
iZZi/+xL2fR5MLxwYaBjsGoaMbyw9Mwmw67s4c/PC/VG5RfnqxJLvaDJcdZ+
rUufN8MbY0pie57NraF5b4y7vK0nYh79f8TeEOS9WsFfUE3zv3hCkU/jYvp/
MnzwQm0Sc5JtJc37oPh3oXad92Wa98G8ct29Jly6HqQ+CH1rtb8mo4LmVyNl
19HVWy4MXz+rIXtnD6vw8UWaX42CguVXFysSS1ejyffYdf0Vw9efL46YOh3c
m3aB5n1xuMxylFvD8PXqixqdPms/ZWKpL8pObUs6FFFC82uwIrlqQk8NXe9Y
g086jGO6asTiNVjVnv8uaeAczf/KM+Wq3/91lub9cO9Mlyq7iL4/8APfj52z
d98ZmveD/WTNJpXU0zTvB4H2qLqT4uHvnz/k3i2pfZN6iub98a7OpeRY1kma
98fBmsZNrKITNO8Pr8CKgJeN9H1mBKCjSUnuxcd8mg+A/b6B1wraxOIAKD/e
46PKovuBNADFV/duqpDk0XwgtPd75Z54mUvzgfBnrRiXu5hYHIgpz+aohe6i
+4s0EAlnZSQBrTk0z0LXjsHIbYf+GGImC5E2Sq2NUcfo77Gg6PDMsMKO7lcs
FvgFpzrb5h+hv8/CdXvtWbUah4dYwsIP6fIZY9XpfidlQaNWtcRe69AQd7Kw
j5EUPnvxQfIHIdXfwsvM9QD5g8A+aCJvLKD7J4JQE2IdeTEni/xBmFdWuyum
dR/5g/Bqok2NrAKxJAhZ7k+szdzofiwNgvpCJ6/qo3vIHwSLN3WMZa+H79/B
v95fvGyqHTEzGDn7a0/tcNhN/mCE80IL05QyyB8M45Y9bZt6d5I/GEXGa04z
Gun5IAnGd40InYOXtpM/GDW6+aX3z6eTPxi/awV0upVsI38ItryUeBZW0/OG
GYIW389H4u+mkT8EuVs4PwPfpJI/BCdOjmXJKhOLQzDezXfmNFt6fklCcGjb
xNFWGzaTPwS3JjwsNqxKIX8Icup2GOWOIGaEgne319rKmZ6HzFBEjrh7+c5x
MflDEdsZUvnj5ybyh0IrlZ+mWbeR/KHQrMtbnZlJz1dJKE6kzrt7i72B/KGo
1jJme7slkj8Us4u5Lg3W68kfhgmyOhqXLOl5zQyDeCOz/qJtAvnDkOIWZ8ry
jCd/GAL0x3G8OSLyh8Hyodpky0x6/kvC4KE+S1RTKSB/GOzD968R/8snfxiC
ulUeGeoQM8LB2hBkvjWa1hPMcJyWlXlkUMYjfzg2G6we6BlFzApH2PLm+ig/
LvnDwZH9OqpdQOsTSTgstLKdYsw55A/HOslJG9lJseQPR3LpoiMm79jkjwAn
RjVvewetd5gRiNlwcHpmaxT5I+AR//23J62R5I/Am5R5xyY+jiB/BJacjGi/
/pbWT5II9PPMC49NIJZGIPfSmVQL4zDyR2DVcQ2Ba3Ao+SOxZLzwfsohWo8x
I5Fa1G+X0hZM/kjsDryULKNGzIqE/MCXpZcjg8gfCa2mVfKB1bS+k0Si1txl
xXllYmkk1nV0/fPX6wDyR4LzJHnRvmp/8kdBvqxxy/wDfuSPwq2G8AzdRFo/
Igq1VtmH1Ni+5I/CiucJNnvDVpM/CubtDSGzo33IH4X11U7NvARaj0qjEHTu
u7VKphf5o9DvWGVwudiT/NHYYRYvGXhI61lmNGQeV43dK0+MaPjfKNHTsHUn
fzRiuUlj/NPcyB+NB8rp+7820fpYEo1+/ZamszOIpdEYccZ9nZHQhfzRKDLX
08rIdyY/G8s1S2Kc2avIz4Z3g3BQz4LW32AjkGX3qkTNkfxssBZeehoxZiX5
2fiQNSj39Js9+dnYkph4r/QrreelbOR0uzWLZIg72fhWWpZyW2k5+WOg0VNk
6axvR/4YPPdRHX3ag/YHiMGSqjyvzck25I/BBt7A1K3l1uSPgfc5X2Hoeyvy
x8Aq0/T8ncXE0hi0vtiskLCZ9h+dMVjZ/rhuehvIH4s0k9rL/AXEzFjoLlHX
S5xhSf5Y7DJMn8jvNSd/LFSL33A9rpqRPxalXgzfwoKl5I/FKf+P0YysJeSP
BUL+zO/bSfujzljY3q/H6EwT8nNQxTuR2n10Mfk5GPQyzNG9sIj8HDTeOROf
1EL7LRYHfxc07N34zZj8HPzJ1up9OJdYwkGfX0KDWYgR+TnYIPejwvs47d86
OXC81mn9uNeA/GtxN7Lxc5opMXMtdvtKjOR365N/LWo21Mxa1Ub7QdZanA6I
/sPwyHzyr0Vri46PXYwe+dfifOvzYkV7XfKvxWfDrJLfDWh/2bkWicYKT35q
ziU/F4aGF8fbacwZYkUuzu+4uWi3jg69Hy5Wut52FpnSflWfC5Wubs2j7lr0
/riwq3fTLRDNHmIXLhY9T44xzZtF75cL59ZJzqPaaP/L5eLDe/UtZROJxVyo
G7d3fveYOcSZXCjcDMLuHA3qw8X7kW/CtN7SfrqYiwFm25NEe2IpF7Oej3mQ
7aI+xM1cDKa+rSydNoP6clFycNyom/20P+/novnzexVWy3Tqz8OR6tGv5Wun
UX8e+Gj6x698KvXnIdJYfLyngvb7+jyUmMTcd7ymQv15WOBfpzr7gTL158HB
7lOz0qcp1J+HgcDid3VqxFwelulNVG5bSecJYh4aXRS+/kyZTP15KPALzu2p
m0T9eYjOlNo7yhIX8zC1r//7I086n5DyYHi19LTraUXqz8OXC7NnRo0m7uRB
b8pJn7o7dL7Rz4OLeoXnu6PjqX8cdKaFy/fF/0b945CyyKPCNECe+sdhoetI
Y7YznZfoxyFK+1yb0ko56h8HvcB1XU0ustQ/Dh3d3ZcXsui8hRUHtTtapT0J
Y6h/HBLHDuRlHB5N/eNQK/owrrGezmsy49AdNOG14+eR1D8O+0NV2LUGxMVx
MLte//QeX4b6x2HLDO27y67Q+U9zHHyDOOuvjCfujAMnbc4omTAG9Y+D6qEl
Fw6lDtL5ER8Z/34rrXCi8yRFPlqtCvqea/wcYiYfz5PGzS8c8WOI9fk4UTdG
sqfv2xD/ulrSdw6M0H/2dYhd+Cix3x077RmdX7H4MHm+6FHvq89DzOXj/sY6
H8vBT0Ms5qOy4P5fl6cTZ/IxecT5w4Og8zAJHwULmy5e5nwY4mI+EmYkp2fl
0/mZlI8O15Kdls/ofK2ZD6HW7LhYbeLOX/MvlD628uk8rp+PCoHjtnk3h8/r
BKiZ5LBpgQaxogAJ7Xeqlo6k8z2mAJl1ibM4zf9SfwEUhL1GGwr7qL8A+skv
Cvt3vaL+v/KbrD2+Sb3UX4CQ7Z2bneJ7qL8ANo0fPIISX1J/Acw2Lyk0SH9B
/QXoXeBiFCD5h/oLMEuiGLZd2k39Bdiq8UbJv+c59RdA68CLMvE04mYB2j76
yB1376L+AthmPvxbkPWM+gvQkpivfbr9KfUX4mD3gydf5xErCpGSoZ33e0on
9RdCxiym+fiVJ9RfiBzlMZlnNj+m/kIoMGQE9z07qL8QZu/qkguN2qm/ELsq
zwWWqT2i/kKIHZrepin+Tf2F6E3+Iimf8JD6//LNyu5vV35A/YXY7LBuzkGd
/1B/IYru+mSnWbdRfyHy/PwMXCLuU38hnpVpmh/dd4/6C+GYlXRE+VYr9RfC
5sanUM4oYoYIr79lnfVc0UL9RVhz17Eied9d6i/C8vg5ktPdzdRfBFSa6u2w
IIYIXs+vv65b+hf1F8FAw2TZgzFN1F+EmWVZTo87Gqm/COtFA8oB0gbqL4Jh
6E71f87epv4iZF4vni534k/qL0LelwyTgFO3qL8ICcwbOeKym9RfhNbCY4sU
bt+g/iLsmqnZXvTyOvUXYbsK/8ugwnXL/wIUoLzg
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {4}}]& ], 
          "100"], Annotation[#, 100, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHk41GsbxwcnRQtaaFFUkmTXQpSvPSVkC6Gxb4OZMTNFWZISbaKUUg1R
OqlsqUNqOrZOSaKNSuJ1ShHatOrtvdz+eP0z1+e6557P7zt+8/ye557rG+kY
IM5gMCLEGIz/vY78DZj8/ysD5T1vpnSt6iceh9K3U52mBo+yLMrWStf3ao6+
fyr8RCv10sYMEk9H09DhxtuG74kVsahY7NGhxg/EypBSel69ruET8TwsHba1
9DX5QqyCzq51z4wMvhOrIpNZzgu7M0ysBillfz2JFDGMsDoe3DAVTZ/2B7EG
mAzN072zxhJrITRMPryhRJpYB9+rxt7qeT+JWBf5BaH1Yj/liPVgNNc55cin
qcT6sNuvia7N04mX4KlZpbZptiLxUuw7uta5+IYy8TIka6zN2Z0zn3g5Hh5M
WZo6diGxAfKTrfcqSS0mNoRPaOeSRze1iVdA+HdP9YRzesRGMNeyXyg5sJTY
GNFfzzWaNxgSr8Tm1yfZ89xWEa+CXOBQvF2rKbEJFnvYNI9nWBIDoo+ZP/Iv
rx7hBOCNzJMizSnrqG6KEw5vdCRmrae6KbagpNlO2ZnqZrg7fWDcqQsbqG4G
oWqMdULbRqqbY5PlUP1yHybVzcEKlt5bYeZHdQuouyXah+QFUt0C+1lvs18e
D6W6JVZZTL+hahZJdUtsfK2pKOXBpboVZBr3nPdP4VPdCp96Dw3MMIumujVs
bcY3l2fFUt0aj7Supqxx3k711dCZbRz3yyKJ6qsx5oEClC4mU90GF7f8M9NK
uIfqNng1+aZKmXwa1ddg10qFZzZl6VRfg+MTuj7VlBym+lqsqzwYoqOYRfW1
uH47wT3nRzbVbbH0UMjH9GIh1W1Rd+Vrqr72aaqvQ7hcWaHaz3yqr0NTnuLx
JUrnqG6H66XP25UyC6luh6ijIc5x2kVUt0f0vEtyFoYlVLfHVvnXawJ8y6ju
gJ8Veal7c8tHGA5Qs388w6b/Kr3fAZO/GOXsN64cYZEDCsYEO4THVlH/esh0
zdnZl3eD+tdD4kVJ+ZYWEfWvR1CWVUnctZvUvx4mxzJzAlP+pn5H/Bo7P8Np
eTX1O2LFs4Bp5TXECY7IuBP/3EC3hvodMayo8C4jlpjhhHDRXBfX88RwgubO
hRoXrhEnOOEO1tlrlo32O+HMQZn4vEOj/c7YGxvt8oE52u+MislrlvTOGu13
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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {5}}]& ], 
          "120"], Annotation[#, 120, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ]}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.6027130534070644, 2.938832587142849}, {
               133.83982458775048`, 7023.2042573565}], 
              Offset[{0, 0}, {135.99180327868854`, 7532.6533531694395`}], 
              Offset[{0, 5}, {135.99180327868854`, 7532.6533531694395`}], 
              Offset[{0, 10}, {135.99180327868854`, 7532.6533531694395`}], 
              Offset[{0, 10}, {135.99180327868854`, 7532.6533531694395`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.6027130534070644, 2.938832587142849}, {
               133.83982458775048`, 7023.2042573565}], 
              Offset[{0, 0}, {135.99180327868854`, 7532.6533531694395`}], 
              Offset[{0, 5}, {135.99180327868854`, 7532.6533531694395`}], 
              Offset[{0, 10}, {135.99180327868854`, 7532.6533531694395`}], 
              Offset[{0, 10}, {135.99180327868854`, 7532.6533531694395`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.770405222134457, 22.}, {135.99180327868854`, 
               7532.6533531694395`}], 
              
              Offset[{9.77040522213446, 10.000000000000002`}, {
               135.99180327868854`, 7532.6533531694395`}], 
              
              Offset[{-7.22959477786554, 9.999999999999998}, {
               135.99180327868854`, 7532.6533531694395`}], 
              
              Offset[{-7.229594777865543, 22.}, {135.99180327868854`, 
               7532.6533531694395`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["40", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{1.2704052221344588`, 16.}, {135.99180327868854`, 
             7532.6533531694395`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.5840788653408553`, 2.5476840754654857`}, {
               141.39747091973277`, 2277.1661045360956`}], 
              Offset[{0, 0}, {144.99180327868854`, 2557.829377405077}], 
              Offset[{0, 5}, {144.99180327868854`, 2557.829377405077}], 
              Offset[{0, 10}, {144.99180327868854`, 2557.829377405077}], 
              Offset[{0, 10}, {144.99180327868854`, 2557.829377405077}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.5840788653408553`, 2.5476840754654857`}, {
               141.39747091973277`, 2277.1661045360956`}], 
              Offset[{0, 0}, {144.99180327868854`, 2557.829377405077}], 
              Offset[{0, 5}, {144.99180327868854`, 2557.829377405077}], 
              Offset[{0, 10}, {144.99180327868854`, 2557.829377405077}], 
              Offset[{0, 10}, {144.99180327868854`, 2557.829377405077}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.889949243294835, 22.}, {144.99180327868854`, 
               2557.829377405077}], 
              
              Offset[{8.889949243294838, 10.000000000000002`}, {
               144.99180327868854`, 2557.829377405077}], 
              
              Offset[{-8.110050756705162, 9.999999999999998}, {
               144.99180327868854`, 2557.829377405077}], 
              
              Offset[{-8.110050756705165, 22.}, {144.99180327868854`, 
               2557.829377405077}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["60", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.3899492432948369, 16.}, {144.99180327868854`, 
             2557.829377405077}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.5198393348498518, 2.9546179221589486`}, {
               92.94931912272827, 7431.912009464681}], 
              Offset[{0, 0}, {94.99180327868854, 7995.535993613318}], 
              Offset[{0, 5}, {94.99180327868854, 7995.535993613318}], 
              Offset[{0, 10}, {94.99180327868854, 7995.535993613318}], 
              Offset[{0, 10}, {94.99180327868854, 7995.535993613318}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.5198393348498518, 2.9546179221589486`}, {
               92.94931912272827, 7431.912009464681}], 
              Offset[{0, 0}, {94.99180327868854, 7995.535993613318}], 
              Offset[{0, 5}, {94.99180327868854, 7995.535993613318}], 
              Offset[{0, 10}, {94.99180327868854, 7995.535993613318}], 
              Offset[{0, 10}, {94.99180327868854, 7995.535993613318}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.909870657312647, 22.}, {94.99180327868854, 
               7995.535993613318}], 
              
              Offset[{9.90987065731265, 10.000000000000002`}, {
               94.99180327868854, 7995.535993613318}], 
              
              Offset[{-7.090129342687351, 9.999999999999998}, {
               94.99180327868854, 7995.535993613318}], 
              
              Offset[{-7.090129342687354, 22.}, {94.99180327868854, 
               7995.535993613318}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["80", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{1.4098706573126478`, 16.}, {94.99180327868854, 
             7995.535993613318}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.5495340585819285, 2.9492392779254915`}, {
               88.39561319153188, 8655.52169220784}], 
              Offset[{0, 0}, {90.99180327868854, 9331.994684424031}], 
              Offset[{0, 5}, {90.99180327868854, 9331.994684424031}], 
              Offset[{0, 10}, {90.99180327868854, 9331.994684424031}], 
              Offset[{0, 10}, {90.99180327868854, 9331.994684424031}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.5495340585819285, 2.9492392779254915`}, {
               88.39561319153188, 8655.52169220784}], 
              Offset[{0, 0}, {90.99180327868854, 9331.994684424031}], 
              Offset[{0, 5}, {90.99180327868854, 9331.994684424031}], 
              Offset[{0, 10}, {90.99180327868854, 9331.994684424031}], 
              Offset[{0, 10}, {90.99180327868854, 9331.994684424031}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{13.365847560676112`, 22.000000000000004`}, {
               90.99180327868854, 9331.994684424031}], 
              
              Offset[{13.365847560676116`, 10.000000000000004`}, {
               90.99180327868854, 9331.994684424031}], 
              
              Offset[{-8.634152439323884, 9.999999999999996}, {
               90.99180327868854, 9331.994684424031}], 
              
              Offset[{-8.634152439323888, 21.999999999999996`}, {
               90.99180327868854, 9331.994684424031}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["100", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.365847560676113, 16.}, {90.99180327868854, 
             9331.994684424031}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.5214249678593167, 2.9543385051298556`}, {
               94.47907466359732, 7096.806483302719}], 
              Offset[{0, 0}, {96.99180327868854, 7788.020596686363}], 
              Offset[{0, 5}, {96.99180327868854, 7788.020596686363}], 
              Offset[{0, 10}, {96.99180327868854, 7788.020596686363}], 
              Offset[{0, 10}, {96.99180327868854, 7788.020596686363}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.5214249678593167, 2.9543385051298556`}, {
               94.47907466359732, 7096.806483302719}], 
              Offset[{0, 0}, {96.99180327868854, 7788.020596686363}], 
              Offset[{0, 5}, {96.99180327868854, 7788.020596686363}], 
              Offset[{0, 10}, {96.99180327868854, 7788.020596686363}], 
              Offset[{0, 10}, {96.99180327868854, 7788.020596686363}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{13.168456553191426`, 22.000000000000004`}, {
               96.99180327868854, 7788.020596686363}], 
              
              Offset[{13.16845655319143, 10.000000000000004`}, {
               96.99180327868854, 7788.020596686363}], 
              
              Offset[{-8.83154344680857, 9.999999999999996}, {
               96.99180327868854, 7788.020596686363}], 
              
              Offset[{-8.831543446808574, 21.999999999999996`}, {
               96.99180327868854, 7788.020596686363}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["120", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.1684565531914273`, 16.}, {96.99180327868854, 
             7788.020596686363}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Infected Severely Symptomatic Population\"", TraditionalForm],
      PlotRange -> {{0, 366.}, {0, 10617.352909984615`}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"40", "60", "80", "100", "120"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Quarantine start\"", {FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"Quarantine start\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8995619609444437`*^9},
 CellLabel->"Out[38]=",
 CellID->6297001,ExpressionUUID->"b6d00a48-2484-4208-8c06-57135400616e"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " We use the code in this section to do the computations in the section \
\[OpenCurlyDoubleQuote]Sensitivity Analysis\[CloseCurlyDoubleQuote]."
}], "Text",
 CellChangeTimes->{{3.7955975062695227`*^9, 3.795597589374229*^9}},
 CellID->1942365572,ExpressionUUID->"e3b9dd12-a478-404a-9168-10ad26ce140c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensitivity analysis", "Section",
 CellChangeTimes->{{3.792452366394855*^9, 3.792452375114081*^9}},
 CellID->1806819801,ExpressionUUID->"6acfc638-af20-472e-bd5d-69ad5cff8a72"],

Cell["\<\
When making and using this kind of dynamics models it is important to see how \
the solutions react to changes of different parameters. For example, we \
should try to find answers to questions like \"What ranges of which \
parameters bring dramatic changes into important stocks?\"\
\>", "Text",
 CellChangeTimes->{{3.7938981500169888`*^9, 3.793898366706668*^9}, {
  3.795100878325115*^9, 3.7951009087070827`*^9}, {3.7951010029921713`*^9, 
  3.7951010084895678`*^9}, {3.795170768961863*^9, 3.795170769413739*^9}},
 CellID->1801626827,ExpressionUUID->"c1f9c3c8-b411-4609-821d-1e67c689e04b"],

Cell["\<\
Sensitivity Analysis (SA) is used to determine how sensitive is a SD model to \
changes of the parameters and to changes of model\[CloseCurlyQuote]s \
equations, [BC1]. More specifically, parameter sensitivity, which we apply \
below, allows us to see the changes of stocks dynamic behaviour for different \
sequences (and combinations) of parameter values.\
\>", "Text",
 CellChangeTimes->{{3.795100957041679*^9, 3.79510099225432*^9}, {
  3.7951010555826406`*^9, 3.7951012603693237`*^9}, {3.7951708078860826`*^9, 
  3.795170818990569*^9}, {3.7952674087005157`*^9, 3.7952674126047373`*^9}},
 CellID->422658689,ExpressionUUID->"b6c69873-43d5-4d88-80ef-9a28d6610883"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " This section to mirrors to a point the section with same name in [AA4], \
except in this notebook we are more interested in medical supplies related SA \
because quarantine related SA is done in [AA4]."
}], "Text",
 CellChangeTimes->{{3.795267203227233*^9, 3.795267332345087*^9}, {
  3.795267370461293*^9, 3.795267417520308*^9}, {3.795565116175413*^9, 
  3.795565134212556*^9}},
 CellID->1896165394,ExpressionUUID->"8931d240-3e64-4b0f-9d8b-1b28faeea61e"],

Cell[TextData[{
 StyleBox["Remark:",
  FontWeight->"Bold"],
 " SA shown below should be done for other stocks and rates. In order to keep \
this exposition short we focus on ISSP, DIP, and HP. Also, it is interesting \
to think in terms of \[OpenCurlyDoubleQuote]3D parameter sensitivity plots.\
\[CloseCurlyDoubleQuote] We also do such plots."
}], "Text",
 CellChangeTimes->{{3.795013668211664*^9, 3.795013734981288*^9}, {
  3.7950137722199287`*^9, 3.795013833600689*^9}, {3.795101271957756*^9, 
  3.795101286098137*^9}, {3.79511302478135*^9, 3.7951130275656443`*^9}, {
  3.7951130929913597`*^9, 3.7951130951341553`*^9}, {3.795170834841874*^9, 
  3.795170836982407*^9}, {3.7952674414102917`*^9, 3.795267455164312*^9}},
 CellID->194455478,ExpressionUUID->"174997e3-9769-4bc2-839b-9266713dabd0"],

Cell[CellGroupData[{

Cell["Evaluations by Area under the curve", "Subsection",
 CellChangeTimes->{{3.795094196928739*^9, 3.79509419969566*^9}, {
  3.795099572888494*^9, 3.7950995891435432`*^9}},
 CellID->1890591659,ExpressionUUID->"b37f1b0b-a24b-4cc6-917c-c5882ae0a69f"],

Cell["\<\
For certain stocks we might be not just interested in their evolution in time \
but also in their cumulative values. I.e. we are interested in the so called \
Area Under the Curve (AUC) metric for those stocks.\
\>", "Text",
 CellChangeTimes->{{3.795099265104815*^9, 3.795099342123198*^9}, {
  3.795103531561071*^9, 3.795103531942974*^9}, {3.7951708918581467`*^9, 
  3.795170954060261*^9}},
 CellID->1005971801,ExpressionUUID->"29595657-fae7-41b7-8585-4cf47dc20267"],

Cell["\<\
There are three ways to calculate AUC for stocks of interest:\
\>", "Text",
 CellChangeTimes->{{3.795099351000194*^9, 3.7950993678412027`*^9}, 
   3.795099401906522*^9, {3.795099483934515*^9, 3.79509949401252*^9}, {
   3.795170958773535*^9, 3.79517095917913*^9}},
 CellID->229306576,ExpressionUUID->"31eabe4f-1701-4f42-b1cf-28b7b951f86c"],

Cell["\<\
Add aggregation equations in the system of ODE\[CloseCurlyQuote]s. (Similar \
to the stock DIP in SEI2HR.)\
\>", "ItemNumbered",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089760847336*^9}, 
   3.7950898233284683`*^9, {3.795099372926099*^9, 3.795099393019205*^9}, {
   3.7950997001971207`*^9, 3.795099700199342*^9}},
 CellID->1369960114,ExpressionUUID->"9e8fc7c6-f10e-40b2-9aa8-fb68e14e475e"],

Cell[CellGroupData[{

Cell["\<\
For example, in order to compute AUC for ISSP we can add to SEI2HR the \
equation:\
\>", "Subitem",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089760847336*^9}, 
   3.7950898233284683`*^9, {3.795099372926099*^9, 3.795099393019205*^9}, {
   3.795099701048616*^9, 3.795099724178157*^9}, {3.795099781599737*^9, 
   3.7950997972372723`*^9}, {3.795170988007916*^9, 3.7951709880080643`*^9}},
 CellID->1747456511,ExpressionUUID->"b44c94d2-d6fa-4462-b02f-29cc6f3a19ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"aucISSP", "'"}], "[", "t", "]"}], "=", 
  RowBox[{"ISSP", "[", "t", "]"}]}]], "DisplayFormula",
 CellChangeTimes->{{3.795099727908627*^9, 3.7950997723975887`*^9}},
 CellID->515224005,ExpressionUUID->"58085121-93e3-4519-87de-910661ea4cf3"]
}, Open  ]],

Cell["More details for such equation addition are given in [AA2].", "Subitem",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089760847336*^9}, 
   3.7950898233284683`*^9, {3.795099372926099*^9, 3.795099393019205*^9}, {
   3.795099701048616*^9, 3.795099724178157*^9}, {3.795099781599737*^9, 
   3.7950997972372723`*^9}, {3.795170993131672*^9, 3.7951710186244717`*^9}},
 CellID->715787331,ExpressionUUID->"2f4ece97-8fa5-4076-8935-0c8411402ba7"],

Cell[TextData[{
 StyleBox["Apply ", "Text"],
 StyleBox["NIntegrate", "Program"],
 " over stocks solution functions."
}], "ItemNumbered",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089781615912*^9}, 
   3.7950898214128323`*^9, {3.795099396483995*^9, 3.795099434599771*^9}, {
   3.795099497655407*^9, 3.7950995162761106`*^9}},
 CellID->34281623,ExpressionUUID->"9c55540f-2ce8-4aab-ad19-26f4f40c4c43"],

Cell[TextData[{
 "Apply ",
 ButtonBox["Trapezoidal rule",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Trapezoidal_rule"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Trapezoidal_rule"],
 " to stock solution function values over a certain time grid."
}], "ItemNumbered",
 CellChangeTimes->{{3.795089736023789*^9, 3.795089818577632*^9}, {
  3.795099437591412*^9, 3.795099465965087*^9}, {3.795099534164308*^9, 
  3.795099553158083*^9}, {3.795103565490394*^9, 3.795103567167635*^9}},
 CellID->645620365,ExpressionUUID->"efcdc3f4-bdab-457b-9dd5-1d41d61cacc0"],

Cell[CellGroupData[{

Cell["Below we use 1 and 3. ", "Text",
 CellChangeTimes->{{3.795099626944916*^9, 3.795099637114786*^9}, {
  3.795099900693989*^9, 3.795099903001273*^9}, {3.795100792496642*^9, 
  3.795100828423191*^9}, {3.795103515112382*^9, 3.795103516465373*^9}},
 CellID->1854089911,ExpressionUUID->"d1bf7fae-b793-4a61-8af9-5e38c2175b4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "TrapezoidalRule", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRule", "[", 
    RowBox[{
     RowBox[{"points", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"_", "?", "NumericQ"}], ",", 
          RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], ",", 
     RowBox[{"aggrFunc_", ":", "Total"}]}], "]"}], ":=", 
   RowBox[{"aggrFunc", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{
       RowBox[{"Sort", "@", "points"}], ",", "2", ",", "1"}], "]"}], "/.", 
     " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x1_", ",", "y1_"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x2_", ",", "y2_"}], "}"}]}], "}"}], ":>", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x2", "-", "x1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"y1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y2", "-", "y1"}], ")"}], "/", "2"}]}], ")"}]}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.899562253328212*^9, 3.899562254302639*^9}},
 CellLabel->"In[93]:=",
 CellID->893533069,ExpressionUUID->"0790dbf6-ddc5-456e-a32e-901a976682a2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "TrapezoidalRuleAccumulate", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"TrapezoidalRuleAccumulate", "[", 
    RowBox[{"points", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumericQ"}], ",", 
         RowBox[{"_", "?", "NumericQ"}]}], "}"}], ".."}], "}"}]}], "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Rest", "@", 
       RowBox[{"points", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"TrapezoidalRule", "[", 
       RowBox[{"points", ",", "Accumulate"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.899562265087582*^9},
 CellLabel->"In[95]:=",
 CellID->1519446002,ExpressionUUID->"88d49345-af98-4edb-9454-17b0231cf040"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variation of medical supplies delivery period", "Subsection",
 CellChangeTimes->{{3.795535285338819*^9, 3.795535298557781*^9}, {
  3.79556301816439*^9, 3.7955630264896393`*^9}},
 CellID->1701416207,ExpressionUUID->"cf665650-8f5c-4d8a-9b87-f79c9c2730ba"],

Cell[CellGroupData[{

Cell["\<\
Here we calculate the solutions for a certain combination of capacities and \
rates:\
\>", "Text",
 CellChangeTimes->{{3.795565272305983*^9, 3.795565309003253*^9}, {
  3.7956745368478327`*^9, 3.795674539909211*^9}},
 CellID->1957431244,ExpressionUUID->"c3028bb3-62c1-4a4e-8db3-72a59c3124a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "msdpVar", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"model2", "=", 
           RowBox[{"SEI2HREconModel", "[", "t", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"model2", "=", 
           RowBox[{"SetRateRules", "[", 
            RowBox[{"model2", ",", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Kappa]", "[", "MS", "]"}], "\[Rule]", "10000"}], 
               ",", 
               RowBox[{
                RowBox[{"\[Kappa]", "[", "HMS", "]"}], "\[Rule]", "100"}], 
               ",", 
               RowBox[{
                RowBox[{"mspr", "[", "HB", "]"}], "\[Rule]", "100"}], ",", 
               RowBox[{
                RowBox[{"msdp", "[", "HB", "]"}], "\[Rule]", "msdpVar"}]}], 
              "|>"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"msdpVar", "->", 
           RowBox[{"Association", "[", 
            RowBox[{
             RowBox[{"ModelNDSolve", "[", 
              RowBox[{"model2", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Union", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0.2", ",", "1", ",", "0.2"}], "]"}], ",", 
          RowBox[{"Range", "[", 
           RowBox[{"1", ",", "3", ",", "0.5"}], "]"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7955935868246117`*^9, 3.7955935950171413`*^9}, {
  3.795593636561391*^9, 3.795593641360437*^9}, {3.795593734283461*^9, 
  3.795593737083794*^9}},
 CellLabel->"In[97]:=",
 CellID->1244929515,ExpressionUUID->"4f814bab-bf24-4a62-bdad-d175addd9f08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.100286`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.899561961938995*^9, 3.8995622773266077`*^9},
 CellLabel->"Out[97]=",
 CellID->818037198,ExpressionUUID->"89f4ba4b-ddf9-4038-9bb8-af0183a1e487"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
As expected more frequent delivery results in fuller utilization of the \
non-occupied hospital beds:\
\>", "Text",
 CellChangeTimes->{{3.795565395213928*^9, 3.795565443858611*^9}},
 CellID->597185884,ExpressionUUID->"ccdc0942-7471-423a-addc-f48d20073d45"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "23532", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "HP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"#1", "<", "1"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"120", ",", "150"}], "}"}], "]"}], ",", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"160", ",", "260"}], "}"}], "]"}]}], "]"}], ",", 
          "Above"}], "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\ndelivery period\>\""}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795600858858877*^9, 
   3.795600869434511*^9}, {3.795600910026453*^9, 3.795600918113907*^9}, 
   3.795602036468244*^9, {3.795620035930011*^9, 3.7956200683485603`*^9}},
 CellLabel->"In[98]:=",
 CellID->1712069957,ExpressionUUID->"372c07cf-bc37-44ef-ae58-12c28e8246ee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "4667913008082273087"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "4667913008082273087"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{14207402798893712043, 10592560195941529422, 
      11976408150162479317, 8774051377267191991, 14262602857408757786, 
      13332953951969174148, 12866821361672866892, 11376658687317901288, 
      10484065355245143367, 9080073627467810268, 11558724656148741915, 
      5229487853297201262, 10145522434373313612, 14283843165186352566, 
      1619006969908428245, 10830484204721094444, 7884004121462288956, 1, 
      8279893860505128769, 2654035645268626087}], 0, 20, 20}, {CompressedData["
1:eJw9lctqZDcQhk3IItsheYE8gEF1r1pmacgiTMgDTIhnmI0H7IGQt8+nPmqb
5rRbOlKV/pt+/fvbx88/PDw8vP3E4+Onf397ff30358f+PHXy9vXLy/P/zy9
fH/+8vya/vmP/d6PPH7/+vb96Wf+8RRt99Wu0bGW9rqN17isFDNeyIo15U+/
MP5Ys0qWWXrmZFXXuiY6lR/KHh1MtkbedsrVjLhozbQm1eyqUMO248EeS0zT
69rIotpb2GI3sB+ntHlQmQmfDDUtvyp4SZfrYoi2luS6KqREuAqTMzqqsvTa
yJXWl1dyRqeDWadCpGV6J3W0jIPbOZzTuptU2j6JyqwzIbRC8fBmQWkuiYOT
yVSEdi+jpUyz+0SaiFC9xK2q1nUKlR5z0DWQDIDy0y0YBIcFiXHKhEWfBbIi
QGcD6LzSci1QGvFcuomQtZbcufNSeJzUlbeuqs6KhMVZu62AwLCyuJAdtlf3
aL5jou3slDHGzrXoYDjKzCGPbmCMUyxVX7rxuu0UtugXYtWGtpese7MOyCWp
yhMxSF8LHmm1UZq0re6KskNqgf/kbDQQJ5q7Wt0s60hAEj0YFF77WMENEC3Z
auWIc5jbrW11I/5sy5V5wRq5NZErBoXy6cxzNATb0M3RTQeGbK4KkDOBI3rT
KQpOB+4opDWyyTADgXqf2PT4jKUgdAHX6wymQnl8aHhlIP4aDxBt9IFVAd2d
ihc9SIYiDSYN3hFRRxkGzw1OKzIKVC6MANRRH+iF9cDBHANtRVhWN1EgeG+O
9AoFF14Dj9wL9a4kxO18DJCQq9FC3CdWKUblb6hC5/buoNhqqS1Xv0nq8DCI
LJAMo43IO68EUrRLbuwhwPWdKRdIxft0TnTgaHPVU0HRY85uGRvC+buBNFEj
RmjsSylOYyc3cDKTSZ8VIFjz9OFGKJwFZlfyyrrqkGAtgbyxF/txuLrrJbYV
HFwhlsQ5sggGMGHcZFTCgpN7wCabOewOwzB9wofoilisp1XbajsWkW1/xIN1
kRExZwe6liYHV2NwHuSenigZXre5AcFSJB/3nXBDCbmL7AslaR+zIV5Q2saB
O+GMt3EkRHqzfF8AWMsOFiRv0BUke++gW/ecRG21PZyQQyYRKwfqJkyRAKMC
2GArV2FBPzswQCe3ro+ndkTA+r4JwIGIfFfLwrLmhfTT0KrkJe1H58SLATQK
PQ3C10ZO/6gbZGmGKJvLOnCzUwSk4BrJcsdd0LE1QQL9W/no7P0WI6Jiv1c3
qP2wj9gpgZewJpeGjBw2MRJi2JcVWQhedHxbMGQs9xFeW0QX4XlXKdhzH3C7
AInt+0f6f0VRaPI=
     "], 4, 0}}, RawArray["UnsignedInteger64",{13778831065627278529, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899561961955698*^9, 3.899562277344783*^9},
 CellLabel->"Out[98]=",
 CellID->560878692,ExpressionUUID->"bfa93276-cbfe-4c7f-881b-cc41cccd8af5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
1Q==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {1}}]& ], 
          "0.2`"], Annotation[#, 0.2, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxd2GdU1FcaBvA/RdQY44gNBOMoKCBEQEQREB6KCNho0sufQZogTHeXaBgL
rgUVxRJLyGAlxsCA6IoYGNfeImJZ28IY10QxChEBiW3Z44vinS+cHw8P97yH
D9z3jhJlhyTrcxyXpcdx///6/tPiyX36QdG44hVeTVL6fh9YlfTZ5rJmA1mA
AW2Xqzcm7iIPRqpHk0Xj2lKyCfJz4qO0qUfI5jjYdjE3JLmGLMQSr9aHj9ad
JI/Gqf/eEie7nyNbwqr41xlrJlwmj4Xds33965yvkq2xxfHIAePn18jjUPtl
YrX95ZtkO1QO+PrE6zO3yeNh8nuzfWPjPbIDkrixpyI/15Ed0VupWBJRdZ88
ARtch1pULHxAdkLK0nP6If4PyRMxWdoa5Wn3O9kZ7id2+xVZPiZPQqCp4OTB
CU/Ik2EdUD/nRMRTsgvyo4tdAzc3k6dgv+mWH1Lau/8Orsg9lt7Rav+c7IYb
FRUXrf7WSnaH/zfLzB9feUGeCguPhXttXdrJHog22M23lHeQPeGxd7i5n0cn
GRCo1toENvz13ipAc83f0KbwNeVesDhY7Dky/i3lXsifp7GYKuTwPveGm+a7
kksj9N5b5Q33piTbhdb6lPsgLv/EuncwoNwHlq/LRjulGVLuC/OnTwObinpR
7ot8/wuGfX8zonwaQiYf35Hr0YfyaQgrzA+e8UNfyv1Q5BFtttCqH+V+OG25
LNP82OeUT8cf6VkvkkRfUD4dzQPW4aRAQLk/0qSdLSmvySp/2I3hHl14MZDy
AJy/f2T5vr+MKQ9Au+3WkdVfDKY8EPonZhZddxxCeSDcNwUbXZg3lPIZsNos
Nf2mZBjlM1D7U4qB7o0J5TOR8cL47ZPk4ZTPhPySmfHB+2aUz8JfxQsuukhH
UD4LU5xuDDxmMpLy2fA59eqtU4aQ8tkQhC66Ny18FOVz0JJ2yAWzR1M+B0Nv
d1rcCbWgPAiR1T6a66mW740gmLavWPxq9Rj6+SA0rN8YNqZm7Htrg7B/6lrN
RH1r6gcj9nB8hkmkDfWDURLemnlJO476wfjNOTokeqod9YOxqd8Y9zu/fEX9
EKzNe75CprSnfgj6aWJvlG53oH4ItsfsXyle4Uj9EIwd2eutbe4E6oci9xtx
zdY8J+qHov3nsiny7ROpH4ol+XnB+TXO1A9Fa1vr/cPPJ1E/DI/Hi6PrJ7tQ
PwxbbbMjrqybQv0wpOb5zdj/0pX6YdBkjbESKd2pPxcl1k8GDu3rQf25CPdO
snxU7kn9ubhnOXCzURWo3+Xzeb7Je72oHw7T5sgl1UXe1A/vOn9w/c97fagf
jnHaK7Hjqn2pH45T395NPN84jfoRGLBrUe2CwdOpH4GE9eFft0X5Uz8CO42O
hwWWB1A/Ao67XcJFZjOoH4kDl6IU2DaT+pHYub7euc12NvUj4W113ev763Oo
35W/+/vISReCqB+F4bWayplHgqkfBb22/XauZSHUj8LKDUUPfzocSv0olPm+
msRfCKN+NPqn698xfjaX+tEYI78St2FUBPWjMT1VvK48OZL60Uj3dmsJrY6i
fgymb+zrOs8ihvox0PXOr79dFEv9GPxne5Xf0fHx1I+BuM+lmwOuJ1A/Fv42
FS/fnuWpH4s1yR0PbpYnUj8WG0u859mViKgfiy3K9m93/5hE/TjkmwlnPzo+
j/pxcDc29Su9l0z9LndsXVTeL5X6cXjV3JZxJDCN+vFYFXwmbPX2dOrHo0mS
qTJ4PZ/68diWH6rSE2dSPx7ipkPyBR0LqJ+AMRWNk1wLs6mfACdHe/6rYjH1
EzAl78yktdYS6ifgzivtO0UkmePRxyHAZX46WchD/sZ79PxsMng8tyo+sEpC
5nlUVf6pFyglq3jorag3XtdtNY80v302+7qt5WHjrSsr7baOx2f39SrLu80l
4ljekNMV3RYmwvz8oLGHuo1ETBX5+n8wn4heTcPCPliViPnm+ZEfrE6EtHJo
9AdrE5GTtOujdYm47XP9ozkR9PMefrRQhLPqJx8NEeovPf1oXoTkVc8+WiVC
1dUeVovg8qSHtSJkvuhhnQilHT3MJeHayx4WJsGts4eRhISe5pOQ0dOqJIh7
Wp0ESU9rkyDtaR1jbt6nFjIGY56xirGasZaxjjGXzJzPGIx5xirGasZaxjrG
XApzPmMw5hmrGKsZaxnrGHOpzPmMwZhnrGKsZqxlrGPMpTHnMwZjnrGKsZqx
lrGOMZfOnM8YjHnGKsZqxlrGOsbcfOZ8xmDMM1YxVjPWMtYx5jKY8xmDMc9Y
xVjNWMtYx5jLZM5nDMY8YxVjNWMtYx1jbgFzPmMsgOyT8xmrGKsZaxnrGHNZ
n1rIGIx5xirGasZaxjrGXDZzPmMw5hmrGKsZaxnrGHPiTy1gLGTswBiMgxjz
jMWMVYwLxNhzS3l24Yd5xBhS9u6RNpOsEWPYiKvjHiZ0zyeGoaWP4aqZ5Dox
6twz5dOcuucVY8Kcb66VDCa3iNH3Yj9+8p90P+IkqH81uSXjPFkgQUVj6vKj
35GFEkwtDL27IovsIMFXR2pfu7iTIcGG4ZXVNr3JQRKc23I3Ivp7uo/xEtwv
7HAebUcWS3DTay3ndjiL5pfAf9mitTZu5AIJzqwuXZVWQ/c7tQR6omcj0j3J
GglyjtuvL6zpvg922TH6yXR3cp0EDdpFOQ1HM2h+Ca4V+M0omUhukcCoXXWp
uYzul5wU8ZvKx3eOIwukOPzA9N/6++g+KpRi4+OmU9NGkR2kiKvPbW3bSfdX
SKF+/qDS25QcJMUedUiviC103+WlyLuy/G7UYLJYioBDhplZhSk0vxQrGy9K
KweRC7p+X/Foif9muj+rpfD+8mCLjwlZI4XdltHlP++k+7ZWikHHfW+fH02u
k0LgOcY+5wDdz3Vd57UgoMGJ3CLFzg4jjUGtiOaXYUfOT0btM8gCGQLP1DjX
3qH7v1CGH2frr0nNIDvIcOS29nLbm+59QQaDNM387I3kIBluptquvWVN5mWo
Wj0oM20p7RtiGZIaXpf0+SftI6ou/+lWVdgcR/PL0PJs/9G+dmS1DBPNvhSm
Z9I+o5EhOXfhb6Ua2ne0MsR+P2zPzZfRNL8MG/aYVNzxJetkXf9BOvwqN9G+
1CJDjXvdxphHtE9xcjzfF3/rrCdZIEf0noDlzdtp/xLKMdy8/7RzneE0vxwx
/bzMpseSIcejuQXZ/L9ofwuSo23ULos+dmRejriLAbsct9G+J5bDuG7Tsyt9
ySo5DhqPqLixmPbDAjkO5xT7O7fR/qiW4+kX7Zd12WSNHJ5rGq0uPA2m+eX4
/B/fCh5kkevk2NrbQTiilfZTnRxRm81upOeQW+RY2X/5zmOG3furArkGsw7p
WdJ+K1Dg+JFrt2J8af8VKnCywCs7Zf4sml+B/gduzzLc0r0vK7C+Ki7F5Czt
00EKPBg15Grem0CaXwEDjxPX7KeQxQqYhtU/7vw77eMqBZReKy+eraV9vUAB
r7Cx8sWfkdUKWPyy0PpdFO33GgU2l5V87VjqR/Mr0H66OrTTiFynwOpthc/c
5tH7gE6BN2Vvfm04Te8HLV2rfmeN1TlbMqeEwEM3qGEzvTcIlFAph4l6G5KF
SmTZ2U+wVXrT/Eq8TAv6zPEPer+AEuYmc+5wKeQgJRYXbnq19AG9d/BKjKpN
mNC1FtD8Shx28o9dVt/9PqLEXhenwbt+pfeTAiUWXI/dIe6cSvMrIZrbcuvk
ULJGif07bq+RuNL7i1aJd4P3BAbNc6P5lbC+qV46eRO91+iUCF2ap3x3fgr+
B8cuAxo=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {2}}]& ], 
          "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHtczPkaxyeVI5e0uSsaJbmVhEjSR1HpXnS/TTNN96a5W/fJ4rhv2GXD
0djUctCFpaXWTkSKCFGptjpY5ZIolpDTeXny+535p9e75/f5PvP5fp+ZeZ7v
BH6qv7Afh8MRaXE4//v75dXhyPn/F2Bae2zRUyn9fwAEYYeL523fTWyAqhM+
t/dE/0w8HHkVFX5NO3OJRyOxv32CJu4csTFsuvZs9xdeJOYiZfjqp627LhOb
Yrdiq1y44BrxRIyt/9Z7u00l8SQ4rsvWr5pzm3gynPjfnjB8fZd4Klozu4pm
VN4nno7la40vfbxaR2yF0u/NrZuaGoitEXFtXmnw4GbimXCqKksLOt9CbIPp
GT5mp1c8JJ6FYTbW2v5uj4lno1ryMMRx+hPiOXD97Y3L4YltxLYoNNl96aTN
M+K56N/I9SkJekE8DzXx2vPdf3xJbIfVrr7HY9/2ncN8zF05mNM14zWxPer8
H1dbfNtJvADHrT6bt93qInbA7tVvc6fNe0u8EOqXgxI6Cv4mdsSjMaWmLgvf
O/Ydb5JDxBT3P7u/sArw2WCvM2XvR4ovwhmhwNEksofii2D/iW/mwOXgS9wJ
c6y/y74xTusLq5xgEmY1fcXkfhR3xjVzk7TP0KZ4L5/lG8yK16H4YlRM+pfD
08O6FF+MI9sP9tP7qz/Fl8C8smnv+oUDKL4ESbn37DyO61HcBe2a78essBhE
cRfUHJuWaHxhMMVdcbLDqEPA16e4K3Qtlyy4bGBAcTc89breFvuRWOUG99bn
LRVd31B8KZa4fFqX021I8aUIyFg+pkh/OMXd4Xxk6dbqmSMo7o6Hw1Z0lceM
pLgHds4dMGTdsVEU94COn3l306fRFPdE8S/e7c+EYynuifnv2nVPthhR3Au/
GJ8unicdR3EvLDXP7ndhtAnFvXG6Lah7VhKX4t6Y6eVcsyRwAsV98PjxbGt4
m1LcB+cUeaMeLDOjuC8mndx/sDpu4heGL14tzBV82GZOz/uicLHDXPOLk76w
xheHvcp+nN1vMun9oBSmh4wOnkJ6P7x1zwu8oZlKej9YrPzVLtRhOun9sDdZ
zn1w05L0/khw9RfLlDNI7w8nXkdF7gFr0vsj8MYvm8SbZ5LeH9WZC95NW29D
+mXg+ZWc379pFumXocVcPlt+YDbplyEtpdB9x8U5pF+G/LyMurOvbUm/HJf9
fXzvzJ1H+uXYOqrE89YuO9Ivx1S9D46/vJtP+uXYeenJWL5yAekDkG0zXHuk
3kLSB8DZNO6b1gJH0gcgzNJqR//zIH0AQpPM7YXZi0gfiNaheiuKDjuRPhDV
63eU/Z7tTPpAdO6t95tatJj0gThf3BBQ3rSE9EEQ7Vl5OmW4K+mD0F9pF/Um
xI30QRiQvcfTvWAp6YOgTLW14xt5kD4Yf15d5YIMT9IHozBtzZA307xJHwyV
pWJaZrUP6YMRlcXVs63wJX0IUoSifZ7n/EgfAlv1AZP5ef6kD8HczqjaU2eX
kT4E31/NmsKrWE76ULg8eHTDsD2A9KGwWdfotXtCEOlD4fFauqpAGEz6UGRW
T3mwrCiE9GGIy0wzjTELI30Y/Hd1ZtcdDid9GP71Y/2M36wiSR+G0nrRoaHV
UaQPx1GvzLqeMh7pw3HWovXO/YJo0ofDa1+p6/RjfNKH437kSHHWCQHpI2B2
u8yutTiG9BE4s/qRdW6DkPQROPuzTcksrTjSRyB41sFFV8bGkz4Sm067FmRO
SSB9JLpHeEinWSWSPhIvOnNf3picRPpIGNoFXno0Jpn0UfC1C797SyuF9FGw
nTZ685NmYlUU1ozTvZdWKCJ9FCpPHVK82pRKeh7SK37/4DRJ/IW5PBwX7X51
ZRMxeDj27GBSTgsxj4fUmFz5QFsJrc/Druv4ZB9BrObh7/S4vLFJxBoebnl6
TdcWEzfzYPwh9+4fEmJONN7nnZoWISXmRuNTg0X9D32MaHCfGKYf62NeNHY5
T96a18eqaFiPtNE63cfqaAzuiWr+yppoHCmXzjjTx83RGHJvg8dX5vBxf6Mo
4Ctz+Qi4UhP8lcHHks4ZoV+Zx4fj7K0Mq/joLstlWM1HffnBsK+s4cNpv044
k58P6fs05nmOAHOr/RjmClBx5SbzPAToGX6PWY/XW3cbzwQy+QX4YUQJ837V
AuQX+AmY/AIMHDoukskvwHd3Kt2Y/DFYU1foz+SPQVzzb8z6iMHOWxYs/zHo
MPk3y38MTLeWsfzHoNCXw/IfA6eV9Uy8OQbWRo9Y/oVwyuph+RdiW2EJwxDi
Q3E7K78Qw/eGMuurhChsOsPKL8Srzo0Ma4TYsquKeb5ZiMPjy1n5Y6E3fjXj
lxuLt8vyQpj8sXDYcIDZT14szHjbWflj0VC0i3leHYvCnnMMa2Khe03GcHMs
XmQNYfScODgFNrD8x+E7aX8mjjhIBr1n+Y9Dx7AO1v7HoUj6kuW/V1/wiuU/
Dusy9Vn+43BxtzErfzyC9N+w8sejrPgda//jcf+tAav+4nF8NPv84/H7JH9W
/l7OZO2Ppnd9bRtW/ccja9Yepl45Cfh1+ZkgJn8CWoxEPCZ/Am4cmMTa/wTs
/0nA1LMqAecLRzDrqxPgtX86K38CKn0GsfwnQFfwmXX+iRDZdrL8J+LobVa9
IRHt/7f/iXi20op1/omY3wmG1YkYM521niYR7x26WPWfCMMdTqz9T0KR3h5W
/iTMz17D+v5JwoWeCUz98JIgrNRh+U+C3rYcZr/USdjnHsboNUl4c0bM8p+E
g/O8WfmTkTsunmFuMl5lW7PqLxlt7jqs809GxGRWvaiS0XrgNev8k1FWzqpP
TTJuXn3O8p+MUxUfWfufAq/sWaz8KWg57cnKn4KKF92s/U/BoRmlrPwpSDjl
wtr/FBTv5LHOPwXxjRmsz18Kov7yYNWfCNdUrPPkipARrIhm8ougpyOIYPKL
8LaVH8XkF+F9UCMrvwhZIbUs/yIMi3Zm7b8II11Z9cRJhc0r1vclNxXKjX+z
6i8Vg7tY+8lLRaCUVZ+qVMCQtb/qVPyQHM7yn4pPJudYn7/e9Uq3MfXDESNt
8wmGDcSYEDSW9X7EUHPvMr+P1mJ8kzaQ9fsghv2vBcx++IrxR8B3rHoRo39E
E8NiMW7aZbI+P2Ic4LM+j+liXOouPvqurz9QixHVZZXamEic3/v8bMP24vA+
f2LERk/wtnMjrhLD56rjkTbLPr9iND6ThobqE3eIkSG06hzylPoZjgS1Uep/
ri0hNpBgxavn68f82NcPSWD29t1UdyGxtQSdDbYTxTZ9/ZEE3nmjzSveUz/l
K8GwRMtpf28l5klgdSJvpdZI4t4+yOG69kTlYerHVBIc/KibUmtGnC7BgusP
PI7kUP+mlkCcbXLN0YI4XwJrS1MToxzq/zQSCKs8U3ebEVdJYOw88Pb7TOoX
myWwfRZwL8uIuEOCtkH5Y+r2UX/JkcJef79jwzfEBlJkZFYOeraD+lGuFLZJ
oeMdBhBbS+F4cvEb3Y3Uv6L3+Xa3HBmH2FeKVaOF1/PXUr/Lk+Lqw3X2Dz/E
kn8psm6kt1iuJlZJMclo/Zq8D9Qvp0sRlG4RuHEtsVqKmZsKDK5wiPOl2DzU
1HHLJuq3NVIciH/r3DKIuEqKnLoh11r2Un/eLEXHa27eT+OIO6RQjclOHHac
T/5liC7t1omwJTaQwTJq6rL1V6j/58qQG/151IZAYmsZznqdHZbc1jcvyGD0
ebOj0zpiXxkW9GsoHjCCmCfD6yl2vhvDaN4Qy7C3ANXN6TSPqGTQk/c4T66I
IP+96636dDr0H8RqGdJ0HwxQutE8ky9DyZDGOSt20ryjkeHJc2FIyP1Q8i9D
hV7j1ZFmxM0yuO6T+B2T0bzUIYPh5eaJ/a/RPMWRY8LqSBsLLrGBHAGu9f/R
WkPzF1cO2YeaI9vrA8m/HFpHdVLOLySGHIfayleuz6b5zVeODd1xObeHEvPk
uF5jZ5u1luY9sRxzAj5OftJO86BKjtvdtQPTBcTpcqROnTsnvZ7mR7UcWe6e
eXWBxPlyxOc5hUfe8yP/cthttmobGkRcJcepUS+eNdXTfNosR8sD44Y/BMQd
cpSE33F3aqR5lqPA0si7fk/f0bxroEDx2OjtoWOJuQoo0p5qFIu8yL8CW3rc
yseL+uZlBUpDZh6Zp6Z52lcBrRkO/Jwad/KvwOVT7TyP4cRiBQy0/IwHBdI8
rlIg4Yp2VPkhmtfTFWhIsZ2a2ErzvFqB5F3ymtvziPMV0HSt1Hq804X8K7Bw
/PmjW57QfUCVAg9djQb8vIS4WYELd1ofjDxG9wcdCnAdPo2v1CfmKPFnxi2n
EyvpvsFAiSMeEv2fWp3IvxJJTTd/WxVGbK2Ex0xR7fw7dH8BJXJXRMg0nsS+
SlwURXR1VtB9B0+Joy+151z0JBYr8fGnnJcGR/vuR5TI1yqr/fYs3Z+kK3Fl
rXvElkoH8q+Ee9GobcOf031LvhJywQWPTgNiTS/fvBz2wd6e/CtRO6TGQyeF
7mualajJWbD3ryw7/Bf+JKif
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {3}}]& ], 
          "0.6000000000000001`"], 
         Annotation[#, 0.6000000000000001, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {4}}]& ], 
          "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
880/E83ef1JssfMMHcA+r7lSjC/vinpxnX0fSFHkyUmdsYbYVorislO8fdbs
+0GK0Y986muu0/cjTwpT52WhbjL2fSlFbVZ0YIEBsUSK1c4vysRH2PwgxRHd
U/mmM4lzpXgXIdGa0sTmGSnW147Y8I5PXC6F9cYfhrR10/yjlqLyJ9+xC1YS
N33l+gyT5XrErVIk7Vw3p247zVs9UkRN03+cZMrmLxlO6Cd2Hz9K8xxXhrxi
c9TZs3lQBq1bWbc6qmletJWh5vaF/gVexJCh1qax3LCZ5k+eDF0Nr6ylMcR8
GSybN2xb20nzq0SG/3kZOlaSyeZbGaLDePZBWsS5MliXZWvP207zcaEMCg+9
EfEWxOUyGB/ZHvLHaQGdX4a9Byr9MryIm2T4ZefDqI33aT5vlWH7qZ5GYxlx
jwzCHEMtCz02v8uR+/xj+fn9NO9z5egSf77V40psJsfdcq/32ScW0/nlENmv
X7qkk/YHyNHaeairzpKYJ4dZXefRjGTaN/hy1If6/51zgvYRiRyau9I3j+yl
fUUlB7ff3dzIkzhXjrz80TbrtkXS+eUIan9bJ35K+065HM8frFDWuRGr5ai9
bJ6/eQftR01yxPz8s2/ta9qfWuUYW6+5kx9C3CPHfJsdGxafDaXzZ2BZcWbA
OVNi7ld+n+Mm2kD7mFkGYt8/7l7US/uabQY6+q/G5ycRIwMlZw726T6k/Y6X
gfduZzcVLyTmZ6C2TZ0lbqJ9UJIBB+3Wpnn+bD/MwED32PE212h/zM3AupZl
9SODiQu/Pr5gx6X3d2jfLM/AeqXW5wtxxOoMWFXmjL7cSvtpUwZMp9zrOPWF
9tfWDBjdnWw+yYK4JwOjNd8s1PH3o/MrcGnNul7XlbT/chX44VF5/PEK2o/N
FNibvL3b9bk3nV8BY62X/zVbEUMBu9jX1yNSab/mKdCzct93p07T/s1XYAX3
j1kNGsQSBUYcDpmiCqF9XaVAwrEW9YVj8+j8ClSsCLBI1yIuVMChoP2kIp72
/XIFlvDc9KousfsABSJbftGZZEPcpEDyhYib+3fR/UGrAt37t7cNH0Tco8Cc
L/xe4crZdH4lmmY6ma5+Q/cRXCUquCH1/unEZkr4vU4+dLaL7i9slcgO7mwq
TieGEvPG8JcN76T7Dp4Sdidvh2/qp/sQvhL/aJbk5w0nlijxyr/f9tO0mXR+
JXbHaT47GEr3KblKeB1c67Z4tSudX4msmpZ43ZN0/1KuxKGtdeFLO+h+Rq3E
3Mz8xk0WxE1KnLd1nzJORPc5rUqYOz45oFfqjP8Fu7WYyg==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {5}}]& ], 
          "1.`"], Annotation[#, 1., "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHk41GsbxydtVEoqiTBKi1IJIYVvCpNS9jXMjHUwZjMj76mT6hA5imhT
iVLak1atU1qPFqk4aUHlRKu0aNHp7b26nz9e/7g+vvOdj+eai99z36ZCiU+0
BofDSerG4fzv+6+vdmfO/39B9E2354wXcvq5JkoqB5y2z84j1oF3rk/+GsE2
4sFYkrX04+OcA8T6+HJ6eqQ69hjxcJjbhK7wiT5LzIX/1XetrauqiEfAMNlS
ET39KrEZgt33eWZb3SAeDW0jUf+aKbeJx2J+f++9uh13iMfho/7jU5Nu1BFb
QNXj3vmuy/eJJ6Jgp71lY+NDYkuk75t1MahfE/FkiDxzlgZWNhNbIXTiuJEV
KU+JrXFxaYOGD6+F2AbGow1DnC2eE0+B6FiZW5FZG7Et1sl0q/ZZvSS2g5tb
D6/zga+J7dG8tt7BY+1b4qkYO/vI7phP7HNwAF9q1/l+UgfxNNRk3qses/A9
8XRI7mkYtd36QOyI3x8F7Bxv/4nYCb0U9wXthzqJneF8a5eRm9MXYkD/sdrc
4/HXX5wG7P+xuod5fhflM+CxqCdMwv+lfAaKJbdHOnI5+JW7wNkpfdd1o26/
OM0FFXaC0SljNSifiX/2zsj6ge6Uz8SJ3m3G1nE9KJ+FQ/Xj3V4U9aR8FqyW
7P9X859elLui8TInf4mTJuWu+JE4Zs6c3VqUu8Hg2Ru9lDF9KXeDqrtX7PCT
/Sh3x1PBk1eRwv6UuyO1LWBalY4O5Txsrh/YFtNFnMaD7qZRDX99GEj5bPQ4
bZ+086su5bNRtX5Cn1P9B1PugcJJH/LuTh5CuQeMB5Z8vhalR/kcVDw0/rF4
11DK5+BQ6obmxu/6lM/FFUX525fRBpTPRVL+6377mg0p98Sw3OIqe7kR5Z5I
veqneVLfhPJ5SGtv+mqdwKV8Hhae0r/jGmBK+Xz0DTK2wLwRlM/HgF2ndRt8
R1Luhf7rarbfjTX7xfBCR+Yc+beVo+j1XpAuK3EfdXb0L1Z7ISwPJTYaY6nv
DVGJKEQ/yJz63ujdsiLwunoc9b3RXbjeIcTRgvreaM5t5jbcnEB9H7zKuBSv
UE2ivg/yKt9ePlBoSX0fJL76slCaMZn6PhjSfOHV+CVW1PfF88rPe9anW1Pf
Fz/mdJklF9pQ3xfittMOf56dQn1f7H3S59rRDlvq++GoaalTrZ099f3wyfal
w61VU6nvB2PbhxZlnx2o74cC/3c9hKrp1PeHcYrg7RAtJ+r7wy/h7tPnh5yp
74//dLTKe1WC+v7Y+tDIInrHDOoHoDxgWfypIhfqB6BdFLr/zI6Z1A/A8Eh/
q3GnZlE/AI8tL7lfa3SlfiBc/l62XTzYnfqBGKQqFHwM5lE/ENdPznT0ODSb
+oE4GujgJDScQ/0gJBxLCMHGudQPQj/DmEEfx8+jfhA28SxNtt6dT/0gzPg7
U9v2Ly/qByPWoKE6/ag39YMxNLElPXuLD/WD8bQ16dHpRb7UD0YPycZ6ia8f
9UMw7fFWq05Tf+qHoGuBfea2VuK0EAzTCIw7WxZA/RBwhMaLCiICqR8Kq0z7
zQk6QdQPxSyNvPYVJ4nTQtGzo1pzfHgw9UMxIK3hY/43Ys4CvHXlCX+sCaH+
AsxOrdxTZhZK/QUwS/36+mI5sXoBfJdkTM6xW0D9MOjfzo+xqSRGGCJE2cte
TQmjfhgsXg5c17KfWB0Gs5JpjZ6m4dQPx6pelxq8c4kRDp1ln32GfyNOC0dn
UqaoThBB/XAY5+N42UViTgRy7DwsHgzkUz8C8387o8x3Jk6LgF2oof+qBGJ1
BL6sbjn3cC0xhw9D/5Ceq88Sc/nI4l+6faSFvR8fI8LqpoX1FfxiPh9VcSXX
1k0iTuMj5tkJicSHuJiPgzc2FX5QEKv5qOupZ2ddQNzEh9PGY4ftDhNzBCje
mqHR/zYxV4DGCz7bz78mhgDNKxvLwrSE5BfgvSrk8KuRxGkCNMS2cVIdiYsF
eBI/L75fALFagBVwEZWLiZsEcAuw10/6g5gjhPh4g8O8QmKuEFplqhnBB4kh
RB9RKG99FfMLcdlxh4FOPfML0Xn9ln11G/MLIVmg++jWN+YXws/y5Wcz7Ujy
C6ExTcfhthExJxL6u+O0H0wg5kZi+cfEEp4jMSLRUzGj1WQuMT8SSX28CmNC
iNMicW9vjd2IOOLiSJjd/rtvkJJYHYnr5ecnaC9j/kh8Hu+03G0V80dB3ZJ+
QbOQ+aPQmFanCNrB/FHQqujomFrO/FH4XThBdugk80fhm8vdzgsXmT8Kc/cv
jJPfZP4o1C8+uLiqnvmjYPEl62ZlE/NH4/fbxTVBbcwfjVFOB+9tf8f80Yg5
3Fen6AvzR8PA7Pkaj25R5I9GgB7Pd58mcXE0VOLl5pcHEKujUZ3nXluoR9wU
Da1a/7cWRsScGKwz19ZaMpKYG4MbkdzV+ebEiMHBF0n3EycR82MQ6PtirPYU
5o/BzrpLu1QOzB8DockAyV5n5o9BevCcxftnMX8MJvfxPP/7bOaPRbRLlZ7p
POaPRfdpq93X+TB/LD5Zru3TFMD8sVj7orEnJ5T5Y1GX0/NOZzjzx6Icjzqv
Cpk/FlGrHV4lxzB/LMJdq42+i5g/Du/OFjwTipk/Duec49aUSZk/Di/cXETX
Fcwfh2c5nltrVcwfh8ubO8JPpTJ/HApMra+sWMT8cWivNnllv4T542Czzbf+
1lLmF8G4V2im5x/ML0LsiuYPFRnML8LLmBCtblnML8L1ipm77bOZX4TWL14H
Q3KYXwSF65PXsauZX4SuN6smCfKYX4T3OVp27vnMH4+koX7nDNYyfzwS5lYu
eriO+eMhGKk0ytnA/PHo4bPRfUIh88ejdPj+jWc2MX88srU9DjltYf54vOYO
ND1UxPzxiEv9mjKkmPkTsHh7oHNiCfMn4Pamed+ObmP+BCQ++Dru/XbmT8Bd
3w08sx3Mn4BtN89cm72T+RMQ+yLbJKqM+RNQobh5TLGL+RMQqZ7yeeFu5k+E
RoOMl7yH+RMRpOuvGbOX+ROxpmzA2nn7mD8RA2d58ybuZ/5EtNm5Lux5gPkT
sfPdmZS7jNWJEO/bvG7TQeZPxNIhD01Dy5lfjIhHppGDDjG/GBV5p4ovMoYY
3bl/mEgqmF8MI5t7poMOM78YgobN/5QzLhZDPDhqD+8I84uhFBSUNTBuEmP6
A7le7FHmT8LqLeYT3jDmJqFue62J9BjzJ6H8yDLua8b8JGwNE0VEH2f+JJS2
PO5zn3FxEvI/K+fzTjD/z9e/7x90mHFTEsaUvvE0qGR+CebMvRy0mDFXgst1
h4seMoYELx0ks+xPMr8Ei12DxLmM0yS4x1FOa2FcLIHWPekt21PML4Gkx25e
OuMmCZLeWl2qYcyRYuY7CIedJtaRovWT6/QIxlwpOvtfEG9jbClFrpufzlPG
kMKQl+FoeobYS4rEPa39whjzpZA5LVq7jrFUiukd517fYJwmxRrBnnHdzxLn
SmH+XFtgy7hYil7zU0tjGZdLsXnop97rGaulcLlXt+Ui4xop7tUuTWln3CTF
oj0aOw3OEbdLkTfg1NSZjDkyXAzq7xLPWEeG+l5Lz/xgfe7PfGvgwhvs87WU
ITdk2MgD7O8JMvhtyB7hvYadX4bnW17ahyjZ+WU4MDtzuJD9P5fK0G1QjXUn
e76kyfA+akCfoi56vuXK0Lk0b2jtX+x5KsPgBwuW91pLXC5D+ZYZbjtD2fNV
BtOw0v2DTYhrZHi5aIjVgUYhnV+GqNapV65uIW6XoairVONIMDFHDpHdzuLK
QcQ6cjzeFSg3vs7uY3KkN3RlmS4ntpQjUHfXs+/27H4mR2RM8Pa213Rf9JJj
XOOQp3rbiPlyPBxoqXfEn1gqh6pMt+ylJrufypF169HEv1LoPpsrR+LxjEOZ
j+j+WyzH/eGH5f4zicvlGKihby3eze7Tcrx2ySntrUNcI8ckXtXxwBS6jzfJ
MaTX5mfZjXR/b5dDPGtx1E0eMUeB8+bvClwP0/1fR4Hf9r+xG2xCzFXg29KC
g8F/0rxgqUDm9aVjrb6xeUOB6ZruL44lEHspUPW2duW/j2g+4SvwPaJ2oJEP
sVSBCLmeidlVmmfSFNhjcXLMSBDnKrD+y+qiMSdp/ilWoPPyfW1HW+JyBZa7
XHEUH6H5Sa3AB/6CQLUNcY0Cd0pcujsep3mr6efve9Q3q3UacbsCwsEZzy9f
oPmMk4zICsvnDXOIdZLhaTt++uh6mue4yXi6ZUrh7ihiy2TsfpV3LeoDzX9I
RpfE60BABrFXMjiJSySLDYj5yShpqejaJ6D5Ufrz/ey0bc6sYfNlMmYcFbaM
vOpJ5//JvWwD/+5GXJyMpqzE6hpnmk/LkzFvq3ifxjKaX9XJKP0evkZ41YPO
n4wqgUbYM13ipmSk/W7o/puA5t/2ZKRqvPs87AjNxxwlZrf1L6zoQ6yjhNYJ
VZNtNM3TXCX+Wfmv4YYqNzq/Es33LXhXRhFDidCiq0OPZtM87qWEPKWF4/OR
5nW+EgXbOTNXCYmlSrTeUH4OvsPmeyUer95jvMOdOFeJi2MvrY8450LnV2KC
752pqQ7E5UpYTD1c23yC9gdqJaLTMyyzHIhrlPjDUDY64hztG5qUqPxTXuDr
TtyuxFlH8Z19pbSf4KhgrdM36KCa9hc6KsQZ8T6teuJI51dhQc5Ec4s+xJYq
lJpkHYy1o/0HVKgwaM8bET+Nzq/Cpz0eY5220b6Er0L5qAzu5kbap0hVyLS+
tNx4BNuvqDC3t6yyTET7l1wVHDXVKw2O2dH5VUgJHj8qpDdxuQrVX3mjPcJo
f6P++f5fy/+8eZz2OzUqzI47e71aj7hJhSMPqi+N/o8N/gv3kpTm
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {6}}]& ], 
          "1.5`"], Annotation[#, 1.5, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {7}}]& ], 
          "2.`"], Annotation[#, 2., "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#7"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
Gf4Ll9G5Pw==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {8}}]& ], 
          "2.5`"], Annotation[#, 2.5, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#8"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {9}}]& ], 
          "3.`"], Annotation[#, 3., "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#9"]& ]}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.35541172139355, 2.9788726908506975`}, {
               124.05161975451207`, 253.2994086390782}], 
              Offset[{0, 0}, {122.00819672131146`, 274.5774694313783}], 
              Offset[{0, 5}, {122.00819672131146`, 274.5774694313783}], 
              Offset[{0, 10}, {122.00819672131146`, 274.5774694313783}], 
              Offset[{0, 10}, {122.00819672131146`, 274.5774694313783}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.35541172139355, 2.9788726908506975`}, {
               124.05161975451207`, 253.2994086390782}], 
              Offset[{0, 0}, {122.00819672131146`, 274.5774694313783}], 
              Offset[{0, 5}, {122.00819672131146`, 274.5774694313783}], 
              Offset[{0, 10}, {122.00819672131146`, 274.5774694313783}], 
              Offset[{0, 10}, {122.00819672131146`, 274.5774694313783}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.338125112607977, 22.}, {122.00819672131146`, 
               274.5774694313783}], 
              
              Offset[{6.3381251126079805`, 10.000000000000002`}, {
               122.00819672131146`, 274.5774694313783}], 
              
              Offset[{-12.66187488739202, 9.999999999999998}, {
               122.00819672131146`, 274.5774694313783}], 
              
              Offset[{-12.661874887392024`, 22.}, {122.00819672131146`, 
               274.5774694313783}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["0.2`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-3.1618748873920213`, 16.}, {122.00819672131146`, 
             274.5774694313783}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.3822069041740022, 2.975553374147694}, {
               118.98448253723276`, 194.1800692215486}], 
              Offset[{0, 0}, {117.00819672131146`, 213.29499144371317`}], 
              Offset[{0, 5}, {117.00819672131146`, 213.29499144371317`}], 
              Offset[{0, 10}, {117.00819672131146`, 213.29499144371317`}], 
              Offset[{0, 10}, {117.00819672131146`, 213.29499144371317`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.3822069041740022, 2.975553374147694}, {
               118.98448253723276`, 194.1800692215486}], 
              Offset[{0, 0}, {117.00819672131146`, 213.29499144371317`}], 
              Offset[{0, 5}, {117.00819672131146`, 213.29499144371317`}], 
              Offset[{0, 10}, {117.00819672131146`, 213.29499144371317`}], 
              Offset[{0, 10}, {117.00819672131146`, 213.29499144371317`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.938431941950295, 22.}, {117.00819672131146`, 
               213.29499144371317`}], 
              
              Offset[{6.938431941950299, 10.000000000000002`}, {
               117.00819672131146`, 213.29499144371317`}], 
              
              Offset[{-12.061568058049701`, 9.999999999999998}, {
               117.00819672131146`, 213.29499144371317`}], 
              
              Offset[{-12.061568058049705`, 22.}, {117.00819672131146`, 
               213.29499144371317`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["0.4`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.5615680580497036`, 16.}, {117.00819672131146`, 
             213.29499144371317`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.4665184910993727, 2.9635047658916234`}, {
               122.99742152804656`, 224.78974808299915`}], 
              Offset[{0, 0}, {121.00819672131148`, 240.48882794715072`}], 
              Offset[{0, 5}, {121.00819672131148`, 240.48882794715072`}], 
              Offset[{0, 10}, {121.00819672131148`, 240.48882794715072`}], 
              Offset[{0, 10}, {121.00819672131148`, 240.48882794715072`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.4665184910993727, 2.9635047658916234`}, {
               122.99742152804656`, 224.78974808299915`}], 
              Offset[{0, 0}, {121.00819672131148`, 240.48882794715072`}], 
              Offset[{0, 5}, {121.00819672131148`, 240.48882794715072`}], 
              Offset[{0, 10}, {121.00819672131148`, 240.48882794715072`}], 
              Offset[{0, 10}, {121.00819672131148`, 240.48882794715072`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{7.287690121465388, 22.}, {121.00819672131148`, 
               240.48882794715072`}], 
              
              Offset[{7.287690121465392, 10.000000000000002`}, {
               121.00819672131148`, 240.48882794715072`}], 
              
              Offset[{-11.712309878534608`, 9.999999999999998}, {
               121.00819672131148`, 240.48882794715072`}], 
              
              Offset[{-11.712309878534612`, 22.}, {121.00819672131148`, 
               240.48882794715072`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["0.6000000000000001`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{-2.21230987853461, 16.}, {121.00819672131148`, 
             240.48882794715072`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.030467078272407, 2.8174700709318508`}, {
               134.7184686293967, 238.02035885124835`}], 
              Offset[{0, 0}, {132.00819672131146`, 247.2267965438587}], 
              Offset[{0, 5}, {132.00819672131146`, 247.2267965438587}], 
              Offset[{0, 10}, {132.00819672131146`, 247.2267965438587}], 
              Offset[{0, 10}, {132.00819672131146`, 247.2267965438587}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.030467078272407, 2.8174700709318508`}, {
               134.7184686293967, 238.02035885124835`}], 
              Offset[{0, 0}, {132.00819672131146`, 247.2267965438587}], 
              Offset[{0, 5}, {132.00819672131146`, 247.2267965438587}], 
              Offset[{0, 10}, {132.00819672131146`, 247.2267965438587}], 
              Offset[{0, 10}, {132.00819672131146`, 247.2267965438587}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.60181472416911, 22.}, {132.00819672131146`, 
               247.2267965438587}], 
              
              Offset[{8.601814724169113, 10.000000000000002`}, {
               132.00819672131146`, 247.2267965438587}], 
              
              Offset[{-10.398185275830887`, 9.999999999999998}, {
               132.00819672131146`, 247.2267965438587}], 
              
              Offset[{-10.39818527583089, 22.}, {132.00819672131146`, 
               247.2267965438587}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["0.8`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-0.8981852758308889, 16.}, {132.00819672131146`, 
             247.2267965438587}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.4000846797493391`, 2.653255149722919}, {
               164.45079439415247`, 233.40676284246865`}], 
              Offset[{0, 0}, {161.0081967213115, 241.51197799828338`}], 
              Offset[{0, 5}, {161.0081967213115, 241.51197799828338`}], 
              Offset[{0, 10}, {161.0081967213115, 241.51197799828338`}], 
              Offset[{0, 10}, {161.0081967213115, 241.51197799828338`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.4000846797493391`, 2.653255149722919}, {
               164.45079439415247`, 233.40676284246865`}], 
              Offset[{0, 0}, {161.0081967213115, 241.51197799828338`}], 
              Offset[{0, 5}, {161.0081967213115, 241.51197799828338`}], 
              Offset[{0, 10}, {161.0081967213115, 241.51197799828338`}], 
              Offset[{0, 10}, {161.0081967213115, 241.51197799828338`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.835254344435679, 22.}, {161.0081967213115, 
               241.51197799828338`}], 
              
              Offset[{6.835254344435683, 10.000000000000002`}, {
               161.0081967213115, 241.51197799828338`}], 
              
              Offset[{-7.164745655564317, 9.999999999999998}, {
               161.0081967213115, 241.51197799828338`}], 
              
              Offset[{-7.164745655564321, 22.}, {161.0081967213115, 
               241.51197799828338`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["1.`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-0.16474565556431875`, 16.}, {161.0081967213115, 
             241.51197799828338`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.1427003214396028, 2.9966041811125197`}, {
               240.3307741362832, 165.69057126682867`}], 
              Offset[{0, 0}, {240.0081967213115, 174.10630432834256`}], 
              Offset[{0, 5}, {240.0081967213115, 174.10630432834256`}], 
              Offset[{0, 10}, {240.0081967213115, 174.10630432834256`}], 
              Offset[{0, 10}, {240.0081967213115, 174.10630432834256`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.1427003214396028, 2.9966041811125197`}, {
               240.3307741362832, 165.69057126682867`}], 
              Offset[{0, 0}, {240.0081967213115, 174.10630432834256`}], 
              Offset[{0, 5}, {240.0081967213115, 174.10630432834256`}], 
              Offset[{0, 10}, {240.0081967213115, 174.10630432834256`}], 
              Offset[{0, 10}, {240.0081967213115, 174.10630432834256`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.499999999999998, 22.}, {240.0081967213115, 
               174.10630432834256`}], 
              
              Offset[{9.500000000000002, 10.000000000000002`}, {
               240.0081967213115, 174.10630432834256`}], 
              
              Offset[{-9.499999999999998, 9.999999999999998}, {
               240.0081967213115, 174.10630432834256`}], 
              
              Offset[{-9.500000000000002, 22.}, {240.0081967213115, 
               174.10630432834256`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["1.5`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.}, {240.0081967213115, 174.10630432834256`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.3874758694588443`, 2.659870431368683}, {
               176.500685646063, 121.59461472570042`}], 
              Offset[{0, 0}, {173.0081967213115, 129.91270530045787`}], 
              Offset[{0, 5}, {173.0081967213115, 129.91270530045787`}], 
              Offset[{0, 10}, {173.0081967213115, 129.91270530045787`}], 
              Offset[{0, 10}, {173.0081967213115, 129.91270530045787`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.3874758694588443`, 2.659870431368683}, {
               176.500685646063, 121.59461472570042`}], 
              Offset[{0, 0}, {173.0081967213115, 129.91270530045787`}], 
              Offset[{0, 5}, {173.0081967213115, 129.91270530045787`}], 
              Offset[{0, 10}, {173.0081967213115, 129.91270530045787`}], 
              Offset[{0, 10}, {173.0081967213115, 129.91270530045787`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.999999999999998, 22.}, {173.0081967213115, 
               129.91270530045787`}], 
              
              Offset[{7.000000000000002, 10.000000000000002`}, {
               173.0081967213115, 129.91270530045787`}], 
              
              Offset[{-6.999999999999998, 9.999999999999998}, {
               173.0081967213115, 129.91270530045787`}], 
              
              Offset[{-7.000000000000002, 22.}, {173.0081967213115, 
               129.91270530045787`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["2.`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.}, {173.0081967213115, 129.91270530045787`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.8690218341964653`, 2.346648116632931}, {
               164.1920432162715, 96.38890784702751}], 
              Offset[{0, 0}, {159.0081967213115, 104.47501130645476`}], 
              Offset[{0, 5}, {159.0081967213115, 104.47501130645476`}], 
              Offset[{0, 10}, {159.0081967213115, 104.47501130645476`}], 
              Offset[{0, 10}, {159.0081967213115, 104.47501130645476`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.8690218341964653`, 2.346648116632931}, {
               164.1920432162715, 96.38890784702751}], 
              Offset[{0, 0}, {159.0081967213115, 104.47501130645476`}], 
              Offset[{0, 5}, {159.0081967213115, 104.47501130645476`}], 
              Offset[{0, 10}, {159.0081967213115, 104.47501130645476`}], 
              Offset[{0, 10}, {159.0081967213115, 104.47501130645476`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.499999999999998, 22.}, {159.0081967213115, 
               104.47501130645476`}], 
              
              Offset[{9.500000000000002, 10.000000000000002`}, {
               159.0081967213115, 104.47501130645476`}], 
              
              Offset[{-9.499999999999998, 9.999999999999998}, {
               159.0081967213115, 104.47501130645476`}], 
              
              Offset[{-9.500000000000002, 22.}, {159.0081967213115, 
               104.47501130645476`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["2.5`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.}, {159.0081967213115, 104.47501130645476`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.10437784778740883`, 2.998183660967298}, {
               253.24309686171128`, 82.97557122906258}], 
              Offset[{0, 0}, {253.00819672131146`, 91.35832551414059}], 
              Offset[{0, 5}, {253.00819672131146`, 91.35832551414059}], 
              Offset[{0, 10}, {253.00819672131146`, 91.35832551414059}], 
              Offset[{0, 10}, {253.00819672131146`, 91.35832551414059}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.10437784778740883`, 2.998183660967298}, {
               253.24309686171128`, 82.97557122906258}], 
              Offset[{0, 0}, {253.00819672131146`, 91.35832551414059}], 
              Offset[{0, 5}, {253.00819672131146`, 91.35832551414059}], 
              Offset[{0, 10}, {253.00819672131146`, 91.35832551414059}], 
              Offset[{0, 10}, {253.00819672131146`, 91.35832551414059}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{6.999999999999998, 22.}, {253.00819672131146`, 
               91.35832551414059}], 
              
              Offset[{7.000000000000002, 10.000000000000002`}, {
               253.00819672131146`, 91.35832551414059}], 
              
              Offset[{-6.999999999999998, 9.999999999999998}, {
               253.00819672131146`, 91.35832551414059}], 
              
              Offset[{-7.000000000000002, 22.}, {253.00819672131146`, 
               91.35832551414059}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["3.`", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.}, {253.00819672131146`, 91.35832551414059}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hospitalized Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 279.16879981882647`}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.05614711724959487]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "0.2`", "0.4`", "0.6000000000000001`", "0.8`", "1.`", "1.5`", "2.`", 
       "2.5`", "3.`"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\ndelivery period\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\ndelivery period\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.899561961955698*^9, 3.8995622776053534`*^9},
 CellLabel->"Out[101]=",
 CellID->1382449761,ExpressionUUID->"14f5cd2a-de87-40a9-bfb4-d8abdf898bb9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 3.79556297488484*^9}},
 CellID->626381146,ExpressionUUID->"38d1aea2-49fc-408b-8324-de3da25dcf9b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, 
   3.795563281577237*^9},
 CellLabel->"In[102]:=",
 CellID->623083228,ExpressionUUID->"54de55ac-130c-44f7-9f04-442246aa89d3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["0.2`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["0.4`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["0.6000000000000001`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["0.8`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1.`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1.5`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2.`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2.5`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["3.`",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "57115.71326420389`", "57115.605015460096`", "56879.28168170372`", 
     "55696.08778901941`", "49315.526867830384`", "35329.895747991046`", 
     "27810.53996205695`", "23062.482635619155`", "19770.50572411307`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 10 -> 
       GrayLevel[0.8], 11 -> GrayLevel[0.8], 11 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.899561962240336*^9, 3.899562277636485*^9},
 CellLabel->"Out[103]=",
 CellID->1207556234,ExpressionUUID->"901701e0-9481-4abf-ad49-4772e874eb24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Keys", "[", "aAUCs", "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
   3.795563107192247*^9, 3.7955631741147833`*^9}, {3.795563264992828*^9, 
   3.795563325092783*^9}, 3.795620031888612*^9},
 CellLabel->"In[104]:=",
 CellID->1029550224,ExpressionUUID->"d1da1896-0d20-41d9-a423-d42643635db6"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.3707501820830299, 0.}, {9.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
     Thickness[Small]}], 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 57115.71326420389},
          
          RoundingRadius->0],
         StatusArea[#, 57115.71326420389]& ,
         TagBoxNote->"57115.71326420389"],
        StyleBox["57115.71326420389`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[57115.71326420389, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4313012042008169, 0.7097759205635732, 0.9270779062234752], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 57115.605015460096},
          
          RoundingRadius->0],
         StatusArea[#, 57115.605015460096`]& ,
         TagBoxNote->"57115.605015460096"],
        StyleBox["57115.605015460096`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[57115.605015460096`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.44266275948036315`, 0.7161519513226462, 0.9290563287461763], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 56879.28168170372},
          
          RoundingRadius->0],
         StatusArea[#, 56879.28168170372]& ,
         TagBoxNote->"56879.28168170372"],
        StyleBox["56879.28168170372`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[56879.28168170372, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4995463629928824, 0.7480746588005271, 0.9389616453681149], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 55696.08778901941},
          
          RoundingRadius->0],
         StatusArea[#, 55696.08778901941]& ,
         TagBoxNote->"55696.08778901941"],
        StyleBox["55696.08778901941`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[55696.08778901941, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8069246368274217, 0.904409790285144, 0.8175731420277056], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 49315.526867830384},
          
          RoundingRadius->0],
         StatusArea[#, 49315.526867830384`]& ,
         TagBoxNote->"49315.526867830384"],
        StyleBox["49315.526867830384`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[49315.526867830384`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9473178151527465, 0.8098193389784154, 0.5921153576941275], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 35329.895747991046},
          
          RoundingRadius->0],
         StatusArea[#, 35329.895747991046`]& ,
         TagBoxNote->"35329.895747991046"],
        StyleBox["35329.895747991046`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[35329.895747991046`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8823121007068943, 0.6667030235145753, 0.7260185046870474], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 27810.53996205695},
          
          RoundingRadius->0],
         StatusArea[#, 27810.53996205695]& ,
         TagBoxNote->"27810.53996205695"],
        StyleBox["27810.53996205695`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[27810.53996205695, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8082461683459922, 0.5821341389677193, 0.9528843931054217], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 23062.482635619155},
          
          RoundingRadius->0],
         StatusArea[#, 23062.482635619155`]& ,
         TagBoxNote->"23062.482635619155"],
        StyleBox["23062.482635619155`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23062.482635619155`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{8.548798252002912, 0.}, {9.451201747997086, 19770.50572411307},
          
          RoundingRadius->0],
         StatusArea[#, 19770.50572411307]& ,
         TagBoxNote->"19770.50572411307"],
        StyleBox["19770.50572411307`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[19770.50572411307, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.3707501820830299, 0.}, {9.632810779315367, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{9.451201747997086, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {9.451201747997086, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}], LineBox[{{6.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
              0.}]}], LineBox[{{6.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
              0.}]}], LineBox[{{7.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 
              0.}]}], LineBox[{{7.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
              0.}]}], LineBox[{{8.451201747997086, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.451201747997086, 
              0.}]}], LineBox[{{8.548798252002912, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.548798252002912, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["0.2`", Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["0.4`", Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["0.6000000000000001`", Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["0.8`", Offset[{0, -2}, {4., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["1.`", Offset[{0, -2}, {5., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["1.5`", Offset[{0, -2}, {6., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["2.`", Offset[{0, -2}, {7., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["2.5`", Offset[{0, -2}, {7.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["3.`", Offset[{0, -2}, {9., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3707501820830299, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
    TemplateBox[{"\"Hospitalized Population\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.899561962508814*^9, 3.8995622776697397`*^9},
 CellLabel->"Out[104]=",
 CellID->1677160688,ExpressionUUID->"2e178411-e1a3-4ae4-8a6a-bc6c05aa5e5c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variation of medical supplies production rate", "Subsection",
 CellChangeTimes->{{3.7955353017302723`*^9, 3.795535314701345*^9}, {
  3.795562992357071*^9, 3.795563012415473*^9}},
 CellID->1374870889,ExpressionUUID->"b3348966-8374-4fce-8c70-c88155388def"],

Cell["\<\
In order to demonstrate the effect of medical supplies production rate (mspr) \
it is beneficial to eliminate the hospital beds availability restriction -- \
we assume that we have enough hospital beds for all infected severely \
symptomatic people.\
\>", "Text",
 CellChangeTimes->{{3.795565158971141*^9, 3.795565266859865*^9}, {
  3.795597674764045*^9, 3.79559768251436*^9}, {3.7956025006061974`*^9, 
  3.795602510124279*^9}},
 CellID->530989703,ExpressionUUID->"2c61564e-3c0f-43fa-aa96-ce211e9b7cb3"],

Cell[CellGroupData[{

Cell["\<\
Here are calculate the solutions for a certain combination of capacities and \
rates:\
\>", "Text",
 CellChangeTimes->{{3.795565272305983*^9, 3.795565309003253*^9}},
 CellID->1549385036,ExpressionUUID->"15e19ab1-61d0-41cd-98bc-d97ef3216f97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "msprVar", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"model2", "=", 
           RowBox[{"SEI2HREconModel", "[", "t", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"model2", "=", 
           RowBox[{"SetRateRules", "[", 
            RowBox[{"model2", ",", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Kappa]", "[", "MS", "]"}], "\[Rule]", "100000"}], 
               ",", 
               RowBox[{
                RowBox[{"\[Kappa]", "[", "HMS", "]"}], "\[Rule]", "10000"}], 
               ",", 
               RowBox[{
                RowBox[{"\[Kappa]", "[", "MSD", "]"}], "->", "1000"}], ",", 
               RowBox[{
                RowBox[{"mspr", "[", "HB", "]"}], "\[Rule]", "msprVar"}], ",", 
               RowBox[{
                RowBox[{"msdp", "[", "HB", "]"}], "\[Rule]", "1.5"}], ",", 
               RowBox[{
                RowBox[{"mscr", "[", "ISSP", "]"}], "\[Rule]", "0.2"}], ",", 
               RowBox[{
                RowBox[{"mscr", "[", "TP", "]"}], "\[Rule]", "0.001"}], ",", 
               RowBox[{
                RowBox[{"mscr", "[", "ISSP", "]"}], "\[Rule]", "1"}], ",", 
               RowBox[{
                RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
                RowBox[{"100", "/", "1000"}]}]}], "|>"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"msprVar", "->", 
           RowBox[{"Association", "[", 
            RowBox[{
             RowBox[{"ModelNDSolve", "[", 
              RowBox[{"model2", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "20", ",", "60", ",", "100", ",", "200", ",", "300", ",", "1000", ",",
          "10000"}], "}"}]}], "\[IndentingNewLine]", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.795535462982524*^9, 
   3.795535470517447*^9}, {3.795535574644824*^9, 3.7955356259502153`*^9}, {
   3.79553567769163*^9, 3.7955357604599743`*^9}, {3.795535811137045*^9, 
   3.795535880957884*^9}, {3.7955359309335117`*^9, 3.795536034073927*^9}, {
   3.795536161651259*^9, 3.795536189730521*^9}, {3.795543106794696*^9, 
   3.7955431203157387`*^9}, {3.795543178458723*^9, 3.795543203355995*^9}, {
   3.79554328182514*^9, 3.795543320377591*^9}, {3.7955433507418013`*^9, 
   3.795543365591765*^9}, {3.795543403036688*^9, 3.795543483430274*^9}, {
   3.795543541726907*^9, 3.795543736375537*^9}, {3.795544043946135*^9, 
   3.795544130359878*^9}, {3.795544180097293*^9, 3.7955442365476027`*^9}, 
   3.795544538178595*^9, {3.795544595194655*^9, 3.795544646147169*^9}, {
   3.79554472222055*^9, 3.795544750739852*^9}, 3.795544786920904*^9, {
   3.795544818960697*^9, 3.795544884254778*^9}, {3.7955449363568687`*^9, 
   3.7955450028638268`*^9}, 3.795545102522052*^9, {3.795545176592492*^9, 
   3.795545269517124*^9}, {3.795545426741288*^9, 3.795545522896562*^9}, {
   3.795545632167034*^9, 3.79554568327673*^9}, {3.7955457340172653`*^9, 
   3.795545771162369*^9}, {3.795545854866557*^9, 3.795545926449738*^9}, {
   3.7955459580991*^9, 3.795546008542389*^9}, {3.7955466355494223`*^9, 
   3.795546786953774*^9}, {3.7955468520256233`*^9, 3.7955468649855556`*^9}, {
   3.79554690224717*^9, 3.79554692666833*^9}, {3.795547003239843*^9, 
   3.7955470524341307`*^9}, {3.795559900628643*^9, 3.795560028780301*^9}, {
   3.795560074163666*^9, 3.795560187642342*^9}, {3.7955611986175423`*^9, 
   3.795561208316094*^9}, {3.795561275860918*^9, 3.7955612762565413`*^9}, {
   3.795617341850153*^9, 3.795617372672542*^9}},
 CellLabel->"In[105]:=",
 CellID->127596530,ExpressionUUID->"712b8ee7-0cc0-404d-a5d7-c414706ee3a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.067662`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.899561962586903*^9, 3.8995622777504063`*^9},
 CellLabel->"Out[105]=",
 CellID->169332694,ExpressionUUID->"e55b11dc-3940-44e7-9083-bb66c30dba4a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hospitalized Population", "Subsubsection",
 CellChangeTimes->{{3.795563051103643*^9, 3.795563053096005*^9}},
 CellID->1326200004,ExpressionUUID->"807149b4-7501-4570-8060-c27301d81a13"],

Cell[CellGroupData[{

Cell["\<\
As expected we can see that with smaller production rates we get less \
hospitalized people:\
\>", "Text",
 CellChangeTimes->{{3.795565316248878*^9, 3.7955653471752033`*^9}, 
   3.795603426000639*^9},
 CellID->710695015,ExpressionUUID->"31d4acbe-12d2-4d76-ab19-b4dbbdb49cdc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "1232", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "HP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"180", ",", "240"}], "}"}], "]"}], ",", "Above"}], 
         "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\nproduction rate\>\""}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.795534777979782*^9, 3.795534796956739*^9}, {
   3.795535348026557*^9, 3.7955353481371813`*^9}, {3.795535394164115*^9, 
   3.795535402712393*^9}, 3.795543185006671*^9, {3.7955602828778152`*^9, 
   3.795560324712989*^9}, {3.795560497799026*^9, 3.795560525416196*^9}, {
   3.795560913403819*^9, 3.79556100906176*^9}, {3.795561280212948*^9, 
   3.795561312467668*^9}, {3.795600929678321*^9, 3.795600952865465*^9}, 
   3.7956020313614893`*^9, {3.795619976752067*^9, 3.795619987270672*^9}},
 CellLabel->"In[106]:=",
 CellID->347072491,ExpressionUUID->"a60506d7-51cd-409a-9acf-33027268d9f5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "854944000600247430"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "854944000600247430"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{14355477304346926376, 12989230105791732603, 
      3248862495945632500, 16303754004261534129, 14579755244864132316, 
      8082275472263095222, 15283219449823562342, 4972758690124560311, 
      11886193496934566303, 3993435021588500651, 683668568726304221, 
      16597217912938570504, 302293280739086608, 12454751648237284022, 
      2036565878479326794, 718267114001427936, 1598720409174551969, 
      14848861574737823298, 3017746897332, 10097480066641799821}], 0, 20, 
     20}, {CompressedData["
1:eJw9lUuOHkUQhC3Egi2PC3AAS/mqzKwly5FYICMOAMK2vDGSbQlxe77srvbo
n575q7sqIyMjon/+658377559erV5++4vPnz318+ffrzv9+/58sfHz9/eP/x
7d8vH7+8ff/2U8a73+a5b7n8+uHzl5cf+ad6lXhvyzCuxfdrPVtNQqREw6Uy
za/1pcs6ttbWbu6E1MtPrL8ODys+ul2t3KLWfcOrSzuqvLQ8M9zuG1tFVyQl
JeKqZleJ19ldixJrt5jKLrk3LKnS2HPC8hUN9GtDm+8I2buDVsyz7oNqWSTY
Y9Max/HzVLa96VBMtCRTJQ5Wz2XuIKWquln3DWlJc861ommyl1zr5itXxWql
eItM07MOA6ut04VV+l9ZLz8MInVVyyF2wUnb3UCYmGsLz7vuZNPBk6Li26AV
WHuGdNi2YL8FrG4QsGH52bFEt0kxpgWh2+3uoCO9nbrq1IGJOiW03US2bWF8
HtPFYXsVbcDgDtuLHr5OOgchRQTA2WvlmVsl6A3S17CU5XowNexwL0rY67L2
Q7cUIxYqLeY8DZ0BqS4fansx6+2L+R71qYgHz6Oa4aNO286gIXZOm41ddkSG
TjYkUnenmrL13ACPIshWL+M8raozOtibQSaapXT32bBQTACrDEi0rvvwoRW9
eiNABGCyJO+TFqD0GjcaAFLnvjcwC8s1nOQu1JYRR2WpAM3xDsXa9+05s1A4
4/BAJg7ofesb5WrldpACB7EdXhsNYFuGwd/h4nHQCAO4VEExPe3fFdIZhDky
xsU7Mf2BinHoamU245smM48IFv2P6xodYEQC4T4pvDEEYuGeY/pHTvRkOSpM
W5y4cdoZBDW3lHMbyLh3naTBcfgBth25Bpyd7gpZj/zgbxTI713aFpwiSIbX
SMHWg3WlkxikFbgYNx094iAwUHyTgO6CTCuvkxzz86HIAJLQQxN+bKpyODVN
nVA5FYiYiTcezPEeXrt7kDVYi1yFdc2KGyoCT6RI9CAoQOTXICAOGUp5BNMn
nOSxdU+EknFQyszVbskYAtoc5pPHG2RfWb3GwlXRFLEDy1cCIQfyFB4Q6tXL
UX2MM8gBRJSG/Y4bJpgI4V4w1KN9uRvojFEcSLEOQu3HuUTa2IfzR5RJXp5E
1DE5DSS00fR+DKpJwpXMxIbcYhoXUBTHuwg+JmB56GQ9L42NCkd+Mc3Hk4iX
cgA1sUv2UUcfCcdEybBNrJPj1U/yJYmTSsqwcQy2r8qQvbAafp0bO+qmGnPE
JEjELpYJ5PsdQMzSkDHLmB6IK3neMpwybGJRZtT2mAqFchA2w5pMAn8eRLy5
kOIirkjQ0Xju/wEhjWoM
     "], 4, 0}}, RawArray["UnsignedInteger64",{17591800073109304186, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899561962595434*^9, 3.899562277760429*^9},
 CellLabel->"Out[106]=",
 CellID->558755783,ExpressionUUID->"5dba5b37-5fd0-4f26-a3d0-21b0150e28ad"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxV2HlYzO0aB/CxFBVJiixpKls1VCSR6qu9hGFKRWpapqZlavYQGTqW00ub
EiJj10tkKZJliGz1qsQhqvHalcQbEnKcy90fp3+6Pt19555n5jfPPPfPNCJp
Ea8vg8FI7MNg/O/3758OF8b//+BQpMZLl7di+vtAePn+bJ3xRzZZDy0DdvFz
wveRDVCUt92kactxshG076ssVDFl5DHInMOSLeJdIjOReoNR8jqjkmyG53bx
g3izb5LHYWV6eW361BryBET2D9ConV5HngRX7+Y9+h/vkS0heKK7y7rmAZkF
y8UfznyvekSeglyLZuuWlidkG3wo33chaJCabItA07UpgeVPyVMxJTzE/FTy
M/I0pIzTZizyfkG2g8TvDceF9Yo8HYPqc9wLx70h26O/15urx6a2kmfgxUfr
eVcC35Ed0GjiPss37z15JsytHhyO/tz7PswCT+bM6LT+SHbEowbzuonL/yHP
huH1Q+Zv7naSndA8Kf+ElcNnsjNYm+/wO05+IbsgxbVlqKfzVzKg0fV0gm9z
928rgHEmrloWW79TfQ7y+1TPMgntofocdHtpj3RiMvC77grv6ZcLqo37/LbC
FbYs6bjkSX2p7oYDqrqMn+hHdTdw/rk1YBq/P9XdMYJhYPG2UIPq7hB9/6Ch
9VKT6h6wqfBOWuM8kOoecHhhZjG3SIvqnmh+P8goeaIO1T1xxXz5tDHnB1Hd
C4eGx9ZERuhS3Qt2/T/OqNTTo7o3nuuk34j+TlZ44+iROy23O4dS3QcabrxV
h7r1qe6D++9nG1XoGlDdFwNn8bc22BpS3RfsqPlfbkUNp/pcOK/YMTj1yAiq
z4VsFPdzyw8jqvvhusfcf1p5o6juB893m78dfTqa6vOgim2/4iA2pvo8WLj8
+FBuZEL1+ThbNfzVtHgm1efjkb7WTY/FplRfgMwRtizMN6P6AiSGues3csyp
zoaZanBWQ8y43wYbGmk7db6lj6f/ZyNhQ9mTcZcm/LaKjZscbohd30mUX4jv
Rrg8IsiC8gthM6LcplplSfmF8Km8nBTsxKL8QrzddcCw8a/JlF+EHNk/K8Vy
a8ovgvvR7VXHd9pQfhHUtY3LhRtsKb8II2fy26zWTKU8B7Objv6Zv34a5TlY
c33fOOlOO8pzwMmfOGvzpemU5yBOl32z9KM95f3RqD/FuX6GA+X9IarNcrib
MZPy/ohul0w+3DWL8v7QNBFoRshnUz4A6m8hDYZazpQPQOa0yPZXJ10oH4Bm
b/11muWgfADMlH9M4h2cQ/nFKJS4BVcUulJ+MVo7rhRfPOhG+cVYme3oYVnh
TvnFYN0Ld73V4kH5QGTvSrcVGHhRPhDnX0Z5fwr2pnwg9PPYl3xO+lA+ENdz
/h4WMXou5YOwMs/2rssOP8oHwSrY7nGn1XzKByHk8If0woYFlA/CsPP9Wqff
ZlM+GB4/NP39yhZSPhhqs+x3M08sonwwlBs/pxaXcigfDAFrcVvYbX/KL8F3
q8UX9dsDKL8ERRcynLJNAym/BOlXo2JP8oIovwTZ/NE3OBXBlF+K+YZy3Sjz
pZRfiu6HrfseFYZQfilGbp1mcG5KKOWXwqkjRjmkIYzyIVj9tL6p5waX8r9y
TXlVD06GUz4E8fJYd9aRCMqHIDy3Knn/0UjKL4O7uHLy6wtRlF+Gu+dPjz/+
hEf5ZXhoWeR9UieG8sugGTjNtsyXT/lQpHkuZKXvjKV8KOrNLNHvexzlQ6EZ
FWHfR5hA+VCcCHV2EnwRUD4MIpvzf8/cmkT5MFi23B0zdZ+Q8mHY2zn59Nf1
IsqH4d+hw1irZGLKc8F7cfCyl0jy20wuLEpPpL1fIaXH48L/z7SfOlmy3+Zy
MfKYJs/xjJwen4tm38Z85qvk31ZyEfPX4d1RFiuoHxe2GX5fzqSs/G01F35e
wbevNadQ/3Cc3h5j6MdZTf3DEWj3KGZAYyr1D4eZ8wC7JzMV1D8ch1/unJKj
t5b6h8Ohe1N6+geyMhxd/Q0qrJrWUf9wlAW9rm66l0b9w/FKu0pH+8G/qH8E
5l+I3TPq+XrqHwEr4+S5K3s2UP8IpI23btk6fhP1/+VXa9vqgv9N/SOwR+fZ
hMKCdOofgZ7arEZu6x/UPwKp64/NVfhsof4ReLnZYAC3LIP6R2LvJ2tjm5FZ
1D8StXsW2rc3kxGJHV1XavKOZVP/SEzeyDNfsC6H+kfCUNftmzN3K/WPRF6s
lc4Gz1zqH4mzpTviMD2P+kfizpaJPf9ibaP+USizTX0Sxcqn/lE4NFT/+Fu7
7dQ/CpY9FQNHee6g/lGwrvUKX3OGrIgCq7/e19wwsjIKX5c8719VRXlVFJav
1nIIGklWR4HzI+F5CZ/6MXgI65rcNrqCng+TB1ed4IoqfTJ4kBc2JAYJ6flz
efhaqS58fY/Wp+BBb+9BzaVOZCUPd7vXrF97jF4PFQ/ue1xPTzIlq3nYefn4
mjEF9PoxovEwdWqTxSgyMxpj80M5JoX0eiMajiPDLWom9L7+0WgqPhuncYbe
H0U03NdeayrwICujkfPqa+udskzqH40l3nWbZG/p/VZHg3nTuf7F+N73Pwb/
SXk9oI5P1wczBosH6Pi2n9pM/WMQOdMl9Us/MjcGdetCZhQtpetLEQO/rbe2
XS3vvf5i8PGbzwyNsWRVDAY9mT1s+ia6XtUxGJ52W2DURdczg4/nq2MvJAvI
TD4qOXOyjV9vpP58NBht2/gghszlQ7MqwVrURp8PBR8Rxw59vSgjK/lY1JY0
IbMfWcVH3NsRpefy6POl5sPouoCtxyIzYrEocruLoIo+j8xYNGTYBR6JIiMW
qu8Nrws0ydxY5H1JKDU/Rp9nRSz256qbxwSQlbFQWBk95vUhq2JxNmdBdHPJ
Our/6/GD2+UxkWRGHLa51k59ZkRmxmGQk+ypXR3tJ4hD+/nSv7GZzI3D1OL0
/W0+vftPHN6fuLp1rHbv/hOHqpvDxlyqpv1KFYed7Fu5p7PJ6jjkV1fPfh1E
ZsSjkVVg42lGZsaDZTi0Uvh4DfWPR8ngEOMAOZkbD202b4W+IVkRj2/zHZek
naX9UhkPRo1JSdoysioetQfbajo0yep4rBpR4F90mvZbRgJMBqRZbYns3X8T
oNVWLV49nIwEPFqfnRxSvYr6J6Cz7NXhwevJigSElaRskoGsTMB7N0XRih7a
31UJ0FU+KWBcJqsTULVgTeuHtb37vwDWbfW69l5kpgBl/1kdUaZLhgAa4aXM
ZQ/p+4MrwOZn3oGGB8gKAdiJg9W3RWSlABaj+wbHzSGrBHgk8Dd+qt/7/SPA
qoCtTsYv6fuJkYgZkpvLB1eQmYmYOaHdfm82GYnoN69EcTOWzE0Ev7WgW+JG
ViTi+C2/ltyxZGUi5N1nusZ8W079E5Gh613Q85CsTsTu7OF7WefIjCTk3roY
uXM7mZmEjLRx5xxXkpEEs/0Jb/svI3OTfp3vu8++BVmRhAZV5ty/x5OVSchq
snV8qtPbPwk+27MUTR/p+1mdBLeBu5JrGskMISpKXRsPV5L1hLjW3XAhspjM
FOL+8JXpXflkGyEmzOrqE5pGhhCBOilTNyeR2UI4t7Qlp4SQuUIc/ha9cpwv
WShE6pvSSQoHskII0dfKMxsnkrOE+McxJ9duRO95QogLQeJUxQByiRDx8YFR
vC46f6iEuGXnK2l6Q64V4kBifnDpY7JaiFUV4mFlN8gdQlj8WW8cc5TMEKHK
/o+ELRvJer/Ml0rVIWSmCA6ntt3SZpFtRAi48ezRn5/oPAQR+NoTr3LOk9ki
sB4/7p+xsve8JMLbDetnP7QnC0Vos9584PB7Ol8pRNDvm6/mHyRnibD3R+hI
RRBZKUL43JaNvlrkEhF0My9nGZ+j85pKhOIhFcu8eeRaEZYYzdMwGEpWi2DM
2hdWWUHnvQ4ROKY8YS6v9/wnRuy8942Xdcl6YpzlVZ1fcZbOi0wxrkw+Wfch
jGzzyy2RjzkDyRCj6FrixRsldN5ki1H6s0gtCiZzxbhn27FO0pcs/JX3G5x+
P5DOqwoxLu+3/fHiaCKtX4xN16Pv+fQhK8Uw3LugeHIQnXdLxJB+XH6kvKT3
PCxGw1L700N1yLViTMnJfxgQE0/rF8Nv6sT8fdfpPN0hRqZZ1tihE8gMCcb6
xAnObqLzt54Ebl/q6o68o/M5U4LkxKI3n/zJNhJE6w+8f+wSnechwZ4R57Mf
WZLZEhi0VHat3xFN65fg9Kmiz+XaZKEEH0o976Sk9s4HErxuqxpS20nzQ5YE
4bXLq8sFZKUEG16ceDzrDc0bJRKwvn06zIkhqyQwd2vd0e91BK1fgpNFa3u8
48lqCWpLqx1MP9A80yHBcyf9m5tWkBlS6PRo8VL6k/WkqO+J1+/MpnmIKcXp
a52T35mSbaQI0xipcYVP8xOksPB/WpyRQ/MVWwpT9qGPdleW0fqlKK1/sONA
J81jQinePrpzqobVO59JobGOfWRPLM1vWVL0yzvmr3V0Ca1fing/S4OvHTTv
lUiRkXD6YYgjWSVFa+q1mWbpNB/WSmFzvGuTfRPNj2opTFo33NtgR+6QYsiY
4q6fmYtp/TJUZqwrzXhP86eeDNrZz46acMhMGbLTu5L2nKd51UaGIWnRmd3j
yZDB9EfDTuM8mm/ZMky0kE3+NIDMlYHzcG6nIJXmYaEMe5/jjLSL5mWFDMXP
J7E/y8i/5izN8CV/tXym+Vopw9jB95eNTSGXyFDY3hK8py9ZJcOW3TW7lKNo
Pq+Vgd1W2elkT/O7WoatXhtKPgbOo/XLINUKtipYQ/M+Qw7DZxc9DYrpfoCe
HFWbNEId1b60/l/7Xv54j3Yjso0c/rlPeTqBdD8BcvC/++4W7aT7DWw5ynVz
oxjP6H4EV45CkWVZvg1ZKIdOTcgYozRPWr8cmdaWJyIa6X5Glhy77LpHBNuT
lXI4cm2zmrbR/Y8SOTzCf7TUf6P7Iyo5Zq8KCRvDI9f+yp9y+bq73pXWL0e9
aejE2e6u+C+NWK79
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {1}}]& ], 
          "20"], Annotation[#, 20, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
kJ53tH69vsasNfcPuuN/3j3CAA==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {2}}]& ], 
          "60"], Annotation[#, 60, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHlYjPv7x4ecQ6JNpWQZSbQckqKE3kWlRTJtU1JTTcu0zp7dJNlbjqSE
ZCkHSVFZojpyEDqS7dJB46Akh6SyJV+/y/388Zt/ul5z935e3VfX9fnc9zMx
PIkTOZjFYiUOYrH+7+fPT5cD6/9/ULLG9SVei+n7Yci7G73bdvvvxJqwLTxa
vTPsELEOhhabTWxNLyXWR6v1nrV10VXEY1Hf5riJE1lDzMZ015QXrzLqiY0w
sqtWN3LudWJjdLDjPbdbNRKb4LWtzZvbNneIp4LjabtXu/susRmeflItm974
gNgC2XHpm/uvPiKeBu29SQNPWx8TW2LU47mnuSOUxDMwd+1EecD5Z8RWyPhj
xbjTyc+JZ4J7tpPFWfSS2BpGle1cB4t2Yhv0SrKcC4w7iGdBsb61rsSqk3g2
Bibkev4Z8B+xLXIc7ti457wjtsNEDbviqD7m/zAHvT1B/R+mdxPbI6bs4c0p
Kz4Qz0WLg6tRx+0e4nlo0Bpdam7bRzwfDRsW8rvKPxI7YBCrRs9l/mdiwMNv
92j3p19+sgIo1R77fmp2P9Udcflh65QJIQNUd0Rhjo/xPDYLP+tOiLmavPfW
uEE/WeGE+0NFOslTB1N9ASxc/Dd+hwrVF+CN3mTjmTFDqL4Q2atqZ78u+IXq
CxEr9egc1vYr1Z1RUb09ff38YVR3huvryi73Y6pUd8HsSc/65FPUqO6CmcUW
+mMvjKC6K3wesIsjwtWp7grdSRnj6jU1qb4I54c1lEX1EysWYeP9LXdu9GhR
3Q2Llsqsir9oU90N+o0zdKvVdajujjncrt33ZuhS3R3Dzh3vb+DrUd0DRQf8
Ndb9MZrqHshI7/rU+k2f6p7wcSz40Bk5huqeyNHtUCl5Zkj1xVD93HveVjyO
6oux9Ynh4Av6E6juhcSrB/pmxrGp7oVn/9y/7ew/kepLENZw2AReRlRfAjXP
aSNafCZR3Rsdx67m3Is2/snwRs6vj/hft02m3/dG5u4S+8k1Jj+5zhstWwtS
rQdPpfxSLNTovzmaa0r5pdB+wF1wq86M8ksxXGt8XuA8C8ovRW/IK/WWv3+j
PAfSMVdOieXTKc/BV83VtaX5lpTnQMj21RBumkF5DgwVeGW+3oryPpje3WKd
mzaT8j441JNqLM23prwPfD3/tdtRY0N5H9xRqb1W2T2L8r5YlRg/r3m2LeV9
4bjusO3tDDvK+4JVWGh29NMcyvui+ZaRSrh8LuX9oC8480ZXdT7l/VDhofK5
vdyB8n5oM72l+PU8KO8HjQ/7zSKLHCnvjwQd3dDqAifK+8PB0vTkpaIFlPeH
YcYZe7PqhZT3x8eqyS4Nrc6UD8C4jakHE3RcKR8AyYbxvr2BiygfAPk/qkq3
cjfKB2DzpPRp4YYelOfiakVEu8MeT8pzYW9qpdpr7kV5LvS+Nx8ouLeE8lxY
8758t7nhTflArOUv4ntWLaV8IIpePfxkd4pD+UBkrqned7LSh/KBuDwnriP0
hi/lg7D3ovkB7bd+lA9C03Xd3qyJAZQPQu7MzODySC7lg5Co31nvUx1I+WW4
M/v1cP6kZZRfBu+4EQceFQRTfhkGPjzTPDcthPLLsH+qyT6Ne6GUD4bys8bj
gWs8ygdjyrmiKw/KwygfDFnb3wss/ginfDBuFQXIDp+IoPxy/B6mbfbqIp/y
y7FavXl46eNIyi+Haj7LuVwtmvLL8VJrF6rcYygfAi3v4pHb8gWUD8HsyWfs
VPpjKR+C2rCHnoOE8ZQPgVNaxbiEjwmUD8Wq30Y8tMtOonwoSqSdU60OCSkf
CkcDj+zPaSLKh+JN+2jbNTIx5XkINHY46yqS/GQ2D7M75onfrZTS83iY5dOp
NSJL9pN5PBjkz4F9hZyez0PGSONSdnvyTy7kIf1MSirfdCX5eAiyMu6rWL3q
Jyt52GP+ueHK09XkD0PL88NfPHzWkj8MW51ZyUNb1pE/DKkBLsaP7RTkD4Nf
+9kZOzVTyP+jvvBdyrb3xIVh+KvGp9L8yQbyh2FgVHzDk7up5A+DromayvAH
G8kfjmllij1jXqSRPxxNHwOdVg1sIn84TCI497MnbyF/OOwFt5R3AreSPxwd
R04YFOzdRv5wHOFua+R1bid/OCoiMm0VbunkD4deyeOe0KoM8kcgwGaXqqVB
FvkjsFhx3urtU2JE4JZe2o2ckt/JH4GztVHjlmzYSf4IKLrHvp/PyyZ/BF7N
KmFtctlF/h9ceC4UNjnkj0D20K7ujRa7yc/HXtcXTXyLXPLzccxZ79Br6zzy
89GayO03cNlDfj4O3MmpfhuaT34+7vs6jlqVspf8fLw7kZ53zGwf+fkI/oXb
GBdGrOSjvmrtzBXxxKxIeKrr3tCNJmZHwqi7TeXyMmJEYoxlKT/Fi5gXiXK/
CO1/QKyIhM89u21hM4kLI2F8qPugmwnjj0Rf7Wj5EQPGHwkDl5t7ZCMZfxS0
HRt3Vg9i/FEI60vRlfRRP4iC80CeQ14nMS8Ku8wVGlOeESui0N2nlmX4kOk/
Cg1Vx16JGonromC6TxpucoVYGYV1Ti4Cm2piVjQuqlls33uamB0Nu/lvk/2O
M/5obH9j8z30EOOPRgevXuNcPuOPRpUFuyoom/FHw7L8sKHzDsYfDf8nWWnS
NMYfjcvp633a1jH+GKjrcgdyVzD+GJhN6Rm9Wcz4Y+A/T+JeHs/4Y3DNJNlf
J5rxx2DWCi2t0jDGH4ObhXb8NcGMPwZtwVo+awMYfwyKrj/9r5TD+AWYO7Zo
mYYX4xegI+/K3X1ujF+AUxszD/g5M34B1ra+17d1ZPwCaJ9uOeY0j/EL0FNz
7abEjvELcCG659cbNoxfgKKWF+8XWDH+WCzYPH6Gchrjj8UUXWP5fnPGH4uq
iSPWr5rK+GNxwVahJ5/M+GNhcP2DdqYR449FrtFNvysTGH8sjruV39QZx/hj
wUl+Ebd+DOOPQ0nS11kq+ow/Dm/5OrYHdBl/HB5oHUrljGL8cQiePXjWWC3G
HwcdtSOyr+qMPw62z8YI341g/HGocKhb9nE444/DR59Jcm1Vxh+PhSWyIRjK
+ONhtOIxZ/0vjD8el3JXV9xWYfzxSD+pn2o5mPHHQzdy9fiDLMYfD/1HdW/Y
3+l8qIvHv3GGQae+ESvjITM//tCjn5iVAPelJx/3fiFmJ+Cu+uKXJZ+JkQDN
V5fEwk/EvATEmQ9Xw0fm/ElA2fAWW8M+4sIEXGoM3T6ol/EnYBhXb3f3B8af
AP6T77yp/zH+RHid0w2xbWH8iWh3eDfP9CLjT8Q2h68Gn7IZfyIc563clR3O
+BMxdKWx2eOpjD8Rypz87CPtdF7WJcL3k4X76QPEykQcSu44emkpMSsJ21rD
p0kG6LxlJ6Gm4KS3pJg5f5PwJG3MdB93Yl4SMpvHJu1/Tee1Igm1T7NONG8m
LvzxPC+UCoyI65Lw3fvb3KYLdN4rk+B+dMvFuKXM+S/E03qj9Xva6H7QFGLw
Mhv7U6uI2UJ8nVG+7+tIYkshrnIsTl0tpPsFQvSW9rtzZhJ7C1GsKV/T8hfd
RzwhRp570p7DJRYK0RzTYVLVydxfQmy5GDw9Zj1xlhA2jZUJ90YRFwpxyX5a
xIRjdP+VCTHjxoOXAgfiOiGsF7B07jyg+7JJiFqF1ZvEJGKlENt7jFKDVIm7
hHCevesXb7dM6l+EicfTpzVvoPtYU4SPD43dg2rpvmaLENJmkzn4+w7qXwSV
/btdnjkSQ4R03xfTVLfQfe8tgsCpO3XrHZoHeCLEhnjJE8cTC0XIH10f/mci
Mz+IcLQyT33rZZovskRQqpm2NRgQF4qQY73UapN0M/Uvgpp6t1NNM80ndSKk
bvbfL7QmbhLB8q2Rdf4emmeUIgzxaEqdNZi4SwTuAvOzDonM/CPGmr9dmkqf
0HykKUbNix1/rfYmZovhUdSYu//qBupfDPcGFdlwEEOMitS022cv0vzlLcb9
XQbS/LnEPDEWJwj2F9fS/CYUI+V007AmZ2KFGLfO5GrpFKyn/sXwOnnNNLOK
5r9CMbJqzpT13aP5sEwM+ZZj66Z/XkP9i9FUVjVs/CTiJjEM529MLubQfKkU
g5OWfLFkM82fXWL8XhZ9WOcyzacsCYSN4hd/DiLWlKDqZI1NnssK6l+Cent/
7uosmm8tJTjJPWW8pJXmX0hwvis776MVsbcEi02uPuFuZ+ZlCb6PMAoMeEXz
tFAC2LSUPnQjVkgg4Ny+UXOK5u8sCTwdhG3vDYgLJVhkvGOn/xaa18skkGVt
utD8hZnnJTjnX3/EU0TcJMEZxaZvxztp/ldKkK548uCegLhLglDDkf4RD2lf
YEmR1Cao4fybSP1LYeNTnLGoh/YLthSmRoGL9UYSW0pRw8kNzbCgfQRSnC0a
qr6RE0f9S3Es43nqzXW0v/CkSNG7ds+unPYboRQRu6f3Humg/Uchhe/M4Orn
U4izpHASzG1rjKN9qVCKrjnFo+dWRlH/UlQFf/p76BDiOiki3U7FqnFp32qS
YtWNnaZG5bSPKaVotlWdPFWDuEuKTK1+ry8iZn+TYW/FnXj5o3DqXwZxqcqY
1c7EbBlmTTaqb6+kfdBShg1DKg/uMyOGDJ/tB86uOkz7o7cMKTdiGyPYxDwZ
Jlkl/yd1on1TKEP8Ste39R60jypkOBp84tqa4OXUvwwViry3MVLaXwt/PO/W
80CfbNpvy2R49/F6zLDzQdS/DAvGPDrv95L24SYZrDZ1CobrEytl2NWw8Uqf
N+3PXT/+Hv/UuDeZtF+z5Dh28qldzT1/6l+OVGWlGyYQs+W4P2LFS9ck2s8t
5Wh65K44cYX2d8gR2bO53GkCsbccb9KardrW0b7Pk+O9Tl1T0nN6HyCUI6XT
nn/Bk3k/IEdYiEnrwQv0/iBLjuOZLkYqvxEX/nh+fLP+xcP0vqFMDlnIpj0n
xhPXyfFNv+V5uD29n2iSw9IyqjrYkd5fKOUYtc2ya+iSxfgfrS2xyg==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {3}}]& ], 
          "100"], Annotation[#, 100, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHlYzHv7x0eH9k4hx5IYWVokmYok9Sbtlqlp30xT077MNItCSvYsJUR1
ZChEKpGtSJbzZK3QCaGiLJUlayT8/K7uea7rmX+6XnPPa959Zr7fz+e+ZwIv
3p2vwGAw4gYxGP//d+DRY8v43weOrXR8jq4Eel4Ze+6FZ1tu3k6sBUvZ4aqs
4APE2lA6ZDShdWsp8SjkCGx4NeGnicei4NZ4gTu/mpiJNSePvn+17QqxHsSl
Yj++9TXiSfjwWGi6mXWbeAoWntdWarC4Q2yA8NYhxcM+3CM2gt8fx89Pv91E
bIwn0TMv9f/nIbEJeopnmrS2PiY2xZ64jCs+6m3EM6Cd8ybF+9xTYhZCXt0f
d2JZO7EZ7G9aKrg7PSc2R1E7gmyNXxJbwKj/X8f8SZ3EM7FYsencMVY38Sw0
2Lo4XvJ+Q2wJRQudGS673hHPhsZSu8KwL/LvwQr1Bg/7Pk7/QDwHoeo/busn
fiS2Rn90xJTO+k/Ec7EpyK1squUXYhsU8ESRPeW9xLaQvn+m52DzjRjo7OMY
urT0DXAqMIkzQtFwRz/V56GJ+xHjg35SfR6mZjtOmstkYKA+H9+uuRff0h00
wKnzEW7porfMQIHqdpicpL/2F/6guh2m6o7RM4sYTPUF6L8wl92VP4TqC2Bh
HvpT+YUi1e1RqfZ5Q4qNMtXtceKotq3rERWqO2CCWuC4ZfpqVHdAZF5W3NhK
dao7Yobh7G8hvD+p7oimlsHzrmhpUd0J102q3oX1E6c6AeO3dN74NJTqzrBn
6aw/1DeM6s6wLl+rV/WnNtVdUOs0TtY4YwTVXTCxOqj/euhfVHfFlGV7VVYV
jaS6K8QjUj62/hhF9YX44N7+qZs/huoLkcKr+vPYUx2qL4L/d8E1ywRdqi/C
98zdmpWjxlN9MTSuTv9pFs2k+mKseP3XY3uvCVRfAq7uVQss1qP6EkTqicc2
cyZSnY3nrJ+HGsMnDTDYaHyhsux7+mR6PRtXLqQumVw9ZYBr2Lgc9azEXMGA
fDfwDHu8RvkYku+GOtYar1s1RuS7odkIjn5zjcl3w1WXf02b66aR7w6BqlKE
SDqdfHe4yNwul+aaku+OGXHJyYL1M8h3h+eDwr6pKSzyOdDKyD27e50Z+RwU
TLGxEOeak89BbZbOwi3VFuRzwOr0f3zqw0zyPeAYP49zd5Yl+R5ouyVyq982
m3wPfFUotTn81Yp8D+h76RvxpNbke0Ll4GzNv1RsyPeERaN03KtyW/I9wc+4
n6V4DuR7Qlb5fB7/4DzyveApNVhVlT+ffC+4rflRd+GgHflekE6bv8CoagH5
Xqgd6lR9rdWefG8E6LVdjtV2JN8b3VOWXvrk60S+Nz7Nf+/sUu5MvjcKywJy
gnVcyfeBcnWxBXIWku+D1dG89E9TF5Pvg+QW5pn8xiXk+yA3K73D4gabfF+8
LlvttPC0G/m+mPP2gqZVmTv5vnD+1e5VcopDvi/UWWam3Bse5Pshvdhk1rC3
nuT7Yd1w2yXbJ3iT74cxV3SMy/k+5Pthfciadk6VL/n+SB6x8nbIRH/y/aGm
23H2YX4A+f6Y9cX84RmTIPL98eRQbYFm41LyA7BL06f2Zy2X/ACMXBZc2VQe
TH4Auuo7rYyLeOQHQIMdGFBQHEJ+IG5kcKe/Oh9KfiAsRHu/lTzmkx8IAbsv
rFwtnPxAtJg98z3tEkF+EMSXFs9Pz40kPwh7+5fH/NEfRX4Quia/ihokiCE/
CD/KL/jE9saSvxTznphpW+2IJ38pjMs8rFkHBOQvxZmc1/98Wyckfymy1nr4
rpQkkM/Fptw9HY5C0QAzuRh9an3RuyQxvR8X9h0Xp6tnSgaYy0XXvoBlcyqk
9P5cjPTk32W+XDbAMi74t27UhhomUR4Xnu5+BqdWLB/gNi6czTkK/7SsoPxg
7Octc1nISab8YHirZJxQal5F+cF4/zHZ5fHsVMoPRprPDJ8srdWUH4wTJ06W
pb8nlv1+P5UbHVOfpFF+MKD3ltFybw3lB0PaGGej2rSW8nngPNW4P6ZjHeXz
YCzzXbP853rK5+FrxrAxOydvpHwefL6MMbrru4nyeVg0aVB4fl465fPwcpiP
bnD3ZsrnYfNe5+xU562Uz8Ot9Hpf7ultlB+CqgDLeaajMyk/BJFHNnDfthAj
BMcW/lLLPrad8kOQ2GDEWZKWRfkhOFO3Y44tdwflh2DVO8aS9Q47KT8EuxVN
C2Cxi/JDcHbWVdY642zKD8XOdvZwvvFuyg+Fq13diy7zPZQfikK1pXZjHHIo
PxQVgc8Gv1uaS/mhGGp2pDAgLY/yQ/HlR3fmopK/KT8Uixy3rz/QtpfyQ7HE
7OXsfM19lM/Hnne8mDJFGeXz0a45q++elBh8XI28zyttIebyEaF8veAL9lM+
H3lvvNoe5RPL+FjnnXPo9VfiGj6K/kpRly45QPl8xGrVsI4eIGaEYcYWxdqy
D8TMMNzIdLcssi2g/DBo1n41O7GJmBuGR5veHu5qIE4Nw6rT0SaxIwopPwzG
xa/nengT14Rhy8OE+eeyidvC8P2sQ0nFPWJGOPJa5v4K/PMg5YfjTdmjxpsO
xAiH5vf2N8OTibnh2NM9aqZrOXFqOGJ1v9xc104sC8c8bbb6/eGHKD8c2gXv
s93mE7eFw+hisYdSPDEjAmdV4lJVcomZEZhg0lkScYUYEZjqa1Rv3k3MjUAM
64RV8tDDlB+BDW+ty9kziWUREJ8w51/wJa6JgIry5B8NK4jbIrCl8nLOnr+J
GZFovD6rlXmemBmJI22enyTNxIiEu0rFxoJeYm4kdvLOPaoYXkT5kTjBLquu
MCGWRf7uzz1zSpyIayJRqGQWdySYuC0Sy83ZLeVJxIwovD963Lghk5gZBacH
yfM1DhMjCm79a8qF54m5Udgu3H92yB15fhTyi4wd7nTI86Ng7Dvh+6NeeX4U
ekrtTaapHqH8KCgWb3x7U4eYEY3YdJbiRWNiZjQ6R237qT6XGNE4p9Q3/vxC
Ym40VK3Oiu/6E6dGwzmQX+8ZRSyLhiTpwz+uicQ10bB6WF15bp08PxoOqvua
C7Pk+TEI+abPHLZPnh8DheFmiwoPyfNj0K3UJNtXIM+PgcbXkjEF2fL8GBx5
ytrmlSrPj8HUvHe5QcHy/BjwHuGVv5U8Pwa/VkSldKnJ82MhNugQ7m+Sf/6x
sJ6+L3BYnvzzj0V5dIb+dV/55x/7e7/Wv+v63+8/FvsVx3mNuSa//mIxLd5x
d2mi/PqLBTuL47Zysvz6i0W4dpnx+zr59R+HwAnlt8US+fUfh0cbyt9EjJZf
/3HocK9ablglv//iYDI0pErdX37/xaG2+uTKkG/y+z8OdSMcxybJ7/eaOPSf
LGPsZMnv/zgYlCuXfr5N+wcjHsk2gRebI4iZ8VjZuZG/4g/5/hOPzTnFe9Xy
D1B+PJy/RxhUWRKnxmO6XW7LqXvy/S8ei1+NGz4pXr7/xWNS74tEIzXitnik
9QeldR2m/ZQhwKuyzxvS7Im1BCizr3yjc432Z6YAV6Y9/+6iRGz6+/WX/xVX
O+XT/yfAnk7U7d1C+ztbgJXK7R/V7tH+zxVgx+E7OfpjiQUCdF96m60WQedF
qgDM02Xj6k/TeZIpgKd177d1ysQyAZ6M+fIQgXT+HBcgcvGRjRqn6HyqEWCB
c9uEXk3iht/1230OinF0nrUJkB6i7Tevns67HgEeWMzedMxMfv4J4aV9wcEl
j85HLSHs9/4araNIzBRCpdJh2DgxnaemQqxibSthP6fzFkIYHVYdX+ZLzBbi
w/MNIeZ36HzmCrF50Uh+syuxQAjltaeH5V6n8zxViMSaMkm0C3GmEFf8E+vt
6+j8lwmxIVLj5HhP4uNCrFjRymy5kEHrF0I9fkKe+33qJxqEkLSVlK7/Iu83
hBi1aDsvRIe4R4jMrADVO/ZbaP0J2FqB4DMS6le0EhDO2lX44yj1M8wEvKwz
Kk5/Tv2OaQL8tSb2LZhMjARU7J7fPCyK+iN2AmZMzYtsPrmB1p+AhCFWx1Yr
EAsSYJdrk/fWk/qr1ARM0Qs1Uyql/iszAcsN9FPKVYllCXh9xq3oXjT1a8cT
sEG14jvnDvVzNb/zTHo/jppD3JAAr4P6dipH0mj9CVAuD3yipkPck4BbodG9
StupX2SIfvfnK7WfqxJrieCXdFJp80bqN5kiyHYkfnuqQmwqwus64weFuim0
fhFyZkeuSDehfpUtwo/Kh96ODtTPckVY/DGjtDR0Ja1fBIOo41t2bqL+N1WE
KYU2125XUH+cKYJa3RNF0xfUP8tEWNIzrnq7LvFxEb6eNrK+4ZdI6xdhhPXO
7PK91H83iDBNte8q8wX1520i6KRf3PLejLhHBGbRkNSf66mfZ4jBL8nWnNhK
/b6WGCPSipLmWBMzxeB1D/5nUj7NB6Zi/D1Wv/H8YGKIYffQyuVZPM0TbDE8
WBl54laaN7hi7K7uUPDgEAvEOMsxSAm+KZ9PxBiqXXlvlSNxphi9Q74M0s2g
eUYmxliLpk0vs+No/WJ4t7uyJh+i+adGjIfFtkv3naf5qEGMaxYVTczmaFq/
GJd3Hbgo+UnzVI8YfVd27I42JGZIsBWDbe/40fylJcHuEXX10iyaz5gS2Nht
LpvWQPObqQTGn89nXBtODAlMrR856QSG0foleJ16tbuvmOY/rgSWWWeq5zKI
BRJk/7IfW+VL82Lq77yc/6x3PUvz5O85i/N55M5rOsQyCd7zkt6or+XR+iUI
8PBx+NRD82mNBNonNTz8ecQNEjiVsa6Pf0DzbJsELjcvuTPdiXskYJ/7OTZJ
Jp9/pUjM9VQ5WkjzsZYUKY+ZjtnHA2n9UjSvDoxRuErztKkUAb6cpooW+bwt
RRXbSSRhELOlGFyT3Khh6Efrl0Kh1dDE2YfmdYEUB497Gn7aSvN8qhRdvMZ3
j6/TvJ8pxU7dKJN7asQyKbxNTnYd5njR+qV4dF0tbdp++r2gRgrXwV+bZ32i
3xMapPgqvNyYt5C4TYrRC+reTT/Kwf8BiZ65pQ==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {4}}]& ], 
          "200"], Annotation[#, 200, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {5}}]& ], 
          "300"], Annotation[#, 300, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVl3k4lHvYx0eLNpU2FZVdWbImsuSrQiRZIiTGmGHsszsoJkqlhZaTojRp
jxTtVEfLKZ1EC9rIlPYoR9uxpLf3cs97Xa9/XB+3z/Od3zPP8/vdtzYr0Zcz
gMFgJCgxGP/7u/+nw4nx/39QstLtNT4I6O9Dseth1E7bjVuJVWErO1K5LbyI
eDyGHDbSbtlcSjwJu3lzWVVR54in4ECNJs+Xc4VYC5mnj//7bst1Yh2ISkXB
HIdqYj10NvHNN1reJTaA56XxQ+5Z3yeegaiWwcVjOx8SGyF44KlLZncbiU3Q
HDv7au/NJ8Sm6CiebdrS0kRsjl0JOdcDVeTEFhi/uz192cUXxJaIePdoWnlS
K7EVXO7YDvBd+Jp4Fo62ItTJ5C2xNYx6G9wK9d4Tz4aXcuPFEsuPxDa45+Th
dnVZO7EtlK01LDz+/Ew8ByPD5h+M/K74HuxQN+NJ9xezTmJ7sFV+3p3+xxdi
B/TGcg3e130ldsSGUJ+TxrbfiefiAEsY3VH2g9gJkn9f6rjO7SIG3nf7GXo8
7+5nKaDnN0HZcHsv1Z3RyPwCzdA+qjvDeKebnqMWA/31eeiq9i2umarUz9J5
iLL10EmaMYDq86GfPH3NLwyk+nwYT1XXseIOovoC9F529P5QOJjqC2A9i903
9I0y1V1QMeLbuvS5Q6nugvLj450WHRtGdVdoj1gxLWn6CKq7IrpgW8KUChWq
u8HCcE5XBGsU1d3Q+HyQ83VVVaovxG3Tys+RvcTShYDmpvf/fB1DdXe4WGpk
He4eS3V3OJSt0akcNZ7qHri1cJqs3mIC1T2geyW09zZbjeqLYJC0d1ja0YlU
XwTRhPQvLT8nUd0Tnb6tXz9y1KnuiXRW5aiSFxpUX4zlPbxqW8FUqi9GT27e
6IpJmlT3wsgbZn1WsVpU90Jqm1qTS4A21ZeAOfWGNbx0qL4E0TqiKU/9dKnu
jdeWfYfro/T6Gd6ofzMsqSdbn/7fG9cvS5foXzHo5ypvXIt5eWLWgBnk+4Bl
2BEwKdCQfB/UWmYG1FQZke+Dp0ZwC3Y0Id8HNzwazJ/WziTfF7zhQ7hCiRn5
vvCQ+VwrzTcn3xcWCatW8bIsyPeF/+OD3cbpluT7QTUn/0LeWivy/XDAYK61
KH8W+X64tU3Dc9MVa/L9YPl+edPZztnkL4VborPfAxtb8pdCXiP0qdsyh/yl
+G9A6dwj/9mRvxTH1qRNZkkcyPdHWedFJbVhc8n3hyh79ph3ZU7k++Pold5N
yhdBvj9MMx86cA45kx+AtcrpKZWF88gPgIpxyJ3Lh+aTH4DYfZ3+RpULyA9A
tqdP8O0WF/KXIczL9Xz8eDfyl+GX8/24b0ELyV+G9Ryxg0eZO/nLEPn3eHuW
xiLyA9H5wzIMuz3JD0S+Zq7ON2Mv8gNRly2dua9+CfmBGKcSNXr2P97kB6Hw
zYpiz3M+5AdB6fggXbuTvuQHITdx0bMTZ/3ID0LMwWgT5j9LyQ+GXcaTurGf
/MkPxtKrO9y2ai8jPxg84/upZZxA8oNhZVTc7FcZRP5yPPNz0WXrLid/OUzZ
v8qeFIaQvxwP3j+bdsE0lPzlKLe7Xzy6Poz8ELyZWvKx7xaT/BCUOb1raCwL
Jz8ExjPuLDU5yiI/BD/mPVp3oDiC/BXI2r7Y4d0lNvkrMGbmV6vSJg75K/BN
5Si3bEQU+Svg/M102TkPLvmh+Hk/yDk7P5r8UGi9ifYf2BtDfiiylfL8lHhx
5IfCRadyafyPePLDMPH49bF22xPJD4Na2SkbyyIe+WEYk2N/rWstn/wwlNfm
+60UC8hn4uhmoxY3vrCftZjwvLNE9jlZRNdjIlz7mblKrrifmUx8PbtBYn9G
Qtdnoub6r5tab5P6WcbEj3NWV9iGyZTHxH8Fm0zOpqb0s5yJzIoGpb+fp1J+
ONQ9pzt6+q2i/HCcVvY9OORpGuWH45zKGq+mOVLKDweH9ZfXNtXVlB8OQ7UD
pdn/EsvC8dx0f6txcwblh+NDaXZX88NMyg9Hu06Vw/DGNZTPQtW1zgfqr9ZS
PgsZrO7slL4symfhrxt52jv011M+C48XN1s8CNpA+SxceRSbWFiQTfksNIXF
GYR/3Ej5LNxU6sqXum+mfBauBs1gMc9tofwINCVvdjKfnEv5EZhZkCT49JwY
EZi2MuDnnyVbKT8CF782Ry/J2Eb5EQDn1mwn5nbKj8BVuHtnue6g/AjonJly
GdZ/Un4E1K832q012Un5bMiSup04JnmUz4ag7nP7h1m7KJ8Ntn2Kh7rrbspn
Y9qZmSqfw/Ipn43UUoOSkIwCymfj3fvduxaf2EP5bLgfEmwpku+lfDai1QN+
WEzZR/kc9EyddbTVTEb5HNToNrhtbSAGB6d7dBp60vZTPgf+5ROH/zAuonwO
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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {6}}]& ], 
          "1000"], Annotation[#, 1000, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {7}}]& ], 
          "10000"], Annotation[#, 10000, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#7"]& ]}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{2.6762834238237, 1.3555467662041374`}, {
               231.2002678882928, 439.386406147187}], 
              Offset[{0, 0}, {241.99180327868854`, 568.9139038981095}], 
              Offset[{0, 5}, {241.99180327868854`, 568.9139038981095}], 
              Offset[{0, 10}, {241.99180327868854`, 568.9139038981095}], 
              Offset[{0, 10}, {241.99180327868854`, 568.9139038981095}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{2.6762834238237, 1.3555467662041374`}, {
               231.2002678882928, 439.386406147187}], 
              Offset[{0, 0}, {241.99180327868854`, 568.9139038981095}], 
              Offset[{0, 5}, {241.99180327868854`, 568.9139038981095}], 
              Offset[{0, 10}, {241.99180327868854`, 568.9139038981095}], 
              Offset[{0, 10}, {241.99180327868854`, 568.9139038981095}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.499999999999998, 22.}, {241.99180327868854`, 
               568.9139038981095}], 
              
              Offset[{8.500000000000002, 10.000000000000002`}, {
               241.99180327868854`, 568.9139038981095}], 
              
              Offset[{-8.499999999999998, 9.999999999999998}, {
               241.99180327868854`, 568.9139038981095}], 
              
              Offset[{-8.500000000000002, 22.}, {241.99180327868854`, 
               568.9139038981095}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["20", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.}, {241.99180327868854`, 568.9139038981095}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{2.338928435040867, 1.8786734084872974`}, {
               187.18675382060155`, 1327.2332911514973`}], 
              Offset[{0, 0}, {193.9918032786885, 1456.7607889024198`}], 
              Offset[{0, 5}, {193.9918032786885, 1456.7607889024198`}], 
              Offset[{0, 10}, {193.9918032786885, 1456.7607889024198`}], 
              Offset[{0, 10}, {193.9918032786885, 1456.7607889024198`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{2.338928435040867, 1.8786734084872974`}, {
               187.18675382060155`, 1327.2332911514973`}], 
              Offset[{0, 0}, {193.9918032786885, 1456.7607889024198`}], 
              Offset[{0, 5}, {193.9918032786885, 1456.7607889024198`}], 
              Offset[{0, 10}, {193.9918032786885, 1456.7607889024198`}], 
              Offset[{0, 10}, {193.9918032786885, 1456.7607889024198`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.701587422304899, 22.}, {193.9918032786885, 
               1456.7607889024198`}], 
              
              Offset[{8.701587422304902, 10.000000000000002`}, {
               193.9918032786885, 1456.7607889024198`}], 
              
              Offset[{-8.298412577695098, 9.999999999999998}, {
               193.9918032786885, 1456.7607889024198`}], 
              
              Offset[{-8.298412577695101, 22.}, {193.9918032786885, 
               1456.7607889024198`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["60", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.2015874223049003, 16.}, {193.9918032786885, 
             1456.7607889024198`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.4368209972246203, 2.9680275295865584`}, {
               234.0359420543768, 1726.0991281895294`}], 
              Offset[{0, 0}, {234.99180327868854`, 1880.0051450159922`}], 
              Offset[{0, 5}, {234.99180327868854`, 1880.0051450159922`}], 
              Offset[{0, 10}, {234.99180327868854`, 1880.0051450159922`}], 
              Offset[{0, 10}, {234.99180327868854`, 1880.0051450159922`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.4368209972246203, 2.9680275295865584`}, {
               234.0359420543768, 1726.0991281895294`}], 
              Offset[{0, 0}, {234.99180327868854`, 1880.0051450159922`}], 
              Offset[{0, 5}, {234.99180327868854`, 1880.0051450159922`}], 
              Offset[{0, 10}, {234.99180327868854`, 1880.0051450159922`}], 
              Offset[{0, 10}, {234.99180327868854`, 1880.0051450159922`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{10.999999999999998`, 22.000000000000004`}, {
               234.99180327868854`, 1880.0051450159922`}], 
              
              Offset[{11.000000000000002`, 10.000000000000004`}, {
               234.99180327868854`, 1880.0051450159922`}], 
              Offset[{-10.999999999999998`, 9.999999999999996}, {
               234.99180327868854`, 1880.0051450159922`}], 
              
              Offset[{-11.000000000000002`, 21.999999999999996`}, {
               234.99180327868854`, 1880.0051450159922`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["100", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.}, {234.99180327868854`, 1880.0051450159922`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.5707291198037314`, 2.55593623398562}, {
               180.98966981804597`, 2603.324142123378}], 
              Offset[{0, 0}, {177.0081967213115, 2756.852583299324}], 
              Offset[{0, 5}, {177.0081967213115, 2756.852583299324}], 
              Offset[{0, 10}, {177.0081967213115, 2756.852583299324}], 
              Offset[{0, 10}, {177.0081967213115, 2756.852583299324}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.5707291198037314`, 2.55593623398562}, {
               180.98966981804597`, 2603.324142123378}], 
              Offset[{0, 0}, {177.0081967213115, 2756.852583299324}], 
              Offset[{0, 5}, {177.0081967213115, 2756.852583299324}], 
              Offset[{0, 10}, {177.0081967213115, 2756.852583299324}], 
              Offset[{0, 10}, {177.0081967213115, 2756.852583299324}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{10.233158567733835`, 22.000000000000004`}, {
               177.0081967213115, 2756.852583299324}], 
              
              Offset[{10.233158567733838`, 10.000000000000004`}, {
               177.0081967213115, 2756.852583299324}], 
              
              Offset[{-11.766841432266162`, 9.999999999999996}, {
               177.0081967213115, 2756.852583299324}], 
              
              Offset[{-11.766841432266165`, 21.999999999999996`}, {
               177.0081967213115, 2756.852583299324}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["200", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-0.7668414322661645, 16.}, {177.0081967213115, 
             2756.852583299324}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.0784572582583754`, 2.799451721696559}, {
               190.19114631967767`, 3785.812252201747}], 
              Offset[{0, 0}, {187.00819672131146`, 3981.6047926898545`}], 
              Offset[{0, 5}, {187.00819672131146`, 3981.6047926898545`}], 
              Offset[{0, 10}, {187.00819672131146`, 3981.6047926898545`}], 
              Offset[{0, 10}, {187.00819672131146`, 3981.6047926898545`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.0784572582583754`, 2.799451721696559}, {
               190.19114631967767`, 3785.812252201747}], 
              Offset[{0, 0}, {187.00819672131146`, 3981.6047926898545`}], 
              Offset[{0, 5}, {187.00819672131146`, 3981.6047926898545`}], 
              Offset[{0, 10}, {187.00819672131146`, 3981.6047926898545`}], 
              Offset[{0, 10}, {187.00819672131146`, 3981.6047926898545`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{9.828150425747104, 22.000000000000004`}, {
               187.00819672131146`, 3981.6047926898545`}], 
              
              Offset[{9.828150425747108, 10.000000000000004`}, {
               187.00819672131146`, 3981.6047926898545`}], 
              
              Offset[{-12.171849574252892`, 9.999999999999996}, {
               187.00819672131146`, 3981.6047926898545`}], 
              
              Offset[{-12.171849574252896`, 21.999999999999996`}, {
               187.00819672131146`, 3981.6047926898545`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["300", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-1.1718495742528936`, 16.}, {187.00819672131146`, 
             3981.6047926898545`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.03035869774512, 2.817509707876972}, {
               230.33333513826187`, 4378.583173575575}], 
              Offset[{0, 0}, {233.9918032786885, 4615.650986050183}], 
              Offset[{0, 5}, {233.9918032786885, 4615.650986050183}], 
              Offset[{0, 10}, {233.9918032786885, 4615.650986050183}], 
              Offset[{0, 10}, {233.9918032786885, 4615.650986050183}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.03035869774512, 2.817509707876972}, {
               230.33333513826187`, 4378.583173575575}], 
              Offset[{0, 0}, {233.9918032786885, 4615.650986050183}], 
              Offset[{0, 5}, {233.9918032786885, 4615.650986050183}], 
              Offset[{0, 10}, {233.9918032786885, 4615.650986050183}], 
              Offset[{0, 10}, {233.9918032786885, 4615.650986050183}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{16.048322984451637`, 22.000000000000004`}, {
               233.9918032786885, 4615.650986050183}], 
              
              Offset[{16.04832298445164, 10.000000000000004`}, {
               233.9918032786885, 4615.650986050183}], 
              
              Offset[{-11.95167701554836, 9.999999999999996}, {
               233.9918032786885, 4615.650986050183}], 
              
              Offset[{-11.951677015548363`, 21.999999999999996`}, {
               233.9918032786885, 4615.650986050183}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["1000", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.04832298445164, 16.}, {233.9918032786885, 
             4615.650986050183}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.24972896006567602`, 2.9895878389009605`}, {
               211.45680100467152`, 5096.437799670405}], 
              Offset[{0, 0}, {212.00000000000003`, 5250.536048330614}], 
              Offset[{0, 5}, {212.00000000000003`, 5250.536048330614}], 
              Offset[{0, 10}, {212.00000000000003`, 5250.536048330614}], 
              Offset[{0, 10}, {212.00000000000003`, 5250.536048330614}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.24972896006567602`, 2.9895878389009605`}, {
               211.45680100467152`, 5096.437799670405}], 
              Offset[{0, 0}, {212.00000000000003`, 5250.536048330614}], 
              Offset[{0, 5}, {212.00000000000003`, 5250.536048330614}], 
              Offset[{0, 10}, {212.00000000000003`, 5250.536048330614}], 
              Offset[{0, 10}, {212.00000000000003`, 5250.536048330614}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{16.694385580045704`, 22.000000000000004`}, {
               212.00000000000003`, 5250.536048330614}], 
              
              Offset[{16.694385580045704`, 10.000000000000004`}, {
               212.00000000000003`, 5250.536048330614}], 
              
              Offset[{-16.305614419954296`, 9.999999999999996}, {
               212.00000000000003`, 5250.536048330614}], 
              
              Offset[{-16.305614419954296`, 21.999999999999996`}, {
               212.00000000000003`, 5250.536048330614}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["10000", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.19438558004570544`, 16.}, {212.00000000000003`, 
             5250.536048330614}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hospitalized Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 5097.607813913218}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.09557789664504218]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"20", "60", "100", "200", "300", "1000", "10000"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\nproduction rate\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\nproduction rate\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.899561962595434*^9, 3.8995622779851093`*^9},
 CellLabel->"Out[109]=",
 CellID->1292344959,ExpressionUUID->"6a3aecb6-18fb-4a24-a9ff-6e7ff5d9b053"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 3.79556297488484*^9}},
 CellID->681770985,ExpressionUUID->"1ce65e2b-2359-40e6-b84a-9db00c687dfd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, 
   3.795563281577237*^9},
 CellLabel->"In[110]:=",
 CellID->1699688150,ExpressionUUID->"e25cb6df-4020-4af8-918a-05219bbccefc"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["20",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["60",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["100",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["200",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["300",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1000",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["10000",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "122210.51877492237`", "189202.27969673145`", "246653.82304627466`",
      "367051.40795239795`", "455566.2194355338`", "484367.80229430966`", 
     "484367.80158497265`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8995619628638353`*^9, 3.899562278011999*^9},
 CellLabel->"Out[111]=",
 CellID->912317332,ExpressionUUID->"2b807282-9cf4-4826-a511-3c8dca0e15b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Keys", "[", "aAUCs", "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
   3.795563107192247*^9, 3.7955631741147833`*^9}, {3.795563264992828*^9, 
   3.795563325092783*^9}, 3.795620024080208*^9},
 CellLabel->"In[112]:=",
 CellID->831264656,ExpressionUUID->"cfc6e5cf-6260-4937-a45f-31273c749e29"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
     Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 122210.51877492237},
          
          RoundingRadius->0],
         StatusArea[#, 122210.51877492237`]& ,
         TagBoxNote->"122210.51877492237"],
        StyleBox["122210.51877492237`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[122210.51877492237`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8680062185361327, 0.6494578140105091, 0.7674711552484997], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 189202.27969673145},
          
          RoundingRadius->0],
         StatusArea[#, 189202.27969673145`]& ,
         TagBoxNote->"189202.27969673145"],
        StyleBox["189202.27969673145`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[189202.27969673145`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9309744531244726, 0.7501492851681516, 0.6096532683163038], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 246653.82304627466},
          
          RoundingRadius->0],
         StatusArea[#, 246653.82304627466`]& ,
         TagBoxNote->"246653.82304627466"],
        StyleBox["246653.82304627466`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[246653.82304627466`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.923265661543918, 0.9494225437507732, 0.6743425330591674], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 367051.40795239795},
          
          RoundingRadius->0],
         StatusArea[#, 367051.40795239795`]& ,
         TagBoxNote->"367051.40795239795"],
        StyleBox["367051.40795239795`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[367051.40795239795`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5740818564482939, 0.7899034918450608, 0.9519407398111347], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 455566.2194355338},
          
          RoundingRadius->0],
         StatusArea[#, 455566.2194355338]& ,
         TagBoxNote->"455566.2194355338"],
        StyleBox["455566.2194355338`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[455566.2194355338, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 484367.80229430966},
          
          RoundingRadius->0],
         StatusArea[#, 484367.80229430966`]& ,
         TagBoxNote->"484367.80229430966"],
        StyleBox["484367.80229430966`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[484367.80229430966`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4312960035165877, 0.709773001973486, 0.9270770006123542], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 484367.80158497265},
          
          RoundingRadius->0],
         StatusArea[#, 484367.80158497265`]& ,
         TagBoxNote->"484367.80158497265"],
        StyleBox["484367.80158497265`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[484367.80158497265`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.4107501820830298, 0.}, {7.592010779315368, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{7.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {7.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}], LineBox[{{6.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
              0.}]}], LineBox[{{6.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], 
          InsetBox["20", Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["60", Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["100", Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["200", Offset[{0, -2}, {4., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["300", Offset[{0, -2}, {5., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["1000", Offset[{0, -2}, {6., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], 
          InsetBox["10000", Offset[{0, -2}, {7., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4107501820830298, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox[
    TemplateBox[{"\"Hospitalized Population\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.899561962909299*^9, 3.8995622780464287`*^9},
 CellLabel->"Out[112]=",
 CellID->1266957579,ExpressionUUID->"0f54aeaa-0af9-43ef-8d66-8d29705c5a01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Medical Supplies", "Subsubsection",
 CellChangeTimes->{{3.795563039753837*^9, 3.795563044062641*^9}},
 CellID->1683949657,ExpressionUUID->"f8ee6a1d-f68a-47ed-8b5e-226f5c5ce94d"],

Cell[CellGroupData[{

Cell["\<\
Here we plot the availability of MS at MS producer\[CloseCurlyQuote]s storage:\
\>", "Text",
 CellChangeTimes->{{3.795565353284425*^9, 3.795565371621876*^9}},
 CellID->454901386,ExpressionUUID->"0a7fbb78-a472-4489-80ba-959cc41e4697"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "821", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "MS"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "MS", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"100", ",", "160"}], "}"}], "]"}], ",", "Above"}], 
         "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\nproduction rate\>\""}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.795534777979782*^9, 3.795534796956739*^9}, {
   3.795535348026557*^9, 3.7955353481371813`*^9}, {3.795535394164115*^9, 
   3.795535402712393*^9}, 3.795543185006671*^9, {3.795543509101215*^9, 
   3.795543512688059*^9}, {3.795560406737671*^9, 3.795560483970497*^9}, {
   3.7955605524637613`*^9, 3.795560555319584*^9}, {3.7955610292542953`*^9, 
   3.79556104438737*^9}, {3.795561329063559*^9, 3.795561336576962*^9}, 
   3.7956009809682217`*^9, {3.795602016929503*^9, 3.79560202215984*^9}, {
   3.7956199170488873`*^9, 3.7956199509593353`*^9}},
 CellLabel->"In[113]:=",
 CellID->485811182,ExpressionUUID->"be8cb23c-99ca-429b-8552-dedbd4c1acbf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "7648171207221074609"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"-", "7648171207221074609"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{14263, 16492087713107533651, 
      17957489834893335500, 15102651531521276609, 18193142026487555646, 
      15795348606554072514, 17167844627413144140, 11183825750832165315, 
      18151210910290168926, 6889304528009713764, 7213449038398836939, 
      11374924091904455077, 6963994994320239503, 17560791104802321643, 
      9323415324418042798, 1951508144005869050, 16079031818750774957, 
      10531387080395821351, 10085609371418392869, 840771284460443688}], 0, 20,
      20}, {CompressedData["
1:eJw9lcuKXVUQhoM4cKrmBXyAhlp1r6HDBgcS8QEidkImEdIB8e391l77hIbT
+1qX/7Z/+eufdx++e/PmzesP/Lx7/++vX768/++PHzn58/Prp4+fX/5+/vz1
5ePLl/QPv+/nvufnt0+vX5/fcvDkY52S3basY4WLPv/MjSWhUmHe2lUuPXNd
b5taptWr0ipVvK/rzmG6e4uaq7q2nwbWK210jZrx65zdL1RSaKZLpyPL47pe
qtpqS0rKmWY6r+tP1FCmiV2kWsROnchc1FxTVUxvDPL8015g2tvcZFpWTGif
eXSZpbCa2KJS6z1Paa/gkndTkS55FluablHtdPVeXWIP5GSZqMfyqPScVdcL
SumKcdOWmgmGvTsLx1ZR5rKS9i3nxj7R1dND9zLVPBwUpUEifBSMSjPnXpn5
psYl+b/pqXskAYboSfpkymK+u7XxdNfAxYinicy5ETkUt2a1GVDVPizMHj2V
GgDOzqx4XWeEGE3mkioBX7mXA9MBT13RHpNpemBdjpIMHhAMMBkDX/Q8aTgj
Qo9bmk0cllHBWo0kwGChNVE5ZZLNcmmjUZdg6XuzUMvFlEJb3gGaU6hhSzQ6
a/EHvn3oZFD3kGiJZM6N4mkAPllIDEpjIYbJ06DDAlWDfvRWJdK/XjBwRJsd
wcRsK73O9aUqmCezqtt18r7OiUdiDhhAIWvpjdyKFPYBaFMUCEoXQtE9W6QD
oiV45TCzCstCI+QrVMDcupGAk+0/C7mMixvOC9jDZbuBByB7zf0CXGDWQFvl
YCi49tzIQogKm2NXNGCtW1+NFwQieXy21R7SrtwON2oDQ+C2us3MdPhhuKZ1
KerQiR6pK7HMhxjRDd5ZYnYecdPBuUox9CnESQtwgyIGiarbhW20wJ9cQd7w
bI8lKB8LG185IMsfQQVbKzed0KSFJw9MbI2ySDZIQpQc1wMNjNpbTUQSarNb
Mbi1aW0DDsnQdgcSkbkW0wi2daZGB+f5PYnwWG9IAjfeOy/QN5DZsUaZ7cIH
eOGUx7RUSfLmgNdBQjZxjbUMK+O1401SCuEayu7i+Z1sp0GjXQyOgBEZ7Cx9
JBWS4x6gY/zeEjtxoWSa0zuJN7HWb1rFlegC5WF+6GeCS6u1YxDu6Oo1Fo9k
A15hDMxBJIV03Fg87XSiPsvt9fgC3avBiWQyFUG/wbN86IIvVGyjECBk0zfw
lHBHqKxNyVGxW3lPMIlIWBm18unh3YeGt/0QIDFIKex5WuNjFAm9wLAN7XFr
G/fhXINqyCZuyZ6DXoIjocfCziEfkkcHJqI6KYxJ97dA8s5U3+ioO1FmW6qP
5Qhzul5483VQhPU/sXVoXQ==
     "], 4, 0}}, RawArray["UnsignedInteger64",{10798572866488477007, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899561962926087*^9, 3.8995622780627117`*^9},
 CellLabel->"Out[113]=",
 CellID->1455670248,ExpressionUUID->"de710708-f26b-405b-b9f6-2ac276dc9daf"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
Bs1Daf0apPoRLtIgxoawXoP5Jt/4v4XCpd4=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {1}}]& ], 
          "20"], Annotation[#, 20, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxNlnlcjWkbx09RliaVbZDGUVmzRFIp5ocoS/u+qNN6Wk9nR7bDvNaxhBoz
jHGImjGYRsoa5y0UQsYuQ/YtOpHwlvH2vu7bufrnfL79rt/ze67rvp/7efrH
ZwUmGQsEAomRQPC/389/+m///5P2HuwfqFnoM/B9EueOeOd8tkdMAmdLzHS1
dj0p4twdgQ2/DRsaw7kXigrPa9dFce6LvgtafZrCOQvxyDr3XVgoZ1uMWb8/
5UgQZ3vUl0XKrQM4D8STllvPsn05D8aMTisKb8zgPBTnVu9bOmYa52FwjCiL
XTuV8wgM/mWT1ePJnB1xM6XjbPeJnEdh4lXf9LUTOI9GaNWJqjvunJ1wcLck
ZZgb5zFo+OFN/9ljOTvj42G7c8edOI/FpIXXXNqN4uyCCKNyN88RnF1hu9RZ
u9iBsxu+/77J5ehgzuOwclHXc/oBnN2Ru6BAaGvH2QMXHA+0+go5j8dhT1Ph
bBvOE5B38YrX5j6cv8WT6C3DD33NGbj4ldXymu6MNUD5jQqTB1Zcn4jIzWdD
G7pwfSKuO223fWvG9UnQlAwwb+rI9UkYu6L1wAsTrk+G9QDb4lpjrk9Gj8eN
mys+vWO6J244P/2wo5WxxhOvzQPD5n7g+hQEX1U6TW3m+hRYHE7p0OkN16ci
+vGPnv9u4PpUrJ89PkRSz3UvrDvzeIvFM657YWf2SenOR1z3RnFJH9th97nu
jS7dhr7ddYfr05CnbxhkVcv1aVCXXnqecZ3r07F+liD+0GWuT0dtxC+Fry9y
fQaWl4pO9anm+gy4BS4/OrKK6zOx1j0u2/Ek12fCaqLjA2sd132wzLqxUn+U
6z44NDj72d6DXPeFWYvtu4Birvti/tTCNbX7uO6HjTtHjp22m+t+WO0UlPTT
Lq77Q9TBb+5ZLWP4w2Vg/yO3tvB6f3zXeVRY1Q+Mdf44a9wlef167g+Aa2Pw
PafV3B8Ax94JhXuXcX8AXlw+NKdVw/0BqNjY9Z3NPO4PRJq2ZquFivsDIXSR
VF+QcH8g5ly0PhSewv2BKHy9M2t3HPcHYcdkx9u6SO4Pwp6/3It/DOL+IJSb
ea0cMZP7g7BLPPHPhZ7cHwzTWnPRUg/uD8Z9hcv8CWO4Pxjt7+6t3uXA/cH4
LutkRakt94fgn/yffs/ozf0hGHOidV65BfeH4EzJutf7Tbg/BHaXcua6tjQz
fyjWFDwd5aNnjFAEKD8+e/6QsSYUCe0X9Ta7yVgXik4z7t8pqOb+MCwpPvCu
9AT3hyFt9/Iyp/3cH4Z5M7L79djJ/WG4Mnjj1sA87g/Hmq36SQ+Wcn84ToaX
bClTcX84Jg25Xno9kfvD4bi5otegIO6PQPHlH4u14P4IRE9yfeA6nPsj8HWH
S8kPenF/BHrnPw3e2I77I1EWtbub+8u3zB+JoszK6dVXGWsicSKxpt6ljLEu
Es2SBV0k+YwFUdgiLzaNWcH9UfCYVDykOZ37o7BIV2pm78v9UYhtNel+ZQT3
R+NnC6uHjebcH40BTQ6nxS+amD8aGx26OPWrZKyLRr69qYNgO2PBLDxxP3mk
cQ5jzMIflf0W3fTl/lnwufCocost98/ClPnGi6yb3jB/DIYFaXqOq2CMGOSP
tsu+vo6xJgazlgxvvRTBWBeDGxecppr25/5Y3LleONnv0Wvmj8Xx12ldlxUw
1sTinWLWq8WJjHWxOL/W5pte/RgLRDi9Y+ld62uNn1kowodx5UExKxlDhFXt
RmTtc2UsEuGqV/sbNx7o2fVFCCv45nbhKsZaEUwnh6Q+GMZYJ4L/OuOq7bkN
n7lOhG2xa2yST71i+XHokFthl/viJcuPQ8WES6cLTBkjDs7zLZy69axn+XEo
2PRHqXfvFyw/Di0WZz3/tHjO8uPgcyrQuej9U5Yfh6ZxLSPzLz9h+XHYte+g
7t62xyw/HlNcQkuORT9i+fEoCLR06t/5IcuPx9bc2uwlu++z/HhsWFYtPTz+
HsuPx8Pgx6/ilt1l+fF4OVOS/4vyNsuPx7Wm09n1njdZfjxO+yywN22+yvIT
MKHHrjNbl/3F8hNwJKv+1JHn51l+AqJtvdIvLD7N8hOgfy8dG7atjOUnwG5Z
D/Pcst9ZfgIe1lj1KRfksfwElNSfjkrL17D8BKS8za+c45bJ8hOx9YPX0sct
MSw/ETMlaxqC7gWz/ETcfpoYUzkkgOUnYk348SL5Jj+Wn4jUpYHTH+b5svxE
dDhkGWPvwliXiAHK0G+mdWdcl4gqQWWWugNjQRI6lYdcPG7MWJiEj1+XrjY2
YowkfMqZYRMrYCxKwpXQvI+2nDVJ8Fo3+e5XnLVJcEryP9aes65N/9XouBHn
uiQMmme5U8BZkIxP3SI8vrAwGfJIh55fGMm432F4xy8sSobCo327L6xJxrGc
vkZfWJuMxDcpgi+sS8bczoMMXJcMB1kXAwvE+PtvEwMLxaiTtDMwxDByb/30
6ZMPyxfj7cBmA2vE8AwWGOq1YuStMiX5Ygwf32SorxNDNbTewIIUbPjDiuSn
oJ+DB8lPgcslkidKgbliPclPwTXr5wbWpiDd4jzJT8HaR/Gk/xT8+9t/SH4q
1JJpJD8Ve2pqDTpSkZRN6kWp+NBI+09Fv+G0/1TM8mgx6Lo29jYi+alwb/lI
8tNQdcec5KdhuEMP0n8aZN7GBhaloW/njgbWpOGijTXJT4NZzhuSnwbPj2/J
/NNgNM7OUC9Ix46gqwZdmA6jMNIP0rG32I3kp2N5t64kPx2HtWS/aNNxpTdh
XTrGvSHXq0uH+YRPpP8MvMoh/QkzgNI+JD8D5zQjSX4GLPzJvDQZGBT5kqx/
BiKm2pP8DKzwH0LyM7Bmzh6Sn4mj/e+T/jMRPGEAyc9EdSTZn6JM2K0m96/J
xL2b7Un/mbBXEF2XiXI3uv6Z6OFI1kcgQZH6PcmXIOc2eR4hgdmS/5D9J4HS
+wPJl8B5bF+SL0GGsyPpX4LOM4m/rs1fQp+/LKQ/oflZKEsg+xNZ8OtM+hFl
IW8D7T8Lx5oJa7PQNUJA8rMgNiVclwXL83T9pfA6SHRLKf6JIvMSSnEmhtQ7
SrHOnvQDKX5SE/aX4o6UzE8kxYVMSwNLpZgcQJ5PjRRzXC8bOEeK573vkn6k
kNU2GrioTQ+l+1sKn0Ayr5q2+91C7rdOige0X70UZZ9o/zJUtaP9y9DOhLBQ
htyPtH8Z5tB6yGDXRHR/GZrv0fWSIciI1EtlcOpNWCND3k1SnyODfRVdTxks
/Uh9kQy/3yWsk6G/K+GatrwSMo86GQSVZH30Msz9i8xfIMeHq+T5t5RjgAc9
D+XIfP+VgR3lKKmi6y+H2PcW6V+ObY5XSP9yrNST51Mqx+xdYtJ/W97HHAPn
yDHDxNnAWjlc3cn9FMmxyYy8T3Vy+KU1kPWXY7E/eT/UyWEyjZxnejlGG5Pz
SqDAgb3k/WKpgPctcv4LFVCaPyPrr0BOfzIvKFBxh+xv/7brbXxB+m/jePK+
kCrwosWM9K/A4x/I+zNHARPTzqR/BX6z6UD6V8DozCtyvilw5QyZT40C1SXk
/uoUiLpI5qNX4JSY1AuU2F9P+1fi0nLyvSBUoq+phaHeUYk9hWT/QImg5WTe
/kpsNyXXFylhKibnpVQJaT3ZPxolQruQ+hwl3ue9I/tfiddPyfdPkRLl/ch8
dEo015D8GiUivxOQ/pX4c1QnA+uV8FaSeoEKq26R885SBZvO5PtJqELBWVLv
qMIkCdnPUEF7nLC/Cr+uJPcvUmHk33T/qzD2FcnTqKDfQM7/HBUOxpN8rQpu
FaSfIhVyGsg8dSqceEvO2xoVpvxM1rNOhfneZL30KpStIdcXqLH3KTkvLNUI
OUPmLVQj6l/k+o5qiBcRHWpcsSF5/moEp9LzXw3LBFIvVcNFTN9fanzoSeaT
o8Z0ur+0amzOpv2rMXoDPf/VWNiVXL9GDcFg+r5XQ1T7Oe+/WYbHvw==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {2}}]& ], 
          "60"], Annotation[#, 60, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
fwFU+NY4
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {3}}]& ], 
          "100"], Annotation[#, 100, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {4}}]& ], 
          "200"], Annotation[#, 200, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {5}}]& ], 
          "300"], Annotation[#, 300, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVlndcFccexdeG2ImaqNiuiqJiIYpYEDmAKEWkd5B76Z1b4T2NeiUqdhCR
JLaAvUYEe+P6QYxBsSIQsdyg2KJSFEVBfea9mdl5/MPny9mzZ878ZpcdEpbs
GdlWEISkNoLwz+///dTb/PdXXDPIH1B3W1fcEknZECZnJY+XRFA2wvhDGS3v
win3Rv0Lw/PFjPsi0b9vZj7jATi5qvjLXsYSPFrxKHMX46GQXXFbtoOxCWo6
B+jzGI9AS9mImbmMR6L6gV32NsajcXaCtHgL4zF4v9z9xibG47BMLjv9M2Nz
fGmnWZzD+HuEjrskyWY8AVuMft+8nvFEDNnq2biOsQUu5wwfvIbxJCR1cx62
krElQueHf1rGeDJGWj3cmcZ4CgqnjBuymPFUmJUbqhYwngbXE/lpqYytMKfh
UoCK8XT0eD2uczJja3RqGx4fx3gGHjR1yYxkbIPRNQPkUsZAyNG0jkGUtUBq
8Y+ePky3xdOrcXPcmG4Lz0CjRkem2yHRw9rajul2WPzCZJQV0+1xerB7wUSm
28Pg45lbZkyfCberRUuGMX0mhvoePW7MdAcUjlfKv2G6A+JPLv+tI9NnYW3G
ibBPYVSfhZ71x//VSFmYDf+NDh+eMH02hJ1zq+4y3REfnkgNrzHdEStWOaXr
mO4E70G77QuY7oRJrsKUHUx3hneTsc8Gpjtj06uc1WlMd4HQGFkpZ7oLDI+1
nziP6XMwMFayzJnpc2B9dF3+JKa74nxEaeFgprui7FnRRkOmz8UvXXSm9TKq
z8Xgz0dCKigLbkifpBl+huluePJgaPw2prvDtbS6n5Yy3JE8uUd/KbveHadc
7vnNoKxzR/6oXceNmd8Db4wPDGiSUr8HMtxMk8soaz3wSZK7fgdlnQfCF8+N
SKUseOLICPtiR+b3RE1lwpo+zO8JeNttfxRK/Z4ottr310HKghfm5Fv1VlGG
F4T+z76xpKz1wvySf59qmkf9XhjbEHr9CGXBG9cj9pvFUYY3SkYHbxhEWeuN
OwYXbl0LoX5vVGjOHZhPWfDBsd/raoZQhg+yL6y1uhhM/T7YCLsEGWWdD1xT
1WM+BFG/L+42G1uupgxfPLMeb9GHstYXVjAv3xJI/b6oLdlwrj9lwQ+PfXtt
2BBA/X5o6Jrf2I6y1g8VBlPVCf7U74fJz833X/Wjfn+U+5iZmFCGP4bYDUpQ
+lK/P5JrbwgnfKjfHz1Ka7wbvKk/AKMOONdIKCMATguMBzh4UX8AZhi3Bod4
Un8AmotGdYj1oP5A7LeeFBPtTv2BCIjIuOnnRv2BeH3+4tKpc6k/EJutzp3p
4kr9Qfj186HtZS7UH4SK87V+i5ypPwjv+7t8GOBE/UG4Ypqau3c29Qfj/YPd
syWzqD8Ye7cVVaTNpP5gbKk8M+u6HfUH48C1ZHl7W+oPQbP1LskQG+oPgdmW
qu9MrKk/BLZjo9p1taL+ENR1OpZeOYX652HOqiyLZZbUPw/D+3qs7mVB/fOQ
tGRaq/Z76p+HflY5tVfGUX8o8jIMsxrNqD8Uls+nrtGbUn8oxjfYxGyRUH8o
3GeU/dz4LfVL4XBwW+DxjoQlUnw69fr6yab35H5SjC0teHL5IWGpFAtb0t0L
SwhrpfizamWA3R7CuVKcN9I9tl5KWCeF48civ/hgwnoppjquWrZ2PGFBBoVL
/8yIT+9IvgyqS2/0h0oIQ4YZ7is7mqwgLJVhqYGLftFMwloZ+nvP7a362ETy
Zbj7XpJRsI+wTgaLL47GLz0I62W4sDvJ+UrjW5IfhqFPpOXNqwlLwhAU1797
/EDCCMPKMX8eDtr7huSH4U7wbbMTYwhrw7C7eMnrCfsbSX4YKmvz+qVJCOvC
MC6kdK1PRgPJD0Pv6vktQe/qSX44WotKam19CEvCUfS6Ljfcr47khyPSYU/s
3sZXJD8cP1Uuvv7rgpckPxzD7qTs3NDwguSHY7PsTP8rXs9JfjjeZVsuWZX3
lOSH40X0i3e97taS/AhkNy1+s6f1EcmPwF2bxJxlhjUkPwKxTo1vKj48JPkR
mH11bph5QTXJj0BU0Oq+OVMqSX4Elt9+m79y9S2SHwHN5aKLQ72ukPwImI1S
L1YNvUDyI7F3yqvpzfWHSX4kwiYaDJLl55L8r1z8g/VL0xySH4kDS99WGHXM
IvmRyOuX2NMhLZPkR6LqoMnj+U8ySH4kZr3eunXGQsL6SOwwariR7ktYiEJj
ftN9J0fCkiikmr7M6WpPGFHoYQHTwbaEpVFwVJfvjAVhbRQejW26N4JybhSO
le507k5ZF4Wo55W2HSjro/BSYVnfhrIQjYn+j48LlCXReHsz2p4xonF/UnVf
xtJo9JnWpxNjbTSK4u3aM86Nhv6Nb1vGumgIx3cIjPXRMNlZIrIQg+cFqjZi
fgyu/rLoyxcbmh+DA3+YtDCWxiBX/6CVsTYGLYGFHcT8GIzbWSGuRxcD/xhL
UdfH4PbdFWKeEIvI6WvF9Uhi0V47TWTEojh+oMjSWPTu0VFkbSy+vcNxbiwu
jXwqrl8XiwX/2iGyPhbZV/eJLMTh/oXPIkvi8GsS50ccbE9vF1kaB/URCy7/
6/VHfuDy47DP0pvLj0Ne0CUu/ysb6bn8eKhHvuHy4+HehVsP4vFn9UcuPx61
0wUuPx6Lqj6Jem48ygZ3EnVdPIYbmnHz/3r9M1tu/gnwLPyO2/8ErJrO909A
61Njbv8TkJUYwuUnwFnowfVPQERdZy4/AUf69eLyE7Du2WuufyIWSrj5SRIR
uP49l5+I9FftuPxE3DjaLOraRGwyKuf6J2JJcwO3/4notHQQl58IQfqWy09C
aecybv+TEPNyDHf+kvDs/kYuPwllvXpy/ZPQ1cqNy08Clhlw/ZOwMs9GPO/6
JEyudOX2Pxk2R7j7SZKRf53bTyRjxfov3PyTcXdeGy4/GRk1rVx+MjZVcOdH
lwxVFufXJ2N4G04X5Igv4tZrJEd6N27eEjk2GpiKbC7H7bju3PrkqE9/Jt7P
XY7kF9x5lsqx0A3i9XI5Lu0dx61fjrg67nxkyvFwPzfvXDl+L+Y4X47AKoHb
XznKXLj9uCFHiU9bbt5yxJZz/evluDyQ8wsK7FJzfiMFzhlyz5NEgdVV3Hkx
V+BiVBN3PhVoG9de9LsroB7KzU+qwIS/ufXLFcix/Is7vwoMrv9D5Mx/uJab
pwKXPCO5/gro8YXrr4B1B3vxfN1QYHQJp+sVMAyXiVyvQJ6ZCddfiYR13PvC
SImSK9x6JUoc1HL7Y66EZwG3f1Cisz3H7krMt+SulypxfzfHciV0//f+Un69
AzefTCW2bOP0XCU+JHDzzFcisw+n65SobeDeBzeUULzj5qVXYvkB7rzXK5H1
3ojrr4J+PTcvIxVisvj+Khx14/urELeE76/CtNl8fxXWbOCfVxX8qrnzJFeh
zcoWbv4qrPjMcaYKfTP4/irkZnHPZ74K3eq49elU8Gpt5PqrcLLkFtdfhVuV
Z7j+KnS1u8k9/2r8fXEE11+NH8wPcf3VyDJ6wfVXo7EpmeuvhtGFms/i86/G
mtJOn8T+aqS5Hxa/F+RqyHracv3VGHKrWzvx+f/KMWPF75dcNW7aHf7Irs9X
o4+m+q34flPj08NHYv4NNVyGrvlWPP9qWOvc+onnX40vrQvE7ydBg0kKBzHf
SAPLFYnc95AG2kTu/7u5Br9VjuX6azDvPnee3DVwsuDmJdVA5V9ontOGfJ/K
Nei+scLnxLD1pL8G7arfT0+tJN+zmRqcqTXwP9d2I+mvweslKR6lOT+R/hpc
flv04OyqTaS/BpuLfkzTVW0l/b/m30k/7HqefD/rNaitKi9PPbWd9Neg5aes
6oR7O0n/FFzSNu1+MHwP6Z8Ch2HZ5zdm7yP9U6AMa02MMz1I+qegNWf/aNv7
v5H+Kejo+XHm0rv5pH8K9pd79L3nW0D6p2C07prhyEeFpH8K4t/mffx70THS
PwU2s/x+OTzqBOmfgvbmW+0+15wk/VPwLHzvxaj9p0n/FOwec8JrweKzpP/X
+6f5am7KzpP+KbD3DW3QjtSR/im4OLDIwnvEBfwHxwnOGA==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {6}}]& ], 
          "1000"], Annotation[#, 1000, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
kDYQP/Sh/b9OBSPdH3fe/Zf/A2L5R90=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {7}}]& ], 
          "10000"], Annotation[#, 10000, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#7"]& ]}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.49727817247600936`, 2.9584986765552084`}, {
               146.9101687477592, 29756.263885647357`}], 
              Offset[{0, 0}, {148.99180327868854`, 35472.184521182375`}], 
              Offset[{0, 5}, {148.99180327868854`, 35472.184521182375`}], 
              Offset[{0, 10}, {148.99180327868854`, 35472.184521182375`}], 
              Offset[{0, 10}, {148.99180327868854`, 35472.184521182375`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.49727817247600936`, 2.9584986765552084`}, {
               146.9101687477592, 29756.263885647357`}], 
              Offset[{0, 0}, {148.99180327868854`, 35472.184521182375`}], 
              Offset[{0, 5}, {148.99180327868854`, 35472.184521182375`}], 
              Offset[{0, 10}, {148.99180327868854`, 35472.184521182375`}], 
              Offset[{0, 10}, {148.99180327868854`, 35472.184521182375`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{10.472923704166643`, 22.}, {148.99180327868854`, 
               35472.184521182375`}], 
              
              Offset[{10.472923704166647`, 10.000000000000002`}, {
               148.99180327868854`, 35472.184521182375`}], 
              
              Offset[{-6.5270762958333535`, 9.999999999999998}, {
               148.99180327868854`, 35472.184521182375`}], 
              
              Offset[{-6.527076295833357, 22.}, {148.99180327868854`, 
               35472.184521182375`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["20", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{1.9729237041666448`, 16.}, {148.99180327868854`, 
             35472.184521182375`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.1977986058676038`, 2.7505051353854304`}, {
               159.14394426145662`, 217.98227004958233`}], 
              Offset[{0, 0}, {161.9918032786885, 3236.2437882173435`}], 
              Offset[{0, 5}, {161.9918032786885, 3236.2437882173435`}], 
              Offset[{0, 10}, {161.9918032786885, 3236.2437882173435`}], 
              Offset[{0, 10}, {161.9918032786885, 3236.2437882173435`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.1977986058676038`, 2.7505051353854304`}, {
               159.14394426145662`, 217.98227004958233`}], 
              Offset[{0, 0}, {161.9918032786885, 3236.2437882173435`}], 
              Offset[{0, 5}, {161.9918032786885, 3236.2437882173435`}], 
              Offset[{0, 10}, {161.9918032786885, 3236.2437882173435`}], 
              Offset[{0, 10}, {161.9918032786885, 3236.2437882173435`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.499999999999998, 22.}, {161.9918032786885, 
               3236.2437882173435`}], 
              
              Offset[{8.500000000000002, 10.000000000000002`}, {
               161.9918032786885, 3236.2437882173435`}], 
              
              Offset[{-8.499999999999998, 9.999999999999998}, {
               161.9918032786885, 3236.2437882173435`}], 
              
              Offset[{-8.500000000000002, 22.}, {161.9918032786885, 
               3236.2437882173435`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["60", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., 16.}, {161.9918032786885, 3236.2437882173435`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.5592095422798113`, 2.5629798288834778`}, {
               108.02149991315629`, 92398.57592647418}], 
              Offset[{0, 0}, {111.99180327868852`, 95410.70875971486}], 
              Offset[{0, 5}, {111.99180327868852`, 95410.70875971486}], 
              Offset[{0, 10}, {111.99180327868852`, 95410.70875971486}], 
              Offset[{0, 10}, {111.99180327868852`, 95410.70875971486}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.5592095422798113`, 2.5629798288834778`}, {
               108.02149991315629`, 92398.57592647418}], 
              Offset[{0, 0}, {111.99180327868852`, 95410.70875971486}], 
              Offset[{0, 5}, {111.99180327868852`, 95410.70875971486}], 
              Offset[{0, 10}, {111.99180327868852`, 95410.70875971486}], 
              Offset[{0, 10}, {111.99180327868852`, 95410.70875971486}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{11.560667790437735`, 22.000000000000004`}, {
               111.99180327868852`, 95410.70875971486}], 
              
              Offset[{11.560667790437739`, 10.000000000000004`}, {
               111.99180327868852`, 95410.70875971486}], 
              
              Offset[{-10.439332209562261`, 9.999999999999996}, {
               111.99180327868852`, 95410.70875971486}], 
              
              Offset[{-10.439332209562265`, 21.999999999999996`}, {
               111.99180327868852`, 95410.70875971486}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["100", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.5606677904377377, 16.}, {111.99180327868852`, 
             95410.70875971486}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.8771860700100521, 2.868892573551739}, {
               136.94113073118123`, 72141.01827609622}], 
              Offset[{0, 0}, {139.99180327868854`, 76745.99964901748}], 
              Offset[{0, 5}, {139.99180327868854`, 76745.99964901748}], 
              Offset[{0, 10}, {139.99180327868854`, 76745.99964901748}], 
              Offset[{0, 10}, {139.99180327868854`, 76745.99964901748}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.8771860700100521, 2.868892573551739}, {
               136.94113073118123`, 72141.01827609622}], 
              Offset[{0, 0}, {139.99180327868854`, 76745.99964901748}], 
              Offset[{0, 5}, {139.99180327868854`, 76745.99964901748}], 
              Offset[{0, 10}, {139.99180327868854`, 76745.99964901748}], 
              Offset[{0, 10}, {139.99180327868854`, 76745.99964901748}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{13.005939517251772`, 22.000000000000004`}, {
               139.99180327868854`, 76745.99964901748}], 
              
              Offset[{13.005939517251775`, 10.000000000000004`}, {
               139.99180327868854`, 76745.99964901748}], 
              
              Offset[{-8.994060482748225, 9.999999999999996}, {
               139.99180327868854`, 76745.99964901748}], 
              
              Offset[{-8.994060482748228, 21.999999999999996`}, {
               139.99180327868854`, 76745.99964901748}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["200", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.0059395172517736`, 16.}, {139.99180327868854`, 
             76745.99964901748}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.8636289038004947, 2.873002804822918}, {
               104.88321087415375`, 99056.44055517351}], 
              Offset[{0, 0}, {106.99180327868854`, 102293.95148231515`}], 
              Offset[{0, 5}, {106.99180327868854`, 102293.95148231515`}], 
              Offset[{0, 10}, {106.99180327868854`, 102293.95148231515`}], 
              Offset[{0, 10}, {106.99180327868854`, 102293.95148231515`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.8636289038004947, 2.873002804822918}, {
               104.88321087415375`, 99056.44055517351}], 
              Offset[{0, 0}, {106.99180327868854`, 102293.95148231515`}], 
              Offset[{0, 5}, {106.99180327868854`, 102293.95148231515`}], 
              Offset[{0, 10}, {106.99180327868854`, 102293.95148231515`}], 
              Offset[{0, 10}, {106.99180327868854`, 102293.95148231515`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{11.33141346784818, 22.000000000000004`}, {
               106.99180327868854`, 102293.95148231515`}], 
              
              Offset[{11.331413467848183`, 10.000000000000004`}, {
               106.99180327868854`, 102293.95148231515`}], 
              
              Offset[{-10.668586532151817`, 9.999999999999996}, {
               106.99180327868854`, 102293.95148231515`}], 
              
              Offset[{-10.66858653215182, 21.999999999999996`}, {
               106.99180327868854`, 102293.95148231515`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["300", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.33141346784818027`, 16.}, {106.99180327868854`, 
             102293.95148231515`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.6315549187554707, 2.9327697462630393`}, {
               151.6542967202389, 67791.21384539935}], 
              Offset[{0, 0}, {154.99180327868854`, 74944.3863310887}], 
              Offset[{0, 5}, {154.99180327868854`, 74944.3863310887}], 
              Offset[{0, 10}, {154.99180327868854`, 74944.3863310887}], 
              Offset[{0, 10}, {154.99180327868854`, 74944.3863310887}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.6315549187554707, 2.9327697462630393`}, {
               151.6542967202389, 67791.21384539935}], 
              Offset[{0, 0}, {154.99180327868854`, 74944.3863310887}], 
              Offset[{0, 5}, {154.99180327868854`, 74944.3863310887}], 
              Offset[{0, 10}, {154.99180327868854`, 74944.3863310887}], 
              Offset[{0, 10}, {154.99180327868854`, 74944.3863310887}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{18.72195253186579, 22.000000000000004`}, {
               154.99180327868854`, 74944.3863310887}], 
              
              Offset[{18.721952531865792`, 10.000000000000004`}, {
               154.99180327868854`, 74944.3863310887}], 
              
              Offset[{-9.278047468134208, 9.999999999999996}, {
               154.99180327868854`, 74944.3863310887}], 
              
              Offset[{-9.278047468134211, 21.999999999999996`}, {
               154.99180327868854`, 74944.3863310887}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["1000", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{4.7219525318657904`, 16.}, {154.99180327868854`, 
             74944.3863310887}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.1600188215707374`, 2.7666507429745515`}, {
               147.06182497698904`, 97068.60261390643}], 
              Offset[{0, 0}, {149.99180327868854`, 100293.85295863383`}], 
              Offset[{0, 5}, {149.99180327868854`, 100293.85295863383`}], 
              Offset[{0, 10}, {149.99180327868854`, 100293.85295863383`}], 
              Offset[{0, 10}, {149.99180327868854`, 100293.85295863383`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.1600188215707374`, 2.7666507429745515`}, {
               147.06182497698904`, 97068.60261390643}], 
              Offset[{0, 0}, {149.99180327868854`, 100293.85295863383`}], 
              Offset[{0, 5}, {149.99180327868854`, 100293.85295863383`}], 
              Offset[{0, 10}, {149.99180327868854`, 100293.85295863383`}], 
              Offset[{0, 10}, {149.99180327868854`, 100293.85295863383`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{17.143569574934414`, 22.000000000000004`}, {
               149.99180327868854`, 100293.85295863383`}], 
              
              Offset[{17.143569574934414`, 10.000000000000004`}, {
               149.99180327868854`, 100293.85295863383`}], 
              
              Offset[{-15.856430425065584`, 9.999999999999996}, {
               149.99180327868854`, 100293.85295863383`}], 
              
              Offset[{-15.856430425065584`, 21.999999999999996`}, {
               149.99180327868854`, 100293.85295863383`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["10000", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.6435695749344151, 16.}, {149.99180327868854`, 
             100293.85295863383`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Medical Supplies\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 100000.}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.08920087972738351]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"20", "60", "100", "200", "300", "1000", "10000"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\nproduction rate\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\nproduction rate\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.899561962926087*^9, 3.8995622782771883`*^9},
 CellLabel->"Out[116]=",
 CellID->783330166,ExpressionUUID->"2474ae43-392c-4a80-a682-b7268e83fc1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 3.79556297488484*^9}, {
  3.795563059996977*^9, 3.7955630609711*^9}},
 CellID->295709980,ExpressionUUID->"6c0dcaf5-6823-4cae-b382-7f8ac9f86ad2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.7955632049989843`*^9, 3.795563214490553*^9}, 
   3.79556327410254*^9},
 CellLabel->"In[117]:=",
 CellID->720474702,ExpressionUUID->"0d727cb4-fce1-4f97-8a74-e597eb7fc95c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["20",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["60",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["100",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["200",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["300",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1000",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["10000",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "1.27656873366115`*^7", "1.3251935669620581`*^7", 
     "1.3739428959283462`*^7", "1.422147054002208`*^7", 
     "1.4493542006066874`*^7", "1.5664688664464504`*^7", 
     "2.9749830286188006`*^7"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.899561963160964*^9, 3.899562278322983*^9},
 CellLabel->"Out[118]=",
 CellID->1355343852,ExpressionUUID->"b117a07c-d094-4959-9023-e9c51d42712d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "&"}], ",", 
      RowBox[{"Keys", "[", "aAUCs", "]"}]}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
   3.795563089270934*^9, 3.795563094734707*^9}, {3.795563188877359*^9, 
   3.7955631892435427`*^9}, {3.795563231448268*^9, 3.795563255689892*^9}, {
   3.795563332699952*^9, 3.7955633428676443`*^9}, 3.795619911973071*^9},
 CellLabel->"In[119]:=",
 CellID->1505514728,ExpressionUUID->"7bf03f53-987f-4300-a97d-fd04411de4d5"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.651], 
     Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 1.27656873366115*^7},
          
          RoundingRadius->0],
         StatusArea[#, 1.27656873366115*^7]& ,
         TagBoxNote->"1.27656873366115*^7"],
        StyleBox["1.27656873366115`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.27656873366115*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7769922610498962, 0.5069809840555005, 0.9445877299317975], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 1.3251935669620581*^7},
          
          RoundingRadius->0],
         StatusArea[#, 1.3251935669620581`*^7]& ,
         TagBoxNote->"1.3251935669620581*^7"],
        StyleBox["1.3251935669620581`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3251935669620581`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7920640122232577, 0.543222521473497, 0.9485886774529312], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 1.3739428959283462*^7},
          
          RoundingRadius->0],
         StatusArea[#, 1.3739428959283462`*^7]& ,
         TagBoxNote->"1.3739428959283462*^7"],
        StyleBox["1.3739428959283462`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3739428959283462`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.806967213793746, 0.5790587644655798, 0.9525448817914016], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 1.422147054002208*^7},
          
          RoundingRadius->0],
         StatusArea[#, 1.422147054002208*^7]& ,
         TagBoxNote->"1.422147054002208*^7"],
        StyleBox["1.422147054002208`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.422147054002208*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8164602928493817, 0.5930050630188579, 0.9316613554700243], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 1.4493542006066874*^7},
          
          RoundingRadius->0],
         StatusArea[#, 1.4493542006066874`*^7]& ,
         TagBoxNote->"1.4493542006066874*^7"],
        StyleBox["1.4493542006066874`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.4493542006066874`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.8595579754343423, 0.6400636758992947, 0.7940118218734609], 
      EdgeForm[{Opacity[0.651], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 1.5664688664464504*^7},
          
          RoundingRadius->0],
         StatusArea[#, 1.5664688664464504`*^7]& ,
         TagBoxNote->"1.5664688664464504*^7"],
        StyleBox["1.5664688664464504`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.5664688664464504`*^7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.651], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 2.9749830286188006*^7},
          
          RoundingRadius->0],
         StatusArea[#, 2.9749830286188006`*^7]& ,
         TagBoxNote->"2.9749830286188006*^7"],
        StyleBox["2.9749830286188006`*^7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.9749830286188006`*^7, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.4107501820830298, 0.}, {7.592010779315368, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{7.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {7.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}], LineBox[{{6.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
              0.}]}], LineBox[{{6.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           RotationBox["\<\"20\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {1., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"60\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {2., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"100\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {3., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"200\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {4., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"300\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {5., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"1000\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {6., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"10000\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {7., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4107501820830298, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
    TemplateBox[{"\"Medical Supplies\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.899561963209648*^9, 3.899562278355195*^9},
 CellLabel->"Out[119]=",
 CellID->46120378,ExpressionUUID->"981b530d-cc29-41bf-b1fb-1e9d77b1449e"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Variation of delivery disruption starts", "Subsection",
 CellChangeTimes->{{3.795596468558853*^9, 3.7955964773461447`*^9}, {
  3.7955969378645678`*^9, 3.795596941317894*^9}, {3.795597999972139*^9, 
  3.7955980031897707`*^9}},
 CellID->1533704542,ExpressionUUID->"d9143cf0-9eee-4b34-bbd2-fa4555c2c237"],

Cell[CellGroupData[{

Cell["\<\
Here we compute simulation solutions for a set of delivery disruption starts \
using disruption length of 7 days and disruption \
\[OpenCurlyDoubleQuote]slowing down\[CloseCurlyDoubleQuote] factor 2:\
\>", "Text",
 CellChangeTimes->{{3.79559565982668*^9, 3.795595681518528*^9}, {
  3.79559740019081*^9, 3.795597404229685*^9}, {3.7955978235016937`*^9, 
  3.7955978757816563`*^9}},
 CellID->726022453,ExpressionUUID->"eac81493-79e0-4e83-928d-52deeecd7c28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "ddsVar", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"ddsVar", "->", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"ModelNDSolve", "[", 
             RowBox[{
              RowBox[{"SetRateRules", "[", 
               RowBox[{"modelSEI2HREcon", ",", 
                RowBox[{"<|", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[Kappa]", "[", "MS", "]"}], "\[Rule]", 
                   "100000"}], ",", 
                  RowBox[{
                   RowBox[{"\[Kappa]", "[", "HMS", "]"}], "\[Rule]", "1000"}],
                   ",", 
                  RowBox[{
                   RowBox[{"mspr", "[", "HB", "]"}], "\[Rule]", "100"}], ",", 
                  
                  RowBox[{"ql", "\[Rule]", "56"}], ",", 
                  RowBox[{"qsd", "\[Rule]", "60"}], ",", 
                  RowBox[{
                   RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
                   RowBox[{"3", "/", "1000"}]}], ",", 
                  RowBox[{"dbp", "\[Rule]", "1"}], ",", 
                  RowBox[{"dds", "\[Rule]", "ddsVar"}], ",", 
                  RowBox[{"ddl", "\[Rule]", "7"}], ",", 
                  RowBox[{"dsf", "\[Rule]", "2"}]}], "|>"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
            "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}]}]}],
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"40", ",", "120", ",", "20"}], "]"}], ",", "365"}], "]"}]}],
       "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.795594988373721*^9, 3.795595042599126*^9}, {
   3.795595077487207*^9, 3.795595109899185*^9}, {3.795596503068597*^9, 
   3.795596646282609*^9}, {3.7955966869448023`*^9, 3.79559672577597*^9}, {
   3.7955967628590727`*^9, 3.7955968235317793`*^9}, {3.7955974302764378`*^9, 
   3.79559746156117*^9}, {3.795597745215475*^9, 3.795597745549872*^9}, {
   3.795597923260331*^9, 3.795597967313772*^9}, 3.795617129925963*^9, {
   3.795617455518653*^9, 3.795617530838056*^9}, {3.795617666784709*^9, 
   3.795617683561266*^9}, 3.795620120848329*^9, {3.79562017507101*^9, 
   3.795620202625725*^9}},
 CellLabel->"In[120]:=",
 CellID->257285317,ExpressionUUID->"6d2b13ef-c327-48ac-8a50-4970cf91e2d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.177208`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.899561963406654*^9, 3.899562278547626*^9},
 CellLabel->"Out[120]=",
 CellID->1448919319,ExpressionUUID->"a98b85f4-ded8-41a9-b7da-da15e46ba906"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note, that disruption start at day 365 means no disruption. Also, we use \
three hospital beds per thousand people.\
\>", "Text",
 CellChangeTimes->{{3.795597890261262*^9, 3.795597912558473*^9}, {
  3.795620228520543*^9, 3.795620295078094*^9}},
 CellID->1309741408,ExpressionUUID->"c2c1181e-a4d3-45ee-96ea-f77c7e3cfd0c"],

Cell[CellGroupData[{

Cell["Here we plot the results for HP only:", "Text",
 CellChangeTimes->{{3.795595685872078*^9, 3.7955957289149427`*^9}, {
  3.795596811895562*^9, 3.7955968129756193`*^9}},
 CellID->1116462506,ExpressionUUID->"c1958f80-725c-4ee1-9efe-f5bc4a899133"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "009", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "HP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", "#1"}], "]"}], ",", "#1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"60", ",", "140"}], "}"}], "]"}], ",", "Bottom"}], 
         "}"}]}], "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"Keys", "[", "aVals", "]"}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\ndisruption start\>\""}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795595056179405*^9, 
   3.795595072738517*^9}, {3.795595157671277*^9, 3.795595199632392*^9}, {
   3.7955952456250753`*^9, 3.795595273084453*^9}, {3.79559570107738*^9, 
   3.795595721873345*^9}, {3.795596715157984*^9, 3.7955967192059383`*^9}, {
   3.795596785347459*^9, 3.79559678763986*^9}, {3.79559684722462*^9, 
   3.795596868577026*^9}, {3.795597125937623*^9, 3.795597323755536*^9}, {
   3.795600995121154*^9, 3.795601030199226*^9}, 3.7956020951052322`*^9, 
   3.795602745931857*^9, {3.795602785753594*^9, 3.795602826434808*^9}, {
   3.79560290956074*^9, 3.795603012400429*^9}, {3.7956030503956003`*^9, 
   3.795603128198551*^9}, {3.7956169902323837`*^9, 3.7956170049562483`*^9}, {
   3.7956170491020737`*^9, 3.7956170677319517`*^9}, {3.795619721519725*^9, 
   3.795619749441154*^9}},
 CellLabel->"In[121]:=",
 CellID->1820714503,ExpressionUUID->"fdf69846-5d76-458a-b50a-3ba089b39482"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2578334033776537313", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2578334033776537313", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{5036, 13563159028677958076, 
      10360937629398765338, 6137948905655632455, 10321018127578421298, 
      9079989769149066058, 7705053374595887622, 5229988382961639392, 
      5156838387220733400, 9788850661185404310, 6490748775444185671, 
      427073533600500792, 10349138132134440192, 12719257658869136672, 
      17328815426683912411, 5656691935638848960, 577010745156103955, 
      8987750026144124530, 7304735824770388161, 17504556336015633801}], 0, 20,
      20}, {CompressedData["
1:eJw1lcvKXEUQx4O4cKvmBXyAQN2ra+nyAxcS8QEiJiGbCElAfHt/Pd0DwzBz
zum6/G/nl7/+efvhu1evXn39ga+37/799cuXd//98SN//vz89dPHz+//fvn8
7f3H918qPvy+n/uer98+ff328pofbzzFrNZKFzGvpTUvP3OjQyJrUlqzl0n0
nAMaYaFi1ZbOndJ7YyTdtXWpj4RNjDwqhazoNk1fujKLUudArKng/FrdLd1R
dg6UelTouPmatnA7BzicXiml1b7rVzyXqEgR7S5+rDHxRyUzbW+hZbn1yJKz
3JLOWsbfkdHUfhZa4WUitPXlo0ssTiGxZSbTocr8fNa5HiE6EZppqt6l8fLT
Rs8z22hvPCtrIk99cwvjWetUHbDQg5Hl7jCqy2KlGnXvAuBgZTPWBbjW/bjO
NrLYlXlWhoOu3jqdOU0/BRBj83P9ja2kZ2vU+J7YzvUUlw5Ku1juSVMe8+sm
rJmpTGWMWlcUqCRF12ZgvOl0GAtBDraZmamuvmuxiEkuRFEhDBz2lES7OjMy
iMBptB98aLty1fKaVahxa+jcSM7QVVEZ84zIVV2MFtioGx/65+iFOhFcbTya
3WUL7EC3HmRmNUe9W80vRPR0BQXQlwV+da9npMF5g+egI+8riRF6egE/88Om
PaBbnuNoR2tj6zB62rKB79qzWMCXSN0FkDLjO44BQdsPPI0GeI6fIKBGw/WK
dDsAlifAPLDuqguSowY2Xch5H4SmOypOAphCe9Oy/XFmogZOCBCFPOhZM1fV
uf8WhoYNGrdftWyXAZ9SG79ihTsqzqpkcp8uthE9DZgIDquYEHZ8Nkb7Ok8Y
6wja5i5G12MnnswlsDvIbmtAjl4IDiRkaIMVORN6IwSo01nnkT2Vm47buKRH
Dd2tbTd5qgK6yrMdh5N5BIg/IyTWI3UYrMEbOx/swB09cIrZUAL9TweXHR24
pna+FZNe2tCt7zxA37O7I52zG2TO6EMrkG96r4MDWYYZHD1mRNtdoZAJWGCP
3jk5NxLeUD62nJc8otju89jMt8WroFNj73eNwGxKmiIi2c/U3aARA9YBs1n8
VrC/GwjmYBQUxidXP03IyMN7gmcJwr3yPGkgzZQ0I8c5sLP77LZOWjdKsmGf
eLYAye1xLOikBjT05YcqhBzKQsPIAv6ufTgBeLmdzNzA9aSHfVucGC4Q5g3x
JPrxPuGVsBNAACav36iOLffrAIZwgF78avdK/A8YuNkWmb39TDpu4NydV8m2
jt8YiWBRSuxAbOrdxN4py9ZgmmRYP2lbIM3LjBAH8IXT8tK5WeaNw7IwLTuq
/gdUlmZa
     "], 4, 0}}, RawArray["UnsignedInteger64",{2578334033776537313, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899561963415372*^9, 3.899562278569685*^9},
 CellLabel->"Out[121]=",
 CellID->1669921100,ExpressionUUID->"66bcae45-e970-4405-8c7c-fe2a8f13442b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHk4lHsfxomKUimtlkwirZItEW5JZSk72QdjH2aftlPGUhFFb1FRkdLi
JNoP51TaTkWLVIqWM1k6lSiKVnl7L9/nj9c/ro+vez7PfV08v2VKOM8zcpCC
gkKiooLC/74PfH2wU/j/L5iZFHSklmTTz1VQojdNdXBFGbE6FH9MuqFacYl4
LKyqjM98Uaolngg/Rz9dI/FDYm3oTP3Y7PPgGTELaw7YabawW4j1UNUx4/NP
yzfE+kh+WfJujyrzXNOwoqrlvUztE/F0iHdemrnq4hfimQgYNnroHZufxLMx
K82S6+o3CANsBNvSM313dYYQG8P/fp7l6cxhxPPwnqWQVnNxFLEJlKdHq07u
GENsihRVu92VqeOJzbDTSSDY+6cmsTmGvfryIOmkLrEFnlpaSvOv6hHPx9QA
N3tHk2nEluh647xkzsKZxAsw+X6cpOWHEbEVOJrjzeOdTYitsTtXqDg+15x4
IUZ92mokFy8gtoHHAg25obItsS1OJg85+6nCntgOvje9DB0bFxMDlhdiToXn
LBtgGaD69VppyHtXmtsjq/xq5l1VD5rbw1uxfuTfo7xpvgjsGRzRn/v8aL4I
jcoNcda1gTR3gFvi8F0v/dk0d8Dr12qHyqwjaL4Ykz8lPSneF0XzxeDFt14N
yY2juSMC1B/+bLXm0dwR52uX1vf5Cmm+BDfrb+S2DZbQfAmq8/zebopeRfOl
UNlqLzUoXEPzX2xWU2BbtY7my9B9uFx12cX1NF+G+Nm5Zp4RMpo7YdW0qtFl
Cik0d0LXzKTU45qpNHfGqCnWD4ffJpY547WKQp21fRrNXbBBaL42YBexzAUi
1fIzjc+ZuSsueFadMNLeSHNXmCZf2XjDh1hhORxv6U8xzmLmy/HycluDdjUz
X4Gp0vKVrV3MfAVgVup1dsommruhoWA1t8yNWOYGVwON583rmLk7MhsUZTGH
ieGOO6tmCdzuMb/vjm06Yy8c6SWudoeGWUCpTHsz5T3gnsBpeg1ieOB8WKF/
ZwSxzAMlOuOO7d9IXO2BzB+Lrw85zOQ9kd54c5bpdSbvCZdFkfK5LUzeE4Ij
VwUqCumU98R56w99N7SIFbywcMthizUWxPjF28SR09yJZV6IEx7hNcYweS/4
z5vdVCBj8t5YUmtyR7qLyXujf+7ZCaIyJu8NtZFNJnuuMHlvaMoXOnY1MHkf
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
L9VqptA=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {1}}]& ], 
          "40"], Annotation[#, 40, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHk41O3bxkdpQYoWpaKhBUlKKio5bZFkyU4Yy9iN2bWieCppUY9Kevql
RYsUFSWVFJXSop822iakDa3K06K393Dd73G8/nF8XHPO53vOjPne960XlriI
34vD4QiUOJz//d3z88Ga8/9/YG62qz0tfzP9vT/y9Seo9Ck+RqwBpZ/a11SK
LxIPxazyKSVdvWuJR8DXwXfMZOk94tHQGfu5ybv+CTEXS/daj2zmNRPro7zd
6Fu3xRvicVj1Ir9tpwq7rglwLW9+nzrgC7EhpNkXJyZVdBFPRICqZr9bVt3E
k2CcbhHv4tsLPTwZcwtKft3W6Us8Bf53t1ucylQlnor3XE76jYpBxGZQNoxS
0W0fTDwNq1Wsc86maRGbI3u+SPTPuZHE06Ha2lWfcmIM8Qw8trCQ51bpE8/E
2AA3GwezCcQW+PjGeZ7JnInEltC9Gytr/jmZeBYiRmpNj3M2I56NnG1iJa1t
04nnYNCXjZMVUktiK3hYDlEYKM8lnosTq/qWfim2IbaGT42ngUODPTFgcSH6
ZFiWUw+nAir/VhcEv3ehuQ02FFVl3lbxoLkNvJT+O/DqIC+a24JnFCE5t9uX
5rZoUH4QO7s2kOZ2cBOo7Xjhz6O5HV6/HnDg2OxwmttD90vKo327I2lujwdJ
ovrgbbE0d4B2pVt3y+xEmjtAI6xhWT9fMc3noVlmprFqjYzm8yBcpWbiab2U
5o5IU0m+prZjJc0dcVDb6Bkfq2juBN9vSnvGHkmjuRMuK0quL+j4i+bzsTRa
J3vz1rU0n4/nE2d0LkldR3Nn5EoU2qt+Eqc643OAioG5VQbNF+D8gaEzxaHE
qQvwRHhF9e8lbO4CyxPH75VksLkLZvwqPdQrh80XIqemK+3JATZfCO8gs7iG
YjZ3xSm3+ZtnnWdzV2zlnxyjc43N3SAr25VpupfN3XBLL6V2pxObu+OWVleA
hYKuH+5Ir9935rKU9XHHnTuLXtWqEle6IzB446g3++n14Hig5YrS1e0ghgeU
b0WedNZkr5cHDj7cEv1gOHGlB+Jbi3c5TmX5RUh+2618053lF8HbTLmkRMTy
i3DKZ9Itd/b6Vy7CAGOrH/1PsrwnKtxHTDpWx/KeuJQWyZnWwfKeyNidU7T7
/67fE3OV+pl0jmfvnxeUp517ZQvW/8/nuvtibpY/6++FQwumKl6JWN4LfM0z
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
fWD9P3mdpts=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {2}}]& ], 
          "60"], Annotation[#, 60, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
zM8axp8+NVL+ZJia627hLWpc/R/4Br2w
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {3}}]& ], 
          "80"], Annotation[#, 80, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
Vs++tMz4H8znmXE=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {4}}]& ], 
          "100"], Annotation[#, 100, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHk01fn/x6/SIkKTlEqkKdEmlZDliRAtQvbt4tqu7e5o4RbtU2QylGZC
KK0KU5ZK+2Im1LQgdUtUWiylFX37nfv6/PHzj/Pwuk+P++Tcz3uZGhLvFjaE
xWLFKbBY//dd/tVtzfr/X1honPsutSidfj4SRXozlIaVniBWh0K/1g2l0ovE
GjCvMir/MrSOeAK87L105or+I54M7Wkfnnvce0ysi6R864lt7DZiPVS9M/g8
aPqa+FdsfFb0dp8S875mYFVVW5dU5SPxTIj2XjRMuPCF2BC+o8aM+NdykHg2
ZqWZxqzwGgI5z4XV0fKBO9rDiY3g0/iHadnOUcTz0aXLSrt9QY3YGIozI5Sm
vPuFeAE2KVnnVKZqEi/EXic+/0D1ROJFGNXx5V7KaR1iE7SYmkr2X9EjXoxp
vi429sYziE3R89rZYY6FIbEZpjRyxW39c4nNwZmouSja2Zh4CXKyBAqaWYuI
LaD2cddcmciM2BKuZmNl+opWxFY4vXF4xcdSG2JreN5017dvWkoMmJ6PPBOS
sUzOUkDp69WjgV0raG6D305d2XlHyZXmNlijcFf1utoamtuCbcARVv/pRXNb
NCk+4C6p86O5HVzilLOf+bBpbodXr1QKTywJpflSTPmY8qjgz3CaL8WDBP69
wCwuze2hVesy+GJJPM3toR7StHaEl4DmDmgTG6tv3CKmuQN4G5XnuFsn0dwR
qUrJN5SzN9DcEcVaBk/CsJHmy+D1WeHgtJJUmi/DZVn5reXvN9PcCUmR2nvT
M7fS3AlPDU36EqXbaO6M/UKZ1sZ+YqkzPvgq6S+03E7z5agp1FgsCCaWLsdj
3rVRvycy8xUwO33yv/LtzHwFTAYqDg/JYeYrkXPzS+rjQma+Eh4BxtFNpcx8
FcpcnNLNa5j5KmSGndHRvsHMXRCiuNkvvZGZu0B5p9BtXwszX42dZYkpaCfG
ajxsTrXa/p55/WpoG6hzEj4T166Gqu+WtaqsHZR3RaSDZ4vrSGK4Im17fuVS
dWKpK7ptZ+h3jieudcWSwSea9jpM3g2JKRWB3jOYvBvEu+6emzGHybvhwsba
q2cWMHk3HM+TjPxhxuTdMVzHo2c0mLw7Jg7RvP/Mnsm7o2SwrHf9cibvDj2L
ZcJnq5n8GjREPuWO8WTya1Bc59Ck6sfk1+B6WePRliAmvwauzydUJnGYvAeu
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

             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {5}}]& ], 
          "120"], Annotation[#, 120, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
gxuHVXVbvTOaBOSPQ9m9rIrvvsTyOJwMSovuVPDJH4finKdcoSWxMg5iwV9u
mV60nlGJh0lbZELerFTyx+ONs9uqJqSQPx5Vij7lYc7J5I/HVRPtqlLvJPLH
I3Ls15yKWFovyePxtsGop21WIvnjoV/hnqm2K4H88ei7UWvHm9p48icgdv7u
PSVdtP7iJGBP/8EB5lOJkYCRWhvGWYhjyZ+A9sa20JwTMeRPwHC/Hp9VexLL
E1DzVb1K7EvrO0UCZmJ1/tH9UeRPgKNHe6816sQqiXiVFHH2YVwk+RMxoq/r
jJRaWi8iEaN1/jTk2BJzE7GztWzNOt8I8ieC9/T+yiUO4eRPhNbeVYZnLcPI
n4g9XyNMfv0xn/yJUPa7trZjCluf8qAumToidVYI+Xlo6vV4o3ZoMPl/zw1j
NhVlBJGfB/N6rd1129h6l4ddQZEcQW0A+Xn44lVt59CDWMFDlyzw88/p/uTn
IXnw3o40GVs/J+HfpfLHkTW+5E9Cn8vjS4oMiJGEQf79571K8SF/EiqSjxhp
17D1eBI8HTyMG82I5UlwyRzzxirfi/xJsL9+9/OO757kT0LTZGXJsEce5E/G
CocVbZkX55E/GbPW3Y5PPUnrfyQjr53D21oxh/zJcNyyR+VspTv5k5Hb/2Jl
5g038ifjavxfJwpe035CkQyRmkby8V7EymTscDAt3W4+m/wp6L/a9rBOuAv5
U+BU53CyaoMz+VNwfqKdv+Q27Ve4KdgxsmrIJz1iWQr01Wt2Nkc6kT8F4buy
853KZpI/BYrvL4OP9CVWpiD9o4t/VzzbD6Uid27D9o6rIH8q9DVgkW5FjFQc
+uZ7QzbTkfyp2GK/U32eKe2vZKlon6Bc1q4/nfypCL7ceneS7jTyp+JVUJpo
60B78qdin77K6U/D7cifhq4BaTV3LGn/xknDiYFNiaqeNuRPQ2/fM78miqzJ
n4aH3odSBmybSv40SJzHqPFu035QnobHl0KSW7SIFWmY5uq7PsljMvnTcKx9
2ebNm6zIz4fx+WfH7V7R/lKHjy+hG+yH2hFz+HCbVsxT3Tipmy34SNZeKapo
s6D74yNSZxFXYz6xFx+HK+WauXl/0P3ysdy16aVIQPtZPh82OcLzwrCJdP98
TPDV8p/gO6Gb8/mY7DUw2c1nPPXhw8HY4qkkhPbHJXyMvDwhjptkRv342Ks6
dtOpZabdXMdHqtbKcps9Y6kvH61H5u9fd5P22818GFnHv16swvbfAuQ3dnmd
sRlD/QWI+/r3hD7po6m/AOqcab1GVY6i/gJUrjeX3+xLDAGyiy803A4zpv4C
XPX3Ofb1+EjqL8DwPc2Dfw4m5guw+ntZfdlCDvX/fX23GOm9GjovyBfA70lG
1pN9w6m/ABtmZzkYFRhRfwH6hJrK7JcPo/4CTE/mezdkDaX+AmyzdnpwZAWd
RygFSFypahu2yZD6C6DLy8ne9K8B9Rci3PPPddq1+tRfiAdlguaFrXS+wRHi
Q23/a+tHEVsIcdvx8M2BIYOpvxBeQXbDTmweRP2FsJpcPRpPBlJ/IXLfyvan
jCXmC2G9cfUqtQw6T5EJMXPGgjtX63SpvxB1mx8WrjQnlgvxvkP9Ue8CHeov
xEvj2l+m3+h8RiHEHiunQz9ua1N/IfRRfM7oVD/qL8S5FInc7qAW9Rei93RX
/bbdmtRfhPhz+wy+7afzHx0RLj1/suXdcQ3qL0K7YUTO4ut9qL8IQ3pHn4h7
35v6i2BQXaAI0CH2EiHxl8t1dQc6X+KKIF1zcPdEkTr1F6FyyqLC3CNq1F+E
rsI1s+tbelJ/EdxnDN2qnEYsF+F8jehW2Noe1F+Exae6bAxeqlJ/EYZt2Gn1
AMR1IohXnDSO2alC/UVoyRoamatJ3CyC0/bx9uYt7HxMDMHP8ZtKH3R2s44Y
N5blOTld7uhmjhhV9hm6yxU/u9lCDLuhCd9GXGjvZojxY5uzyrkb/+lmLzE8
X43y02mk8ziuGE6vu1ov/vrezXwxCk5Z7swfTSwTwzo08KGZ97duzhdjki/3
mNvytm6Wi3FTLfnWQQWd95WIMeBotol2T2KFGPHj7g2cNPdrN9f9vp+0/XYP
ilu6WSnGqyGWYdVfvnRzsxjt/0zyPz+PWEWC0hHjdDcfofNFHQk6DTcma+sT
cyTYdbqnzfven6m/BFd0GgOtPnyk/hIs/cv1eeHjD9RfAqXph+uVt5uovwTl
Hwvmzr37nvpLYP2svbapgc43ZRJUP1RWu7e8pf4ShOpPWGGoTSyXILnD1VbT
8g31//377J0374W9pv4SyPKv3Zm07hX1lyC1wmze42svqb8En1Z4Va3pR9z8
+/5yVxpoBLDzVin6uFdKdHe/oP5SjG69Z8prf079pbhucfrII39iCylaXhTn
mVYoqb8UpS/a7UcOJ/aSgtMcNJoz+Bn1l+LLoAPbcn48pf5SnL2Q2TD4NZ3/
yqQIeTtgkuBpPfWXQmyT7+zY8Jj6SzGo5fhPs7ePqL8UkuK7lg3tD6m/FMIy
zilNPeI6KTYZFXnG2j6g/lK06St48pj7jv8FBAeq4Q==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {6}}]& ], 
          "365"], Annotation[#, 365, "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#6"]& ]}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.7114769975524986, -2.914412544914272}, {
               118.38582577355452`, 842.8592221114569}], 
              Offset[{0, 0}, {119.99180327868854`, 816.2429028121526}], 
              Offset[{0, -5}, {119.99180327868854`, 816.2429028121526}], 
              Offset[{0, -10}, {119.99180327868854`, 816.2429028121526}], 
              Offset[{0, -10}, {119.99180327868854`, 816.2429028121526}]}]}, {
           
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.7114769975524986, -2.914412544914272}, {
               118.38582577355452`, 842.8592221114569}], 
              Offset[{0, 0}, {119.99180327868854`, 816.2429028121526}], 
              Offset[{0, -5}, {119.99180327868854`, 816.2429028121526}], 
              Offset[{0, -10}, {119.99180327868854`, 816.2429028121526}], 
              Offset[{0, -10}, {119.99180327868854`, 816.2429028121526}]}]}, {
           
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.499999999999998, -9.999999999999998}, {
               119.99180327868854`, 816.2429028121526}], 
              
              Offset[{8.500000000000002, -22.}, {119.99180327868854`, 
               816.2429028121526}], 
              
              Offset[{-8.499999999999998, -22.}, {119.99180327868854`, 
               816.2429028121526}], 
              
              Offset[{-8.500000000000002, -10.000000000000002`}, {
               119.99180327868854`, 816.2429028121526}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["40", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., -16.}, {119.99180327868854`, 816.2429028121526}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.6471512490379165`, -2.5073676959697853`}, {
               80.21542476110812, 776.7140439563811}], 
              Offset[{0, 0}, {83.99180327868854, 753.4557186362618}], 
              Offset[{0, -5}, {83.99180327868854, 753.4557186362618}], 
              Offset[{0, -10}, {83.99180327868854, 753.4557186362618}], 
              Offset[{0, -10}, {83.99180327868854, 753.4557186362618}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.6471512490379165`, -2.5073676959697853`}, {
               80.21542476110812, 776.7140439563811}], 
              Offset[{0, 0}, {83.99180327868854, 753.4557186362618}], 
              Offset[{0, -5}, {83.99180327868854, 753.4557186362618}], 
              Offset[{0, -10}, {83.99180327868854, 753.4557186362618}], 
              Offset[{0, -10}, {83.99180327868854, 753.4557186362618}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.765815343947734, -9.999999999999998}, {
               83.99180327868854, 753.4557186362618}], 
              
              Offset[{8.765815343947738, -22.}, {83.99180327868854, 
               753.4557186362618}], 
              
              Offset[{-8.234184656052262, -22.}, {83.99180327868854, 
               753.4557186362618}], 
              
              Offset[{-8.234184656052266, -10.000000000000002`}, {
               83.99180327868854, 753.4557186362618}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["60", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.2658153439477355, -16.}, {83.99180327868854, 
             753.4557186362618}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.6521711878588579`, -2.50406277197858}, {
               98.1951883074072, 779.483595196418}], 
              Offset[{0, 0}, {101.99180327868854`, 756.2024092606994}], 
              Offset[{0, -5}, {101.99180327868854`, 756.2024092606994}], 
              Offset[{0, -10}, {101.99180327868854`, 756.2024092606994}], 
              Offset[{0, -10}, {101.99180327868854`, 756.2024092606994}]}]}, {
           
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.6521711878588579`, -2.50406277197858}, {
               98.1951883074072, 779.483595196418}], 
              Offset[{0, 0}, {101.99180327868854`, 756.2024092606994}], 
              Offset[{0, -5}, {101.99180327868854`, 756.2024092606994}], 
              Offset[{0, -10}, {101.99180327868854`, 756.2024092606994}], 
              Offset[{0, -10}, {101.99180327868854`, 756.2024092606994}]}]}, {
           
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{8.760822623376427, -9.999999999999998}, {
               101.99180327868854`, 756.2024092606994}], 
              
              Offset[{8.76082262337643, -22.}, {101.99180327868854`, 
               756.2024092606994}], 
              
              Offset[{-8.23917737662357, -22.}, {101.99180327868854`, 
               756.2024092606994}], 
              
              Offset[{-8.239177376623573, -10.000000000000002`}, {
               101.99180327868854`, 756.2024092606994}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["80", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.2608226233764284, -16.}, {101.99180327868854`, 
             756.2024092606994}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.6199312857819517`, -2.5250391342204646`}, {
               123.76731253069377`, 798.4886777121897}], 
              Offset[{0, 0}, {127.99180327868852`, 771.8468350168373}], 
              Offset[{0, -5}, {127.99180327868852`, 771.8468350168373}], 
              Offset[{0, -10}, {127.99180327868852`, 771.8468350168373}], 
              Offset[{0, -10}, {127.99180327868852`, 771.8468350168373}]}]}, {
           
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.6199312857819517`, -2.5250391342204646`}, {
               123.76731253069377`, 798.4886777121897}], 
              Offset[{0, 0}, {127.99180327868852`, 771.8468350168373}], 
              Offset[{0, -5}, {127.99180327868852`, 771.8468350168373}], 
              Offset[{0, -10}, {127.99180327868852`, 771.8468350168373}], 
              Offset[{0, -10}, {127.99180327868852`, 771.8468350168373}]}]}, {
           
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{11.365949683431452`, -9.999999999999996}, {
               127.99180327868852`, 771.8468350168373}], 
              
              Offset[{11.365949683431456`, -21.999999999999996`}, {
               127.99180327868852`, 771.8468350168373}], 
              
              Offset[{-10.634050316568544`, -22.000000000000004`}, {
               127.99180327868852`, 771.8468350168373}], 
              
              Offset[{-10.634050316568548`, -10.000000000000004`}, {
               127.99180327868852`, 771.8468350168373}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["100", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.3659496834314546, -16.}, {127.99180327868852`, 
             771.8468350168373}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.3276412167906904`, -2.690235825997144}, {
               139.05007426832188`, 768.206815453714}], 
              Offset[{0, 0}, {135.0081967213115, 735.0699706893712}], 
              Offset[{0, -5}, {135.0081967213115, 735.0699706893712}], 
              Offset[{0, -10}, {135.0081967213115, 735.0699706893712}], 
              Offset[{0, -10}, {135.0081967213115, 735.0699706893712}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.3276412167906904`, -2.690235825997144}, {
               139.05007426832188`, 768.206815453714}], 
              Offset[{0, 0}, {135.0081967213115, 735.0699706893712}], 
              Offset[{0, -5}, {135.0081967213115, 735.0699706893712}], 
              Offset[{0, -10}, {135.0081967213115, 735.0699706893712}], 
              Offset[{0, -10}, {135.0081967213115, 735.0699706893712}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{11.080289376219508`, -9.999999999999996}, {
               135.0081967213115, 735.0699706893712}], 
              
              Offset[{11.080289376219511`, -21.999999999999996`}, {
               135.0081967213115, 735.0699706893712}], 
              
              Offset[{-10.919710623780489`, -22.000000000000004`}, {
               135.0081967213115, 735.0699706893712}], 
              
              Offset[{-10.919710623780492`, -10.000000000000004`}, {
               135.0081967213115, 735.0699706893712}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["120", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{0.08028937621950938, -16.}, {135.0081967213115, 
             735.0699706893712}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.12427432612870051`, -2.997424876767599}, {
               124.72094316431719`, 856.2576155867237}], 
              Offset[{0, 0}, {124.99180327868854`, 829.8255974255161}], 
              Offset[{0, -5}, {124.99180327868854`, 829.8255974255161}], 
              Offset[{0, -10}, {124.99180327868854`, 829.8255974255161}], 
              Offset[{0, -10}, {124.99180327868854`, 829.8255974255161}]}]}, {
           
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.12427432612870051`, -2.997424876767599}, {
               124.72094316431719`, 856.2576155867237}], 
              Offset[{0, 0}, {124.99180327868854`, 829.8255974255161}], 
              Offset[{0, -5}, {124.99180327868854`, 829.8255974255161}], 
              Offset[{0, -10}, {124.99180327868854`, 829.8255974255161}], 
              Offset[{0, -10}, {124.99180327868854`, 829.8255974255161}]}]}, {
           
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{10.999999999999998`, -9.999999999999996}, {
               124.99180327868854`, 829.8255974255161}], 
              
              Offset[{11.000000000000002`, -21.999999999999996`}, {
               124.99180327868854`, 829.8255974255161}], 
              
              Offset[{-10.999999999999998`, -22.000000000000004`}, {
               124.99180327868854`, 829.8255974255161}], 
              
              Offset[{-11.000000000000002`, -10.000000000000004`}, {
               124.99180327868854`, 829.8255974255161}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["365", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{0., -16.}, {124.99180327868854`, 829.8255974255161}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hospitalized Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 857.132109849756}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"40", "60", "80", "100", "120", "365"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\ndisruption start\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\ndisruption start\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.899561963415372*^9, 3.899562278755785*^9},
 CellLabel->"Out[124]=",
 CellID->1806763888,ExpressionUUID->"7f782996-6a6b-4cc6-9121-3cb849175bab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 3.79556297488484*^9}},
 CellID->1254165818,ExpressionUUID->"ee6fa363-9710-4fc1-8a76-50ea74c7a893"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, 
   3.795563281577237*^9},
 CellLabel->"In[125]:=",
 CellID->1212907821,ExpressionUUID->"f437bb9c-eb01-470e-8e7a-d2cf88ded6b6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["40",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["60",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["80",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["100",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["120",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["365",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "104896.76943930662`", "107681.1647032848`", "107686.0163167235`", 
     "107691.2151111681`", "107730.5904819664`", "110738.84311578225`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 8 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8995619636477013`*^9, 3.899562278793955*^9},
 CellLabel->"Out[126]=",
 CellID->1149426083,ExpressionUUID->"3d84defe-dcec-4fe9-b863-7e97c5747248"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "&"}], ",", 
      RowBox[{"Keys", "[", "aAUCs", "]"}]}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
   3.795563107192247*^9, 3.7955631741147833`*^9}, {3.795563264992828*^9, 
   3.795563325092783*^9}, 3.795619905008315*^9},
 CellLabel->"In[127]:=",
 CellID->1426970223,ExpressionUUID->"dfcb37e3-35ff-497e-b63f-c670bc042505"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.43075018208302984`, 0.}, {6.451201747997087, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6579999999999999], Thickness[Small]}], 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 104896.76943930662},
          
          RoundingRadius->0],
         StatusArea[#, 104896.76943930662`]& ,
         TagBoxNote->"104896.76943930662"],
        StyleBox["104896.76943930662`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[104896.76943930662`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9564848258543285, 0.8595449766533918, 0.5888856995892484], 
      EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 107681.1647032848},
          
          RoundingRadius->0],
         StatusArea[#, 107681.1647032848]& ,
         TagBoxNote->"107681.1647032848"],
        StyleBox["107681.1647032848`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107681.1647032848, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9565537316819751, 0.8601961243923091, 0.5889488046478966], 
      EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 107686.0163167235},
          
          RoundingRadius->0],
         StatusArea[#, 107686.0163167235]& ,
         TagBoxNote->"107686.0163167235"],
        StyleBox["107686.0163167235`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107686.0163167235, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9566275684042315, 0.860893868202787, 0.5890164254986652], 
      EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 107691.2151111681},
          
          RoundingRadius->0],
         StatusArea[#, 107691.2151111681]& ,
         TagBoxNote->"107691.2151111681"],
        StyleBox["107691.2151111681`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107691.2151111681, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9571868035015914, 0.8661785397843608, 0.5895285819420646], 
      EdgeForm[{Opacity[0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 107730.5904819664},
          
          RoundingRadius->0],
         StatusArea[#, 107730.5904819664]& ,
         TagBoxNote->"107730.5904819664"],
        StyleBox["107730.5904819664`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[107730.5904819664, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[
      0.6579999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 110738.84311578225},
          
          RoundingRadius->0],
         StatusArea[#, 110738.84311578225`]& ,
         TagBoxNote->"110738.84311578225"],
        StyleBox["110738.84311578225`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[110738.84311578225`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.43075018208302984`, 0.}, {6.5716107793153675`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{6.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {6.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           RotationBox["\<\"40\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {1., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"60\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {2., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"80\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {3., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"100\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {4., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"120\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {5., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"365\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {6., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.43075018208302984`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
    TemplateBox[{"\"Hospitalized Population\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.89956196369736*^9, 3.89956227883836*^9},
 CellLabel->"Out[127]=",
 CellID->1684894204,ExpressionUUID->"145dc145-480a-4cba-8910-359b60d79407"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined variability of delivery start and disruption", "Subsection",
 CellChangeTimes->{{3.795601159283374*^9, 3.795601194518931*^9}, {
  3.795602127854918*^9, 3.795602132511779*^9}},
 CellID->2138651912,ExpressionUUID->"29849c5a-3eb1-4484-880d-fb487186c654"],

Cell[CellGroupData[{

Cell["\<\
Here we calculate the solutions for a set of combinations of delivery periods \
and delivery disruption starts:\
\>", "Text",
 CellChangeTimes->{{3.795565272305983*^9, 3.795565309003253*^9}, {
  3.7956032633252287`*^9, 3.795603305895309*^9}, {3.795674646539857*^9, 
  3.7956746466736727`*^9}},
 CellID->1888885145,ExpressionUUID->"41bdb05a-4b32-43fe-8aa7-ec8eda9c9bbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aVarSolutions", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "par", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"model2", "=", "modelSEI2HREcon"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"model2", "=", 
           RowBox[{"SetRateRules", "[", 
            RowBox[{"model2", ",", 
             RowBox[{"<|", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Kappa]", "[", "MS", "]"}], "\[Rule]", "100000"}], 
               ",", 
               RowBox[{
                RowBox[{"\[Kappa]", "[", "HMS", "]"}], "\[Rule]", "10000"}], 
               ",", 
               RowBox[{
                RowBox[{"mspr", "[", "HB", "]"}], "\[Rule]", "1000"}], ",", 
               RowBox[{"dbp", "\[Rule]", 
                RowBox[{
                "par", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"dds", "\[Rule]", 
                RowBox[{
                "par", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"ddl", "\[Rule]", "7"}], ",", 
               RowBox[{"dsf", "\[Rule]", "4"}], ",", 
               RowBox[{
                RowBox[{"nhbr", "[", "TP", "]"}], "\[Rule]", 
                RowBox[{"3", "/", "1000"}]}]}], "|>"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"par", "->", 
           RowBox[{"Association", "[", 
            RowBox[{
             RowBox[{"ModelNDSolve", "[", 
              RowBox[{"model2", ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "365"}], "}"}]}], "]"}], 
             "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"List", ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "1", ",", "1.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"60", ",", "100", ",", "365"}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7955935868246117`*^9, 3.7955935950171413`*^9}, {
  3.795593636561391*^9, 3.795593641360437*^9}, {3.795593734283461*^9, 
  3.795593737083794*^9}, {3.795601221127277*^9, 3.7956013359121*^9}, {
  3.795601437289263*^9, 3.795601440738947*^9}, {3.795601480760767*^9, 
  3.795601482852895*^9}, {3.795601611034786*^9, 3.7956016113712597`*^9}, {
  3.795601658567089*^9, 3.7956016589260883`*^9}, {3.795601934083888*^9, 
  3.795601945265081*^9}, {3.7956021787427263`*^9, 3.795602265189323*^9}, {
  3.795617558605207*^9, 3.7956175646333237`*^9}, {3.795617855487258*^9, 
  3.795617882960855*^9}, {3.795620312067724*^9, 3.795620344478365*^9}},
 CellLabel->"In[128]:=",
 CellID->241878414,ExpressionUUID->"426b1f14-f9c6-493c-ae54-fc964227a5e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.293373`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.89956196399463*^9, 3.8995622791527643`*^9},
 CellLabel->"Out[128]=",
 CellID->406286929,ExpressionUUID->"1af87330-1e18-4b4a-acaf-be6565e15ba3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
As expected more frequent, less disrupted delivery brings fuller utilization \
of the non-occupied hospital beds:\
\>", "Text",
 CellChangeTimes->{{3.795565395213928*^9, 3.795565443858611*^9}, {
  3.795603342165628*^9, 3.795603396165184*^9}},
 CellID->63960327,ExpressionUUID->"65f5e4e0-32d7-4230-be88-ed4d961e9ce8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "3233", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "HP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", 
          RowBox[{"ToString", "[", "#1", "]"}]}], "]"}], ",", 
        RowBox[{"ToString", "[", "#1", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"60", ",", "160"}], "}"}], "]"}], ",", "Left"}], "}"}]}], 
       "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"ToString", "/@", 
       RowBox[{"Keys", "[", "aVals", "]"}]}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\ndelivery period & disruption start\>\""}]}], 
     "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795600858858877*^9, 
   3.795600869434511*^9}, {3.795600910026453*^9, 3.795600918113907*^9}, {
   3.795601393822171*^9, 3.7956014136393347`*^9}, {3.7956016866247587`*^9, 
   3.795601839479281*^9}, {3.7956022724436197`*^9, 3.795602304078045*^9}, {
   3.795619768950802*^9, 3.795619785462158*^9}},
 CellLabel->"In[129]:=",
 CellID->1239392389,ExpressionUUID->"6c698161-eb7c-458c-9b49-1a164b7ea0fb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4156887198178162788", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4156887198178162788", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{1581378827348883448, 15209031222608432741, 
      6717310361476524843, 17711504068493573581, 15683527114453879239, 
      15883510568414942520, 2412601743747355741, 15267564328021073531, 
      15878547562755991403, 7073542470459461292, 9569621539875170859, 
      6043340866981455538, 977975656249425326, 9541859614355846543, 
      6871510360355976365, 279, 5187876157002046550, 12430700773847318350, 
      8583862987284937695, 18026172637587944624}], 0, 20, 
     20}, {CompressedData["
1:eJxFlcmKH1UUh4O4cOvwAj5A4Ez3DEuXDS4k4gMoJiGbCElAfHu/W3VLu5t/
d9etOsNvqh//+OvNu69evXr1+Rs+3vz+90+fPv3+z6/f8s9vHz9/eP/x7Z8v
H7+8ff/2U8a7X/Z9X/Px84fPX15+4I/XI5KWYVqxQsxH4j6wNi/hKLpz0sfy
PkiTWcujc8VwyPMv33NgEeIq497eoSOV1/VwyVVlop40qWy/rr+uDtdQd7Gu
1SN9XS8znbTVniGhYVJ3neJrjemi/5Qsu+s080iOixQjpajqdX1RXpwdpMVL
h4nvBZh8rJXPkNSi0jlQWmYusShumB6b+2AtlrNKemSkxJoDkgYT7SW02Tx4
aF29nW3FplXNhkKhB6OJbFYC6gnvqWemlm5X7yVrgVOz5wFpasCUqdrd+HVY
WMYTu4elgVjN8vvAV0SpTlvMGHiUnBZpAawrvSjf8KT3QfkqK8iHViAAlbkB
h64KBzh4rmQHffluL1HFPTLaBbBALDdvQoUSqFdbBUjnencsTTqjJa02Hrsx
Whkw4xvxycWPHuyY2gcMAtFUzhlnsa+FQ+NUIVcEevelH4KAgXSLLaM89Vex
IxSN16asz74GJmiUurvTWhK38BTkfbODKnqmHiH54jYkCUwrS5j/ERIgO8hY
bZkx3NybWQE6IFPZk+9ldeRCu+Q+hbuFhzTu1RA7cCKKRkCZCOBezQdJiKYK
WDlQPNIOpKgIiHK1SvtAx10hi+qJmVmjH+7VnMvQSS02R8p3g0DsANcs7tQs
5HTkhWZL8WCj6Q3qPELdBtgm5CE0F/ZYAdy9wJlFkrxQ+683LoBdnIYhUb/r
DfcQEbTZZcBueMYueTlhoG1LaiGcwm7X5aYZSSFb1Dha/WC6kDUtN9qAYv9b
KvWqXkxEncDMeRWawSIDp50I3J/4woHkF2INFCxQbcdQG2ssNpiYNsyp5yCb
dioMSN4h73g2np0Fsv0GevCEpG6lDrImpmAHUVAo4xGSYBkyEPfnTrm6+TTk
hjN3VFhytx+BbaGwQ253MITC1HUdbpAk2mMmiAnNdSRvO4R2mgIsOWJ6vEB+
LdPk2ERWbBBuLzA5DaXJmUJQZOYFHu8KvI1BKCLkTx2PE+EDxknqYAb63B6E
SuYgTckUchaUHlFsUbsCsm9Vip68uyaBW0KTzNtJcxfSiWtEqDGyZEN/OwSR
bJxZilphduZENzuyGWiH9n76Bo4Ux2qC2BOjEBH6RB1vqK3fud86epjZL7T9
RoM1YrWhQY54Nx8Y38RzL98HCJzG3zDMRs1XPW/N2S8inaF5A58+mcA6vXoX
Gn4h7bZ/AfyAZ8Y=
     "], 4, 0}}, RawArray["UnsignedInteger64",{4156887198178162788, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.899561964013515*^9, 3.899562279161685*^9},
 CellLabel->"Out[129]=",
 CellID->1613901890,ExpressionUUID->"eb70f80f-aa25-4416-aa35-a5251a300425"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {1}}]& ], 
          "\"{0.5, 60}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {2}}]& ], 
          "\"{0.5, 100}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
J9OV5OdglE34MGcDWp8wOWC8T93EHLuC/BxM8XHpzDNcTn4ONu1ePz3UfBn5
ORh6Z0cgXGm9U8KBrkrK6h72EvJzMHCxydfgDYvJz0F/tcc+uocl5I/Fu5NT
5im30vqJGQsZ27fj9gRixKI0yW8vN1ZE/lgE1xWYLq8Wkj8WT10labd7aD1W
Eos5WRjm5UMsi8WFE13r/6jikz8WK318GKeGEDO4GDpw6rUwIY/8XOR9do0r
O0rrPXDB1C1ye7g9ifxcKNtxbuhkJJKfizFd6/R7liWQn4uFNw1PWC6JJz8X
R3bE169YSevJZi6eDPdetTSLS/44XLG4c+lJeSz542A+t/uY+BSH/HGYfXLT
7qevaH3KioMBc83QDl3FejUOqrlfy7y92OSPQ8M8S7OL2dHkj0PGP+3p+tdo
vdscB797Q5dq6inWv/FI2JdyLjY5kvzxyGFOZL74O4L88djK6PMh1JCYFQ9O
Wb/cvAzFejoeo01TnuxuDid/PCwmOW7+92gY+ePR4aF5S1AWSv54WB79c83X
/BDyJ0DneN0q02xarzMToDzr1v7K3GDyJyAjf9PTMTuCyJ+AP1avOGh1IJD8
CdC8pyb+8wqt/0sScKaiUdfqgz/5E9Avymxy5jji5m95zZmyoEA/8ifCdhae
cTbTfoKZCOaSikpBkw/5EzFK2+W+lT4xKxEJFmNK1vC9yZ+I//pXG2mcpf1J
SSKE6dLaKkNiWSJ2tnSkjc3wJH8ivPz9AtgPFpI/CZ9HKVnH1nqQPwna6puN
nu5YQP4k1G57r5KSTfshVhK6VR4yrmfMJ38Snrc6SXPXu5E/Cdl7bPqxCuaR
PwmXakOHtf1G+6vmJDjdTOj74owL+ZPx8lPloP5tzuRPRrbWb/3/0yFGMu4L
By5Z4zGX/Mkw8DIN9ltP+zdpMl47nR5tdtGR/Mm4Vduz9poWsSwZ+3ct/lWJ
40D+ZORqdf22sl6xH+TBhlH1WV2XWJ2HxHvH2qQrQNfDAz49PDvtHzs5m/GQ
p3J+lls57S/Bw+WdBl7PMufI2ZMHl8bl5/YstaHr/cb8k2enCa3lzONhguPz
A5MkVnT9PKi/GT9x9mrav+bwMCu+4oJqoQX14eHq1ifunjWz5VzNg7HMYFz9
7VnU71tuZZWr0p/4Cg97vpxa9a817Y+beXCy70gatGSGnDt4sMiv8MKR6dSf
D5WXr1bbqRCr86FTs7DynB/tt5l8HOturqz4fRr156Pm0prMAlVi8OH6oDaC
nWBG/fnYwQnMO1w5lfrzoXd+Rk52Gu3neXyUZTQtex5vQv35OHCoo5IdMoX6
87F878OWPf6TqT8fo8PGBQUG0/lANR8aA6R+YzhG1J+PR5NdFpavmET9+bB4
e7Rm+7aJ1J+P19p2Dw7L6Lyhg49BUeqPq16Pp/4CxNrWZU03JFYXYN+5VXP6
RhhSfwHmfC6+ca98HPUXwGTWjG0r2g2ovwC2KpcNK0DsKYB5xx/zdbfoU38B
tPT4aqXvmdRfgO351al9g4ilApwOfZSsvZbOS3IEKJh9Iq5/hB71F8D7QkS9
yHUM9RfghM6n4z2Wo6m/AELzFA/XmaOovwBqyQeyP1rSeUzzt/dQTJ/2gy46
1F8AzdV/dkwNG0n9hZgk+qo9IkWb+gtxdv+bc9rldL7DFCJE675dW+MI6i/E
g4oevwWqxBBi/zVORqfzcOovhLSh/PzWDZrUX4hbvqszlZvo/IgnxC5Wg+D1
JGKpEIFZ1sv0U4dRfyF2vpldF/FQnfoLsb1mUcxiR+Jv793MQaKQoGA6n5IJ
0d7qzymyGEr9hbjuPLTVU38I9RdioYYsTWf4YOovRGuYnf0W9UHUX4TOW3rp
Qi06/1IXIXXIxI++41WpvwheqVHeL2wGUH8RfJ+d9m4O6U/9RQh9xy1sXUvn
aZ4ihK1z2nCyRoX6i+D+4pHzmNa+1F+E2l+FS2qMiaXfvv/z/AXOvD7UXwRb
tm1o3lFl6v/t+y4k5wSrEVeLkJeuPjAqVon6i2BQdGGE4AyD+otgJAgc4TmF
uFkEH7vb17NNvsrPAztEUNtx8W/XIYrzQTHuZk0OjPvYLWd1MUw/tC7Pf9Ul
Z6YYViadhZwXX+RsJoa1gXlMVsdnOUOMovD9t/YxiD3F2CPKZyzVofNIlhg1
3q4tRVYf5cwTY/Qwrvhc1Ac5S8UwafUNr9v8Xs45Yrgq26saXqTzzRIxVA86
s08ozjurxRAef97i7fNWzjIx6s0uR/9S0innK2JUd44Y7P7ujZybxUgetMnG
2oO4Q4z2Q31TjfYpzlMlWH81V/hQk1hdgpB/rrEX9rym/hI83h+5rvhhG/WX
4MzYs1rO51upvwReEsfYF7JX1F+C3MKLHpNlL6m/BNMHRT378yyd5/IkeD+u
f4bxnefUX4KDKsML7d49o/4SaI95mlqqRVwigdn9zMx+9i3UX4Im47//0hc+
pf4S3K/82vD770+ovwRFVbUvItvoPLlZgkfMgx+UZj62+x9tCcDL
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {3}}]& ], 
          "\"{0.5, 365}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHlYzPvbx0dKlpBQtpiSFpSKkFJvLfb2lPZpaqZ9mh1xnBFFIlmjxKhT
hJMW+3amYy8lu07OEVlaELIW9eu5ur9/PPNP16t77l6fd9/lsxhwE715aiwW
S9CHxfq/n72fD46s///B2AtuDikF2+j3/RFarOOqUfInsTZeaw2vGlDyF/EI
nOvSKPret4p4FEa56I6zkD4gHgfu1e9vlt1/SsyGnWHOmEZOI7EhBBonBnTP
biY2QpLujfZ9A5hxGeOom1a3QuszsSmWXNWav+Lyd+LJuN2y3Lx6bhfxVLQ+
s05b6q+GXrZAoE2syR39fsSWmObxVliePpDYCm7/hdyvvDyU2Brn9/nZj3+n
Qzwd9v1a686t1yWegbYp4Vf3XxhDbIMhI27NVpROIJ6JVbujTmdfMSSehTO1
wzJdrY2JZ8Nd4lZkbj+Z2BbfbPTbG39aEM/BuMvdyXGLrYntECHYwtPdbUNs
D683cccapLbEcxGo8Fhjqu5A7IA1ow7rfimZR+yIdJNpua51LsTAHv1Sp4jM
hb2sAMryjfzD2pZSfR52+137VDPAi+rz8DLRNv36UF+qO+GSuL7fxVx/qjth
5rNCffuqIKo7Q+fpva7nARyqO2PUs51GxXYRVHfBb+n2Cfm5fKq74PEujw1h
u2Op7grJ2djqV3aJVHfFmQe/Pmr6i6k+Hyv6sfauS5VRfT5uOW+47uO4iuoL
sD0wT6SV9RvVF6A0PKpczWcd1Rcic/a1pKvOG6i+EBP66OV8OL6R6osg8c70
n3gwneqLsGrYwHLO5W1UX4wvpZGnNjhtp/piqGnwj3a47aD6ElSHDLJrnr6T
6kuwJPxUp6bmLqovRXJkKS+2hlixFF8zl1TWbdlNdTfc9ht4Ms15D9XdoJ9V
VqzbTsxyxyw81XmZk0V1d3gWDt7l4LCX6h5gLz98bHsCscID/WKrzr+YxNQ9
cbbGt/XOKeqHJ8L0ntgYzWH+nid+FppI/S+RT+WJmFv/fjJixsPyQsvFKZdq
btN44YVV0mcRqTeIFV7Y8U/lgs2zmH4vXF69/3JoDdPvjZFPi8+6JzJ+b5xb
0L2ofSgzXm90/b3v1cHjxCpvHForNWa77KN+Hxx9deWa8SNi+KDS66PBeW42
9fvAoi5vUFczscoHrv/VN06Iz6F+X7jqNS3zaCaGL/ihnacvhO+n/p77vN/t
0TsfEqt8cezEAnU111zqXwZ+l2XI9BJiLIPLgclCT70D1L8MD9RH/VAkEauW
QfTwjlVrHTHLDznefRvKbQ5Svx90KhHRtZVY4QfTH9l/v31BrPKDWvfDpx5j
lNTvj8DGNG7OPGL0PIeqML3oKGKFP7a61G65mk6s8od3QMj1y8VM/3L8av/m
EFnL9C+H+IzZ+4oPTP9yfOiT6PZy6CHqX46Rs4qDH5sTswKw2Hp/YeFiYgTg
4/ki1xA+sSIAZhvnN2msY/oDYNjEsuyzh+kPRP8NtwsslUx/IB7UKrpWMKwI
xI/pN0LLspj+QFi/e7i5OJXpD4LrkC0TpgmY/iCMz6++1+LO9AchKm37oy1m
TH8Qlg4zmHaqi8kfjCzL+1Y/apj8wfjL69nrxmwmfzBsnHg7v3KZ/18w8n6W
GxSZMP0haM6z8n94j7l+IVjTYnLX2Yu5fiEov3LCWPiauf493z+6oTY7j7n+
oci2NTQwWUmMUIxPY537K5i5f0LhHp6ZfHAh0x+KBz5DffvOZPrDoB6cHHWe
zfSHoWiy9GyNBtMfhqBaH6VjI92fqjA0G99srjzD3L8cfJXFj6lIJmZz0Kl5
5vQLZ+Z+5qBu8ZZ0l066/zkcVOedPm9bxDwfHGS6t85xcidWclBfUjvkVws9
TyoOPv4dwNFXEDdw8LjJqi93CPP8hWOk8ZN/M/bQ88kOh60v/7+o0cQIx/UA
X/M/s+j55oTDO/gOZ5QOsSIc3x1nJAWm0ftBGQ6/4VlpY7rofaIKx661y+98
FhI3hGOAQYpL0gvm/cNFy2uILX2I2Vxwi4zWb7/CvM+4GFTemqI1g5jDRY6+
SbVGAfO+5mKm38nYx7rESi5S9+4/ezeN3vcqLgQX7r2166L5oIELTmlbma+U
mR8i4O6lf837Lc0f7AiUuSSn8vjEiMBsN4+sUy8yyR+B0gGhPF44sSICAf0e
Rk28RvORMgJPStoW/nE7g/wR2DJygJekbiv5I2Ca9bDzz9Yt5I/EOvUPxrF9
idmRUB6Z9vI0m+Y7RCKKazAl13kz+SNxsXzZRnZ8Gvkj8cv4v3LH7E3kj4TX
wCFmX6pp/lRFovJhdd4sTeKGSMzlrdjZ4ZpKfh7ss6fstticQn4eqksO3ai4
T/MxeNDVMDNXGhJzeDhcOPV7uXw9+XkwfV708NWdZPLzcGS/xFzfgljFg8aF
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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {4}}]& ], 
          "\"{1, 60}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1, 60}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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

             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {5}}]& ], 
          "\"{1, 100}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1, 100}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHlcjen/xk9ZUhJRTSSOkG1KIyW0XCJLad+jnDp16rSczpokHFSWmhFF
RoMjY0kz2tBYhpMpjSUitGgquzZKCFm+/V7n8/zx659e766u1/Vc5zzP/dz3
Z1JYvFeEOovFEqixWP/3W/XT7cD6/z8wuuhqn3psF/19GEJOj3YaUvQn8Si8
0B5zU7PoCrEezn8bkv9x0E1iQxguMRhvLr1PPB5hFR9f+tY2EbOx0CR33FPO
U2ITCIYUan63aSOegiSDqt5fNZnrMsUpV+3vcu13xNPhUqG9dO3lj8Qzcas9
wKza7hvxj+hombNjpb86VGyOIKvoaXeMhxJbYLZ7p7A0XYv4J7g2B9feuDyS
eA4u/OpnO6FrNLElbId2NJzfakA8F29mhVb8dnEcsRV09K7byIsnEltj3d7I
cwf+MSGeh7Ia3UynOabENnCTuOab2c4kno8+K+Pep1/MiRdg/OXvW2Kc5xAv
BFeQEWGw14rYFp4vYwpapfOJ7RAkd0+ePtie2B7JhicM3hctInZA+rTZB50a
lhAD+4yLHbmZy1UsB0qOTvFf82Yl6Yuw16/y7W1NT9IX4Vn8/PRrI31Id8Tf
4kdDLx30J90R1i3HjW1vriJ9MUY33fv2OJBD+mIYtmRNOb2QS/oSbEi3jTt6
kEf6EtRlu6es2RtNuhMkf0VXP18YT7oTyu5/7dHwF5O+FGuHsvZvTpORvhTX
F6dc83ZYR/oy7A7KE2nnbCB9GYpDI0vVvTeTvhyZNpVJFYtTSF+OiWo/5Hb/
sY30FZB4ZfpPPpxO+gqs09Uq5VzeRboz3heHn01x3E26M9SH8E59dt1Duguq
g4cvbLPMIt0FLqFn+zU0sklfiS3hxRHRt4nlK/Eh0+VGQ8Ze0l1xy0/rzI7F
+0h3hXFOyWmDXmKWG+ahafSz3BzS3eBxfES2vf1+0t2xOzLDkN9ILHcHy7Ur
8IjwV9I98C3Y/cEktQMqhgc0l64Wm2QQyz0Q2pZTV6+bq2KlBxqkz7MT9xCz
PDGPL3Sw1PmN/J64b/rXNptUYrknzF4Odz3XR6z0hGGKorA+4iD5vWCsVTbp
xh1ieCFoiHpiqdUh8ntBRyPq08UcYqUXlvz8o0DzAzHLG3JbubnS4zD5vSHW
22Ix6CSx3Bu1z8/ov+snVnqDb/4lN9BUQX4ftMSqPZrtSgwfuN0ovJIuJpb7
YMqQr4Xr9xErfdB3MDt1xHnG74u83+dnuTUyfl9UtNXnu3xm/L7gvssw1h17
hPy+CP0YdOOUNTHLD+OHXTCc4k0MP3D6etW2C4jlflAGxes93s74/WC+snzt
/DzG74+p1dndBy4wfn8sbw59pnOP8fvjXMWY4EOvGL8/hsZkaHt9Y/wBcPL8
6j5nTB75AyC+bWS5bBqxPAAf/pgj2b+AWBmAyr7pW8xciVmBqHEO2zFiDeMP
hLO3PNZByPgDMfnT95vX5Yx/QL+9buOTDMYfhOAJh9OO/cL4g5A1YvTxhjTG
H4Sed/lKnwTGH4SdWb0VrcGMfxXWVS1+sNCe8Q+sO4FRaYaGjH8VrGLtbCZ0
Mv1XwX3ao5g25vNirUbB0yJz7VTm81uNHZKcbTouzOe3Gjpqsg7BCMa/GluT
lhTm3WK+/2BsTqzdZLCD+f6DUVouaDRfzHz/wXg8I+iJmiZz/wRDT+NcSk4l
3Y+sEPTseejtmsXcvyHI0K38nC9k7t8QFCvmV1z3Ze7fEOhMUS+psWX8a1DX
kNO0bhLjX4NHxZV9l1mMfw26Zz5ftKeeeX7WIJHL1z5xgnl+OHgbqNjnFEfM
5qDqyInOaTOIwUFPjUN38CN6PjkcWGgf1Z+XQiznYFm74xmLKcQKDo4FnRr2
6iLzvHNw55XJzJEriVs5aPPPjgp/wKwfodgtXLO/IICYHYr+9FVdJx8y61Eo
lr3XMzT2IOaEYmoUj3+1ktYveSh678svOdsQK0IxfvaqUSEnab1ThgIF2Yd+
NSBuDcXGiP6gXVtpvWSFYQ+U/1a+ofWUHYaJm6y/la0iRhjUd3m0Paii9ZgT
Bs2OzoKUucTyMEy20dObmEfrt2KAQzymfBhFrAyDWjT/uOdmWv9bw/CXdHWF
sJd5P3Bxx/K/vJ2RxGwupDXJn2//R+8TcDHp2Jc/eH7EHC4yDRWB0ruZlM9F
cMiBJ3ruxAou+NVpr64coveTkoujfvFqd3//hfK5eBJxPCqp6GfKD8cSu7cV
d8szKD8ciUErHjyvp/cdwtG1qmXWlfc7KT8cyipFI8eQWB6OIv5l3evYQfnh
mBLcX9Qj2E754bjpkXyrJo/ep60DulbT1MCmNMqPQHHyygNJRsTsCJQ3p6aZ
cFIpPwJ51Y6TbE/R+5kTgQq5WnXRp62UH4G2++dDo9yIFREI+DovfsXJLZQf
ARO3osT5GsStEajaeHWGcQzz/ufhdK4orb5WTvk8aDXu03dfRAweTtWZjvyX
t4nyefB8+nfBO++NlM+DRo5RZdsK2l8oeNiS92ly3PJkyufht+P88iXu6ymf
h6OTu99ahyRRfiSmtReka8lov8KOhO5h689pWYmUH4mhdT+GS8+vpfxI1E98
ejH3RQLlR+Jd57Paa+OIFZEIHflFoPSl/ZAyEg6zM119cqSUH4munxU27i0S
yo+Cb1u21iYzYnYU6oJnnyvZTPsrRKGh5rjLhUciyo9C1z3HL7yFxPIobJPV
j09XCCk/CjtHbDP9rEWsjMLb6D8Fuu8FlB+FQvxsMrY5jvL5WL1+ncX5mljK
52PqbvfDR27FUD4f7HslhSl3aT/I4cNeX/+hQQuf8vkIl6YW67yPonw+Lg96
qD51DLGSj4tdvKN68yMpn4+xF1YmH+DRfpMVjZ5Zzsmy3AjKj4bzujEZvLpw
yo+GqV3YVotxxJxonExXm7CfS/tXeTQeLFP0cEvDKD8adh2ssNWaxMpo/Pil
LtslIpTyoxFjzed9vUb7YVYMDnREhTiYE7NjcG/0TJdyqzWUH4PaIZa93LEh
lB+DrolTFw/XCKb8GFzeZHot5BvttxUxqPtP/GbY9yDKj0HB3GFDy4YRt8ZA
r1igM9YokPJjYTfz5KXHVgGUHwvH43C4FkD7ecRCb1xnyMatfpQfiw8b5S4V
Z30pP3bg/JeV7vOGzgOKWFy+FvW6azaxMhbHA+oTPdd6U34seMcivBwrvSg/
Ds1vTpxJHUvMjkNca2fjEwmdNxCH01uvvDG570H5cfhzYt33UQuI5XEoue5z
t9fZnfLjUBtxMivgRzfKj0P51dcd3T+4Un4curMrb3NGMOcbAXaaigPctV0o
X4CY2srzPD1nyhcgp+G8sc/UFZQvwKUvwbur7JnzkgABRlbtEs4yyhdg+cSC
Ap2dSylfAGOd/W/cLzpRvgBfj2V6v+1lzl/x4LfebSmxJGbHA4PD+jySFlN+
POZubrf/pcqR8uNxemjHDnMjYnk8jq2IrOqT0vlOEY8bj672FN8H5cejNPHG
Z9MFxK3xaNX/T+rk7ED5Qqy73HDp+Uw6L44Swqqg+ky1vh1djxAS0cPCw1q2
KrYQ4p1Cx01NcyFdnxD8oorQ3FELVOwhRGlSVc3YSXQe5Qix4/WDxFkLbFQs
FOJISpb+llXz6PqFiPjLYsa9FGsVZw5cT3fG43tn6Xw7sK7s/Xvrd7vXc1Vc
JET64zfld8yIlUIca9t2Z6nUUsU1Qox/azYhvJzOy61CDNawfdKuR9wtxMmn
oYkKwU/UX4Qz35o9Vt62oP4ipG1Oai2zJGaLUOIlNwi2m039RUhMqjHtN6bz
OUQoav6k/2qYGfUXIeHmNnnl11nUX4TiTf1rbL7Q+V4oQsC8ceptg4jlIjjM
0di9RW8G9RfBcuLzTaVm06m/CJsOR48xc59G/UXIK3wYcjSR5gdKETRHJs+s
zp9K/UW48sL+EffJFOovwiFlU9BkE+JuEXp+sFS7ETWZ+otxyKd3g+E5E+ov
xjSDI//c1SRmi9Fmf/PtBe4k6i/GgsjYpbn/sKm/GC7LRCzbGcQeYpQELSmu
mU7zD44YBZZNVY2aE6i/GPmLr1vMfT+e+ovR7L994cZ2I+ovxjPzXYeD22ie
ohDj687ikKSesdRfjEjLh4c3qRMrxRj3NSjLaLwh9RejyVbk993uB+ovhsme
/PrmSJrXdA/wqWVXhb/qU38JNlxJXiW4p0f9JThtlSLNGk3MluBhgJb7ocAx
1F+CgN8Kt7ufoHkQJGjw/GlwdL8u9ZfgvFni/RJfYs4Aq+VN7zk7ivpLUFxf
bvPaiFguQXxhLq9dh+ZNmRLs+Wet3/HuEdRfAtdLvTqnm7SpvwQu672e5d0b
Tv0lYN903TXjHs2vaiTYPkNDp71Rk/pLoB01PW1X5zDqL8GEjaOn/zuUmCXF
zljdMU4zNKi/FG7+Nxdc8Kb5GFuKFZZ/uTWnDqH+UmRZ9ByOvjKY+ksx4X30
MCMWsYcUWq3Xa/9cNoj6D/y/clj+073q1F8KiWe7dFO7GvWX4t9Kc9+lTsSZ
Uky6PiL1+zEW9ZfCeIPYWapNXCRFebdlRUs3zfeUUrStrW/cWPtVxTVSNE/y
uspVflFxqxRNv4S3zS7rV3G3FHeOPZq8vewzzQdlYFduT9cr/6TiUTJcGZ/P
ldfSPJEtw+0VO/rXve5TsYUMH6vn7S7RJYYMmamHrJttP6jYQ4bAwQfLSuPf
q5gjg882nc2d+TSvFMqwb17p9iUdvSqWy/Ayf751kiVxpgzXWt67um15q2KF
DB3eoxu31vWouEiGFybW+q1ziJUy9LBlfjOzaT5aI8MNx65+/w9vqL8M6Nxf
wbnzmvrLwPnYlqxZ2kX9E9CxcaRjt6KT+icgrraw7Nz+DuqfgJbY9OdqB9qp
fwJOJk03TPqd5rNIQPeGxqs3yl5R/wSUfGsMy6t9Sf0TMFzJ55b0vaD+A/4L
gwYVTiaWJ+Db8PML3P2fU/8E/J6w5/eVe55R/wTcPRUUxr1P8+GigX3u+rCh
XsbEygR8Dpu4oSH2CfVPQOOZfX2Xrj6m/gmY8XHHw/IJjx3+B8zGwsI=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {6}}]& ], 
          "\"{1, 365}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1, 365}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {7}}]& ], 
          "\"{1.5, 60}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#7"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
nzHE+0/yR8Hj9FRUhaaQPwp/LTJ0eStKJn8UrrMmmvil03qCEwW9vpU7XpYu
J38UjhVGXwj8Zxn5o7BVK5a3U41YEQXpP/Nmiexl5I9CS1rvvYuraL3CisYG
v7C3Tlcl5I/G28JLK96rEyMa2eXNT1cGickfjVkn4qrrSmn9I49G/aX3a6rV
iQujkebn2vF7vJD80RhWOy/t7gMB+aPBq/wrJceGmBUDlY4d/JJAWl+xY+A1
zv/KM/tE8sfgUOGmd6FWCeSPQdHwwLhv0+PJH4Ofn++m+FnFkT8Gwlb0zLan
9ZsiBhtVviQG+ceSPwbuMXbsZHEM+WMx/O3SPp+d0eSPhZ/l09Lia7QeRCyc
HZZutO2JJH8sbBvL1tdZEMtj8WDYDc8ZEh75Y7G3YJSVXgWtLxWxGPYtYWSE
GrEyFiErm5bdDuWSn4+bIXui2BfCyc9HuVVasoUuMfioavrzbu0qWr9y+Phv
/e5XWXVh5OejcgX/4auyUPLz0TShfKH53hDy86ExWNw5NTuY/Hxsr5yvvjaD
WR/HIUv3R8bLnKXkj8P2v+6zvh5cQv5/ef+4MFlFIPnjkHK2ZOz458x6Ow48
9+ED9g4iLozD3FljzM5Z+JM/DntTU7oMY/3IH4d9p+83Hj7MrN/jwR+5L/NX
mw/541GV+/z0R2tixOOw+dwvdmne5I+Hm9HfneUvmf1APF5/GWOsZ0NcGI/B
By4qsc+T/PEoO7bK4sNQYmU8tv3H7NqL94vIn4A1oSEXLR4uJH8CzszJDU65
SvuPf9+eHh+bnoVWuJM/ATqqwby0KjfyJyAn5zfdA3dcyZ+Ak+Wb3oQqaT+j
SIDD9EaZoNeZ/Amw1nLT3WpAzEpEtsWKY7GLncifiNxin9TqVEfyJ8LUtjrM
v4r2S5xEcC6luzcOIJYnwn5mWaaRuwP5E8HL1y96s3s++RNRtHiqVlsn7b+U
ieh2uhLZ7cHsx5IQIjKfWn8K5E/Chuc2NQGjiJGEmN4wzbQhduRPwvCiK2WP
2mzJn4TN26y+//HMhvxJGCmU5wU9mEv+JPDbtcSND+eQPwlvtzZtlL1g9osC
qKleuHOrc3Y/awtww3KlxiYNYrYABtqlLXzzWf1sLkBN+8KdhsEz6foEGDv0
dF9iBu1HPQV44teXpHLbiq5XgFmC7POH1IkFAmj2dDzX8rWk6xeg8ViQ25Ai
2t9mCqB8p520sGcG9RHggLi+6bgPcakALYEhi9rOmlM/ASZ86kLdOOL7AnzS
uOwepT2d+goQMbtie+kXs37uFGDywIAko8ap1F+IyeM22MfUT6H+wn/Xl+zK
ic9oP84W4qTE/uG3psnUXwjF9PfcvG+TqL8Q5Y63bc5qE3sKYaabN77P0oT6
C/E5br/YLIz2+wIhmnrqnLqzjKi/EObcb5aj7xpSfyH0opSBbprEhUIUG7Ya
ePr9Tv2FMIhpWtBWZED9hSi5OOXS8x596i/EUyk3v92HWClEeFN4b8tZNvUX
ouLqdda2ccQsEW55VsdGaNF5hbYIPbuM2+w/T6D+Imj/NuOG76vx1F+EOX0L
auc9GUf9RRA6K0cffkLnH54iZAy8VWep1KX+Ilhoz+Tu+DyG+otw3DRUf5km
sVwEz86SOenmo6m/CM9GeRakB9H5SqEI/gYjvk9PH0n9RbAfWZA29ZYO9RdB
62DWB6gS3xfhjZepy1SvEdRfBFnkfo3SfXR+0ylCyaFl9zK+/of6i5Fysic0
azGxthg+gpb8P0u1qb8YQa0BEeNGE5uL4fdoziDxEDofghhpFfPtXFs1qb8Y
+3qH8gKfaFB/McKsNz2YX6NO/cU4M13T7lQNnTfJxXisf2qPw1NV6i/G65Ma
Xadah1F/MUo0lH77BhOXipE8o+3YDZOh1F+M1ierTz7zpvOs+2LY/3C4kbFe
hfqLEbF9Q9eBqsHUXww9YVtlLYuYJQFvy3mVxy6DqL8EZzPkqpK8gdRfgmOi
FCfBhwHUXwL7tabhGc7EkCCJH6Sz6yiL+kswVGagF6BFzJFAcu7sEtNuOo8T
SJBze2S+/T+9/SyX4IumaXn2zZ/9nCnBeO/MhqrKH/1cKIHdrIbcxKrv/Vwq
wZ7aeyXOf/+3nxX/Xp9NjUZ3A53/3ZcgY3947pTu7n5WSjD14MNxeWOJOyU4
739ododjF50PSvHtlcrcd8u/9bO2FL96xqjbldH5IluKu+kzR5R8/dLP5lKU
fhk+uduGGFIMGHBiWf2Wz/3sKcWYrw9jRzV+6meOFALbvByZDbFAiudPhEcV
BXSeKZfiw2oj38rBxJlSTAzZtVzW1EH9pXh5We9v1Rvt1F+KVt+ueY/LPlB/
KYx/fPyRfPw99ZfiUumRVYUn2qi/FPUeitSOcjpP7ZSi+NHMd9q331F/GbzW
X9ta/vot9ZfBRN9pTpYqMVuGx6bGaX7Wb6i/DKmmDy9fjHlN/WUwT2qoTi5q
of4yiGvVB3q/pvNcjgxrp0Qs7DMjFshw3fDtfYeVTdRfhqNbbHuaHjZSfxlO
eKgFHZhGXCjDlVbVYtdMJfWXwSGv2szx4yvqL8Nvb+zyPt16Sf1leJV3s8Dy
5AvqL8M+BbuzOP+53f8ASsq6vg==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {8}}]& ], 
          "\"{1.5, 100}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#8"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVmHlYzGv/xwcVKiQRaZloE1EqRdu7kpQiWrSb9nVqmq3IMqRkq0ikhbGe
IyHnPMeuBllOqBxEDzlDK6eS5SRrj9/V5/vHr39cL5/e85r3XNP9ve9bPzJ1
RcxwFouVMozF+r9/h376nFj//wf4zcsx+1g+/f8ojDRTd1OsOkWshgGFqmej
q2qINdB7bvDmwIi7xJOx5nvIzNnCR8Ta+MrJe+3/8DkxG8YnX2u2clqJp0FB
1qo0aPua2ABHKlI+7h/NvC8j5ObN+yRR/UhsglLXQqv06gFiU+w8VTHmvsMP
4lnoUxSlea0cjiGejeU+5iMadJSIzZGtpurw+3ZlYgtk+77aVlc9jnguDJLZ
qro96sSW0LZsLb2YNYnYCgZqAlHZZS1ia3g1fX+84awe8TxE3rmUUXJjGrEN
Bp+fd3Gba0RsiyTdZ+5m9qbE82GirJLe+m028QIs/c3AKslzLrEdivf9Mjix
yJrYHikeX4zlwvnEDli2RPmpsYIjsSPOVjdUfaxyJnaCrfUSPbfmhcSAS8j1
XyILFg+xBIjPXVwe/taL5s5Yprokq370cpo7Q2V7geKtcX40d4F+slPs5fKV
NHcBV/o9zO5uCM1dsVk3bM3LIA7NXaGvISw+ZRdF84XIjva4dbg8luYLwdXT
qgkvSqS5G+qT37e12aXS3A1Ptx5PHLmST/NFSPnF7YskR0TzRSiym6rm67Sa
5u7QXZxarrJvHc3dUS9usB3uu5Hmi6FRubnvhutmmi+GbnFm/9vKLTT3QG91
rFFtzHaae8AiZIPv9RM7ae6JeOGmK8NV8mnuic1Ls11vjC6g+RIMKvHmT88k
lixBw9dX4VqtzNwLPTH3n9q77aK5F+6zJtS+P0zM8salGs2Gpm/M3BtzLJ7Z
2/jupvlSyMYERLkdJ5Ysxd4z20yN+5n5Mpx1vrnju0shzZeBq7C7t2MHMcsH
4e6WU1iPiOEDKzPd/OjJe+j3fXBtic+52cHEMh9M1NrRk76fmLUcBQ/NSwKb
iLEc7qv1LLvUiii/HEf3+ns6eBDLlgPyh0XcDcSsFdh3WXVg5+/EWIEnGZ+2
/NbO5FdA3vawuHfiXsqvgIG8/JrfQmKWL+YenNfWzyOGL0Qj3K06Soklvmgp
anWwvMnkfbG5tOefnm4m7weNKdZ5hhP2Ud4P8a5hf3fZEEv80K+xXXlRCLHM
D70L2qo81xGz/KHYUtk74gCT94d68HbO+qtM3h93P7qZ3HrG5P3hWxn/rmOA
yQdg77S7//6jUUz5ABhd7h4mn0MsCUCQtc7q+x7EsgAoj8oMqo4kZq1EXuJ1
pytrmPxK/F03OqlxF5NfCf2wlbIRvzL5lWiSj6kPv8rkAyHtsm54/YDJB+JO
9KHTle1MPhBl9sOUzwww+UBknnhiNaC8n/JBiArztMvXJkYQDhQ1ta0xI5YE
wfFD57lrDsSyIHw7G/UpwZvJByNfYeKZ1aFMPhgxrwZP9icy+WAstynJ6shg
8sG4NOftnqU5TD4EO2rOK1sVMvkQhPkHtpQeZPIhMLJxrr1/lMmHwHJOX5dt
GZMPxcz2w6f1tjD5UFSHKTdXxTL5UISHys1G2jP5UJi1bTUxHcXkw1A/dty7
sfeYzy8M88ZJF+zPZT6/MDRrXH6+I5D5/MLgrRL2btMS5vMPx0LjB9/Ffkw+
HDvad03JS2Dy4XiT9F7qsZHJh+Oa04hPOsVMfhV06qROtyuZ/Cr8uedRZ/Al
Jr8K6cbbdB5XM/lViLz88ab2RSbPwbEQ+fqjzPeDzYHD/JCOxTuZ1+NAjcPu
sY4j5nAwSX/7gQfzmNfnwN5Oy/PkN/o+Szl47HAuMOUi833nINyw6+UTLrGc
g2+PRh48rcV8/yMwM1Ny7oqM/h7ZEVDwsv1Rx2H+niNw6sj49PKvtB5wIpCx
tf1K3y5mfYiA9fU/52YYEEsjcMu99K/nvzPrVQQmiy7wroBYHoH/empHnbjL
rH+RuBC3j2vqT8yORPvGr52XWmj9RCTSE+ep3o0h5kSiPn9DtKyHWY8jcd3Z
y7tfRCyNhKDDMbv6B63vskioVKvURuQSyyNxvGd8AHsCs/5HoU48ixfjSM8P
dhSc+2pX7QnKI38URnhvlk3LoOcNJwqJ1nfOBJXsIH8UxpR8sUiX0fNJGoWy
6CWWZ95sI38UtP75nDFrCrE8CjXelZLxXlvJH43jSusCV2flkj8akdf1gzNq
6PmHaCTpaL3UZhFzomHco/Y21S2H/NHIjeusFeVnkz8aEbel3Nkv6Hkqi4bV
tI75ey2I5dHgzrexPr41i/wxSD5ypMCvYxP5Y5D/adSPPe7EiIFsUaZS0Cl6
XnNi4GJiGVygSSyJQV+p18QZORLyx+CCheyL3vsN5I9BSHpleoR8PfljsEV0
g93dRPsBViwuPdn/pfDxWvLHYvwpu5czn2eSPxbHAm83Zr9ZQ/5YiMO2GghY
xJJYTNJmNdbq0H5DGou+hQd3LXHJIH8smg1KdZ9y08kfi5sxAx52UjH54yDf
99VoUTPtX9hx2IhQo7rJxIhDkaGd+f5wIfnjcG39yMvZFQLyx6Gmq7kl8hvt
h6RxeH3hMEfBj1gWB8UTL+scz6aRPw4mnpkpnROIWfEIOX2Y9yiTR/54DM4u
PnrxAe23EI+/Tl/trvojhfzxsE3a7okjXPLHY/g8Tf2pJcnkj0erlV5l//4k
8sfDsXoua9th2s/J43Hr7hPlvN8TyJ+AHXvuF169F0/+BHTrTFjwuCeO/Alw
nfgwpXASMScB9kt1+RcWMfvFBGgcbF+qtD6G/AnIbSr9C1eiyZ+A2pysHLNh
xPIEWKpuqij0YvafiWiM7p1pfyCS/InYMCKp7N2/EeRPxDe1PlOJLzEnEabz
t5b+cY7ZzyZCollmH6FHLE0Ev63iyi9aq8ifCM3adXtrfq7zQ/5EmMfeXnO2
L5T8SUg9G3DC+A3tl9lJqNSL0m3oDiZ/Eo41ndywciCI/EkoPf/HSIEqsSQJ
qpssRE0mgeRPwkXvgK+23rQflyUhIszczG91APmTsG6XYXdrpT/5k2Ew/mjQ
8U7az7OT0TDtRW3IDGIkQ93uWvGtNF/yJ+Or0Vrvkz/3YUP+ZEQoHQ9qnEgs
TYZj7Qr2Dx6dF2TJML+z5dWPBz7kT8b0g2/OHrAlZnExU2XntQCPZeTnov5b
XlfXzKXk58Jm2H9m753sTX4uvtdPmqIwjs4nEi7Gdx5xeTZ2Cfm5mLC8weW2
pif5uVihHrVHPMOD/FwcLHuSWeJK5x1WCvL7XvR3xLiTPwWTl/aXqRcsIn8K
9ixXymu65kb+FAweHh3a+4XOT5IUOE8I6de0I5am4IVbZdGETa7kT0HO152/
HmlwIX8KDqoXyHZMJ2alYuRNO0nROjqfsVOxveJdbk4LyJ+KeVm7EkxdiTmp
eKVWNrU01In8qTC9rxK61oHOe9JUaJe5bCg2cSB/Kr7/+uLubh178qfCvG7w
1nhtO/LzoN7co1kzfcEQq/FwXas62d2KzpNsHoyWLeMEe9sOsTkPo54bcipS
bOj9/Vw3Fi8s7N43b4h9eOBVG19/eofOpxwe1uvnO80YRszjYVKt0l8lsKL3
z8OJgbkHunMsh7iAh+WVD8fLH9J5V8pDpiSzwdaYuIqHBrMfJVckFtSPhwuP
ny+ylJsPcSMPVyRXD8W6Ect5OFPWdmchZ84Q9/Hg5HPLOR7M+ToN5+OnRDWZ
mlH/NOyX6Pha6M2i/mlYq719m67OTOqfhgr9h+cWGdB5HWm4tCay3N9qBvVP
Q/blrsHPXibUPw1OSkqb2rnG1D8NGcFO+ff20vlfkoZdj7Y4x942pP5p8NTV
80geNKD+aRhbuPhxiSNxVRqeGTWuq9o8nfqnwWhBgFnKg2nUPw12l0JU9xkQ
y9Pgpz+K27dOn/qnwSL32HnnFjb15+PM+QmBfi7Eanw8qjJd2RlE9xdsPlTZ
spbm+brUn48PWUuDdQ10qD8fV3/krAqYrE39+WjvevLcaNJU6s+H66XPgzY6
dD/C4yM7ZoemtdkU6s9Hd/Nl8T23ydSfj8E3rUFnYjWpPx/z3Dbe25VP9y1V
fATsbs43lU2k/nx0Oj8YZjmgQf354CWaKMbZEMv5uFhY8mbzugnUnw8z5fJQ
7zrmPkeA0lNPXbN0iNUEKK8QXvhHPJ76C9DTodPn3aRG/QVYX3/DUGBHDAE4
xWPVvb3ovshHAJOLTYGJs8ZSfwE+d/p3PZs0hvoLcHSGo4qriir1F2BX0O6U
haNVqL8ADW7Xhueq0X2UVAARa6DlAns09RfgtwRLvez5o6i/AIYaqx6WB4+k
/gLo9I5tPpdF91tyAfwDeXdy/qNI/QUwTjzbfKtbgfoLkcm6fG/uLGI1IdYs
mtOYyx9B/YUYN+eiaGvNcOovxGtB4dZP6sQQIjxPb2xx8jDqL8Q2ZZb+3Hss
6i+E7x6d13kWxDwhQo9fH/nBdnDofk4ihDD5XMe6KXRfVyBEz8U/p4QqfB9i
qRAz9/U2zv78dYirhHisYHKo5NOXIZYJ4bUsK8Z98PMQNwqhaKuvLx9HLP/5
+8n+r9Rn0P1g388+9+qPF3h+ovtBEU5XX8UYYf8Qq4lQWvjW3unYv0PMFuHQ
icd//t1C943mItj78A5W6BBDhP7QiV1h0R+G2EcE/l1l00tn3w8xRwTXBz0W
mxSJeSL0Tf77+5pV76i/CCemck8k1dD9ZsHP12uxDtYxJJaKoDNNEHyO/Zb6
ixB/7IxH27Be6i+C1odXsyN7uqn/zz4GKxwevPqH+oug+CBjbNPLN9RfhKm+
rZsmv2HuV8VQu2N41PVrF/UXY/+R9i2KE4nZYhzR6LYcZ9NJ/cXwuWeTpRHR
Qf3FSB+nqHpvdzv1F+Ob9w2lt3fbqL8YRXVvreerEvPEEBvdr4/3pfteiRj/
NXkf6XjoFfUXQxZ4rG7tvy+pvxgL2wbGvV5GXCVG+doTwZ5VcuovRor8j+cJ
k4gbxaiY5rPBUOFv6i/GO32ukUFHi9P/AFecpUI=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {9}}]& ], 
          "\"{1.5, 365}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1.5, 365}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#9"]& ]}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.6724918053991479, 2.923654352291152}, {
               118.28917892816027`, 2388.759513077596}], 
              Offset[{0, 0}, {121.99180327868852`, 2608.19628823195}], 
              Offset[{0, 5}, {121.99180327868852`, 2608.19628823195}], 
              Offset[{0, 10}, {121.99180327868852`, 2608.19628823195}], 
              Offset[{0, 10}, {121.99180327868852`, 2608.19628823195}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.6724918053991479, 2.923654352291152}, {
               118.28917892816027`, 2388.759513077596}], 
              Offset[{0, 0}, {121.99180327868852`, 2608.19628823195}], 
              Offset[{0, 5}, {121.99180327868852`, 2608.19628823195}], 
              Offset[{0, 10}, {121.99180327868852`, 2608.19628823195}], 
              Offset[{0, 10}, {121.99180327868852`, 2608.19628823195}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{24.341643961779724`, 24.000000000000004`}, {
               121.99180327868852`, 2608.19628823195}], 
              
              Offset[{24.341643961779724`, 10.000000000000004`}, {
               121.99180327868852`, 2608.19628823195}], 
              
              Offset[{-18.658356038220276`, 9.999999999999996}, {
               121.99180327868852`, 2608.19628823195}], 
              
              Offset[{-18.658356038220276`, 23.999999999999996`}, {
               121.99180327868852`, 2608.19628823195}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.841643961779724, 17.}, {121.99180327868852`, 
             2608.19628823195}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.30948616844097154`, 2.983993684903459}, {
               65.21155334065965, 2816.3687051297643`}], 
              Offset[{0, 0}, {64.00819672131146, 2974.534196723156}], 
              Offset[{0, 5}, {64.00819672131146, 2974.534196723156}], 
              Offset[{0, 10}, {64.00819672131146, 2974.534196723156}], 
              Offset[{0, 10}, {64.00819672131146, 2974.534196723156}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.30948616844097154`, 2.983993684903459}, {
               65.21155334065965, 2816.3687051297643`}], 
              Offset[{0, 0}, {64.00819672131146, 2974.534196723156}], 
              Offset[{0, 5}, {64.00819672131146, 2974.534196723156}], 
              Offset[{0, 10}, {64.00819672131146, 2974.534196723156}], 
              Offset[{0, 10}, {64.00819672131146, 2974.534196723156}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{14.021408615540931`, 24.000000000000007`}, {
               64.00819672131146, 2974.534196723156}], 
              
              Offset[{14.021408615540931`, 10.000000000000005`}, {
               64.00819672131146, 2974.534196723156}], 
              
              Offset[{-33.978591384459065`, 9.999999999999995}, {
               64.00819672131146, 2974.534196723156}], 
              
              Offset[{-33.978591384459065`, 23.999999999999993`}, {
               64.00819672131146, 2974.534196723156}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-9.978591384459069, 17.}, {64.00819672131146, 
             2974.534196723156}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{0.8036862668735636, 2.8903439906763406`}, {
               151.37077186154033`, 1380.035769976127}], 
              Offset[{0, 0}, {155.99180327868854`, 1606.5850235302053`}], 
              Offset[{0, 5}, {155.99180327868854`, 1606.5850235302053`}], 
              Offset[{0, 10}, {155.99180327868854`, 1606.5850235302053`}], 
              Offset[{0, 10}, {155.99180327868854`, 1606.5850235302053`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{0.8036862668735636, 2.8903439906763406`}, {
               151.37077186154033`, 1380.035769976127}], 
              Offset[{0, 0}, {155.99180327868854`, 1606.5850235302053`}], 
              Offset[{0, 5}, {155.99180327868854`, 1606.5850235302053`}], 
              Offset[{0, 10}, {155.99180327868854`, 1606.5850235302053`}], 
              Offset[{0, 10}, {155.99180327868854`, 1606.5850235302053`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{29.6045145023831, 24.000000000000007`}, {
               155.99180327868854`, 1606.5850235302053`}], 
              
              Offset[{29.6045145023831, 10.000000000000005`}, {
               155.99180327868854`, 1606.5850235302053`}], 
              
              Offset[{-18.3954854976169, 9.999999999999995}, {
               155.99180327868854`, 1606.5850235302053`}], 
              
              Offset[{-18.3954854976169, 23.999999999999993`}, {
               155.99180327868854`, 1606.5850235302053`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{5.604514502383101, 17.}, {155.99180327868854`, 
             1606.5850235302053`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{1.098675776731611, 2.7915786819688946`}, {
               139.76430895326502`, 1578.395561291247}], 
              Offset[{0, 0}, {143.99180327868854`, 1724.82354623351}], 
              Offset[{0, 5}, {143.99180327868854`, 1724.82354623351}], 
              Offset[{0, 10}, {143.99180327868854`, 1724.82354623351}], 
              Offset[{0, 10}, {143.99180327868854`, 1724.82354623351}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.098675776731611, 2.7915786819688946`}, {
               139.76430895326502`, 1578.395561291247}], 
              Offset[{0, 0}, {143.99180327868854`, 1724.82354623351}], 
              Offset[{0, 5}, {143.99180327868854`, 1724.82354623351}], 
              Offset[{0, 10}, {143.99180327868854`, 1724.82354623351}], 
              Offset[{0, 10}, {143.99180327868854`, 1724.82354623351}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{19.766874932310145`, 24.000000000000004`}, {
               143.99180327868854`, 1724.82354623351}], 
              
              Offset[{19.766874932310145`, 10.000000000000004`}, {
               143.99180327868854`, 1724.82354623351}], 
              
              Offset[{-14.233125067689855`, 9.999999999999996}, {
               143.99180327868854`, 1724.82354623351}], 
              
              Offset[{-14.233125067689855`, 23.999999999999996`}, {
               143.99180327868854`, 1724.82354623351}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{2.766874932310145, 17.}, {143.99180327868854`, 
             1724.82354623351}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.4711241627472185`, 2.6145350825302183`}, {
               82.57743952623689, 2133.222522667297}], 
              Offset[{0, 0}, {78.00819672131148, 2243.923157263113}], 
              Offset[{0, 5}, {78.00819672131148, 2243.923157263113}], 
              Offset[{0, 10}, {78.00819672131148, 2243.923157263113}], 
              Offset[{0, 10}, {78.00819672131148, 2243.923157263113}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.4711241627472185`, 2.6145350825302183`}, {
               82.57743952623689, 2133.222522667297}], 
              Offset[{0, 0}, {78.00819672131148, 2243.923157263113}], 
              Offset[{0, 5}, {78.00819672131148, 2243.923157263113}], 
              Offset[{0, 10}, {78.00819672131148, 2243.923157263113}], 
              Offset[{0, 10}, {78.00819672131148, 2243.923157263113}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{17.657200389992123`, 24.000000000000004`}, {
               78.00819672131148, 2243.923157263113}], 
              
              Offset[{17.657200389992123`, 10.000000000000004`}, {
               78.00819672131148, 2243.923157263113}], 
              
              Offset[{-22.342799610007877`, 9.999999999999996}, {
               78.00819672131148, 2243.923157263113}], 
              
              Offset[{-22.342799610007877`, 23.999999999999996`}, {
               78.00819672131148, 2243.923157263113}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.3427996100078774`, 17.}, {78.00819672131148, 
             2243.923157263113}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.0342124894892741`, 2.8160973929508186`}, {
               66.99116716306358, 1764.3337268289577`}], 
              Offset[{0, 0}, {63.00819672131148, 1912.1784078781407`}], 
              Offset[{0, 5}, {63.00819672131148, 1912.1784078781407`}], 
              Offset[{0, 10}, {63.00819672131148, 1912.1784078781407`}], 
              Offset[{0, 10}, {63.00819672131148, 1912.1784078781407`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.0342124894892741`, 2.8160973929508186`}, {
               66.99116716306358, 1764.3337268289577`}], 
              Offset[{0, 0}, {63.00819672131148, 1912.1784078781407`}], 
              Offset[{0, 5}, {63.00819672131148, 1912.1784078781407`}], 
              Offset[{0, 10}, {63.00819672131148, 1912.1784078781407`}], 
              Offset[{0, 10}, {63.00819672131148, 1912.1784078781407`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{16.015646003828063`, 24.000000000000004`}, {
               63.00819672131148, 1912.1784078781407`}], 
              Offset[{16.015646003828063`, 10.000000000000004`}, {
               63.00819672131148, 1912.1784078781407`}], 
              
              Offset[{-23.984353996171937`, 9.999999999999996}, {
               63.00819672131148, 1912.1784078781407`}], 
              
              Offset[{-23.984353996171937`, 23.999999999999996`}, {
               63.00819672131148, 1912.1784078781407`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-3.9843539961719365`, 17.}, {63.00819672131148, 
             1912.1784078781407`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-2.2206467116443536`, 2.0171088671817197`}, {
               79.00687831506667, 1259.2566118266175`}], 
              Offset[{0, 0}, {72.00819672131146, 1345.9182375786265`}], 
              Offset[{0, 5}, {72.00819672131146, 1345.9182375786265`}], 
              Offset[{0, 10}, {72.00819672131146, 1345.9182375786265`}], 
              Offset[{0, 10}, {72.00819672131146, 1345.9182375786265`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-2.2206467116443536`, 2.0171088671817197`}, {
               79.00687831506667, 1259.2566118266175`}], 
              Offset[{0, 0}, {72.00819672131146, 1345.9182375786265`}], 
              Offset[{0, 5}, {72.00819672131146, 1345.9182375786265`}], 
              Offset[{0, 10}, {72.00819672131146, 1345.9182375786265`}], 
              Offset[{0, 10}, {72.00819672131146, 1345.9182375786265`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{20.312126133027785`, 24.000000000000004`}, {
               72.00819672131146, 1345.9182375786265`}], 
              
              Offset[{20.312126133027785`, 10.000000000000004`}, {
               72.00819672131146, 1345.9182375786265`}], 
              
              Offset[{-22.687873866972215`, 9.999999999999996}, {
               72.00819672131146, 1345.9182375786265`}], 
              
              Offset[{-22.687873866972215`, 23.999999999999996`}, {
               72.00819672131146, 1345.9182375786265`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-1.1878738669722155`, 17.}, {72.00819672131146, 
             1345.9182375786265`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              Offset[{1.2132922588837807`, 2.7437058688082243`}, {
               154.795065877529, 869.9794965730339}], 
              Offset[{0, 0}, {159.99180327868854`, 1030.179907675536}], 
              Offset[{0, 5}, {159.99180327868854`, 1030.179907675536}], 
              Offset[{0, 10}, {159.99180327868854`, 1030.179907675536}], 
              Offset[{0, 10}, {159.99180327868854`, 1030.179907675536}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{1.2132922588837807`, 2.7437058688082243`}, {
               154.795065877529, 869.9794965730339}], 
              Offset[{0, 0}, {159.99180327868854`, 1030.179907675536}], 
              Offset[{0, 5}, {159.99180327868854`, 1030.179907675536}], 
              Offset[{0, 10}, {159.99180327868854`, 1030.179907675536}], 
              Offset[{0, 10}, {159.99180327868854`, 1030.179907675536}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{27.636292311118865`, 24.000000000000007`}, {
               159.99180327868854`, 1030.179907675536}], 
              
              Offset[{27.636292311118865`, 10.000000000000005`}, {
               159.99180327868854`, 1030.179907675536}], 
              
              Offset[{-20.363707688881135`, 9.999999999999995}, {
               159.99180327868854`, 1030.179907675536}], 
              
              Offset[{-20.363707688881135`, 23.999999999999993`}, {
               159.99180327868854`, 1030.179907675536}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{3.636292311118864, 17.}, {159.99180327868854`, 
             1030.179907675536}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-2.0113498321015006`, 2.2258642934611412`}, {
               81.57087648164625, 1491.0245249938555`}], 
              Offset[{0, 0}, {75.00819672131148, 1590.0285863141305`}], 
              Offset[{0, 5}, {75.00819672131148, 1590.0285863141305`}], 
              Offset[{0, 10}, {75.00819672131148, 1590.0285863141305`}], 
              Offset[{0, 10}, {75.00819672131148, 1590.0285863141305`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-2.0113498321015006`, 2.2258642934611412`}, {
               81.57087648164625, 1491.0245249938555`}], 
              Offset[{0, 0}, {75.00819672131148, 1590.0285863141305`}], 
              Offset[{0, 5}, {75.00819672131148, 1590.0285863141305`}], 
              Offset[{0, 10}, {75.00819672131148, 1590.0285863141305`}], 
              Offset[{0, 10}, {75.00819672131148, 1590.0285863141305`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{21.879754514925445`, 24.000000000000007`}, {
               75.00819672131148, 1590.0285863141305`}], 
              
              Offset[{21.879754514925445`, 10.000000000000005`}, {
               75.00819672131148, 1590.0285863141305`}], 
              
              Offset[{-26.120245485074555`, 9.999999999999995}, {
               75.00819672131148, 1590.0285863141305`}], 
              
              Offset[{-26.120245485074555`, 23.999999999999993`}, {
               75.00819672131148, 1590.0285863141305`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.120245485074557, 17.}, {75.00819672131148, 
             1590.0285863141305`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Hospitalized Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 2887.9529782066525`}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"{0.5, 60}\"", "\"{0.5, 100}\"", "\"{0.5, 365}\"", "\"{1, 60}\"", 
       "\"{1, 100}\"", "\"{1, 365}\"", "\"{1.5, 60}\"", "\"{1.5, 100}\"", 
       "\"{1.5, 365}\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\ndelivery period & disruption start\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\ndelivery period & disruption start\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.899561964013515*^9, 3.899562279419038*^9},
 CellLabel->"Out[132]=",
 CellID->2130603620,ExpressionUUID->"7b575ef1-198a-4474-a7ed-876b1d79715a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Here are the corresponding AUC values:", "Text",
 CellChangeTimes->{{3.7955629629925747`*^9, 3.79556297488484*^9}},
 CellID->2023989670,ExpressionUUID->"3174a930-8b1b-4fa5-af7d-7663c7139cc9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aAUCs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"TrapezoidalRule", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "365"}], "]"}], ",", "#"}], "}"}], "]"}], "]"}], 
     "&"}], "/@", "aVals"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  "aAUCs", "]"}]}], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, 
   3.795563281577237*^9},
 CellLabel->"In[133]:=",
 CellID->1053415210,ExpressionUUID->"ef70321d-b7d3-4dd0-8ec6-5f2e5f701da9"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "286384.261324439`", "286828.74035297474`", "292150.0808382712`", 
     "219363.2437297415`", "223869.4957081521`", "233785.48487082345`", 
     "171548.90489431127`", "172210.6015490617`", "181034.30652668557`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 10 -> 
       GrayLevel[0.8], 11 -> GrayLevel[0.8], 11 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8995619642934504`*^9, 3.899562279452129*^9},
 CellLabel->"Out[134]=",
 CellID->1912711262,ExpressionUUID->"665d722f-80d2-45a3-ba3f-2fc714a6749d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"aAUCs", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "&"}], ",", 
      RowBox[{"Keys", "[", "aAUCs", "]"}]}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"focusStock", "[", "t", "]"}], "/.", 
        RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}], ",", 
       RowBox[{"Spacer", "[", "5", "]"}], ",", "\"\<AUC\>\""}], "}"}], 
     "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.795562894654216*^9, 3.795562948615703*^9}, {
  3.795563107192247*^9, 3.7955631741147833`*^9}, {3.795563264992828*^9, 
  3.795563325092783*^9}, {3.79560188292964*^9, 3.7956019032454033`*^9}, {
  3.7956019748543262`*^9, 3.7956019889600487`*^9}, {3.7956023194029617`*^9, 
  3.795602323068637*^9}, {3.795619876234067*^9, 3.795619888021296*^9}},
 CellLabel->"In[135]:=",
 CellID->894248602,ExpressionUUID->"ff7c75bb-2101-431a-bee0-20cb153b08de"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.3707501820830299, 0.}, {9.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
     Thickness[Small]}], 
     {RGBColor[0.5171332034144581, 0.7579442789998624, 0.9420240959162218], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 286384.261324439},
          
          RoundingRadius->0],
         StatusArea[#, 286384.261324439]& ,
         TagBoxNote->"286384.261324439"],
        StyleBox["286384.261324439`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[286384.261324439, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5105161324682804, 0.7542308219202889, 0.9408718450252019], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 286828.74035297474},
          
          RoundingRadius->0],
         StatusArea[#, 286828.74035297474`]& ,
         TagBoxNote->"286828.74035297474"],
        StyleBox["286828.74035297474`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[286828.74035297474`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 292150.0808382712},
          
          RoundingRadius->0],
         StatusArea[#, 292150.0808382712]& ,
         TagBoxNote->"292150.0808382712"],
        StyleBox["292150.0808382712`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[292150.0808382712, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9434144068795205, 0.7925669533415424, 0.5947259131276964], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 219363.2437297415},
          
          RoundingRadius->0],
         StatusArea[#, 219363.2437297415]& ,
         TagBoxNote->"219363.2437297415"],
        StyleBox["219363.2437297415`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[219363.2437297415, {}], "Tooltip"]& ]}, 
     {RGBColor[0.950645376186347, 0.8245265799748747, 0.5898899224004684], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 223869.4957081521},
          
          RoundingRadius->0],
         StatusArea[#, 223869.4957081521]& ,
         TagBoxNote->"223869.4957081521"],
        StyleBox["223869.4957081521`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[223869.4957081521, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9597574527221417, 0.8904707148394888, 0.5918828235986419], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 233785.48487082345},
          
          RoundingRadius->0],
         StatusArea[#, 233785.48487082345`]& ,
         TagBoxNote->"233785.48487082345"],
        StyleBox["233785.48487082345`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[233785.48487082345`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 171548.90489431127},
          
          RoundingRadius->0],
         StatusArea[#, 171548.90489431127`]& ,
         TagBoxNote->"171548.90489431127"],
        StyleBox["171548.90489431127`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[171548.90489431127`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7648400188947436, 0.4777596989033861, 0.9413617953627073], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 172210.6015490617},
          
          RoundingRadius->0],
         StatusArea[#, 172210.6015490617]& ,
         TagBoxNote->"172210.6015490617"],
        StyleBox["172210.6015490617`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[172210.6015490617, {}], "Tooltip"]& ]}, 
     {RGBColor[0.803258319153137, 0.5701403552939495, 0.9515603185082234], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{8.548798252002912, 0.}, {9.451201747997086, 181034.30652668557},
          
          RoundingRadius->0],
         StatusArea[#, 181034.30652668557`]& ,
         TagBoxNote->"181034.30652668557"],
        StyleBox["181034.30652668557`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[181034.30652668557`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.3707501820830299, 0.}, {9.632810779315367, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{9.451201747997086, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {9.451201747997086, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}], LineBox[{{6.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
              0.}]}], LineBox[{{6.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
              0.}]}], LineBox[{{7.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 
              0.}]}], LineBox[{{7.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
              0.}]}], LineBox[{{8.451201747997086, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.451201747997086, 
              0.}]}], LineBox[{{8.548798252002912, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.548798252002912, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           RotationBox["\<\"{0.5, 60}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {1., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{0.5, 100}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {2., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{0.5, 365}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {3., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1, 60}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {4., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1, 100}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {5., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1, 365}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {6., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1.5, 60}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {7., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1.5, 100}\"\>",
            BoxRotation->0.5235987755982988], 
           Offset[{0, -2}, {7.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1.5, 365}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {9., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3707501820830299, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
    TemplateBox[{"\"Hospitalized Population\"", 
      TemplateBox[{5}, "Spacer1"], "\"AUC\""}, "RowDefault"], TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.899561964342882*^9, 3.899562279493078*^9},
 CellLabel->"Out[135]=",
 CellID->1255468491,ExpressionUUID->"b7f133c3-5128-42cb-a8d5-c71728236956"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "3233", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"focusStock", "=", "DIP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aVals", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "focusStock", "]"}], "[", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "365"}], "]"}], "]"}], "&"}], "/@", 
    "aVarSolutions"}]}], ";"}], "\n", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"KeyValueMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"#2", ",", 
          RowBox[{"ToString", "[", "#1", "]"}]}], "]"}], ",", 
        RowBox[{"ToString", "[", "#1", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"60", ",", "160"}], "}"}], "]"}], ",", "Left"}], "}"}]}], 
       "]"}], "&"}], ",", "aVals"}], "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"SwatchLegend", "[", 
     RowBox[{
      RowBox[{"ToString", "/@", 
       RowBox[{"Keys", "[", "aVals", "]"}]}], ",", 
      RowBox[{
      "LegendLabel", "\[Rule]", 
       "\"\<Medical supplies\\ndelivery period & disruption start\>\""}]}], 
     "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"focusStock", "[", "t", "]"}]}], "/.", 
    RowBox[{"modelSEI2HREcon", "[", "\"\<Stocks\>\"", "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79553366178061*^9, 3.795533702742288*^9}, {
   3.79553392403409*^9, 3.795533974861979*^9}, 3.795534202014629*^9, {
   3.795534478938561*^9, 3.79553448040071*^9}, {3.7955345247169847`*^9, 
   3.7955345582190113`*^9}, {3.795534625192357*^9, 3.795534628138623*^9}, {
   3.7955347455238037`*^9, 3.795534759462411*^9}, {3.7955354794189453`*^9, 
   3.7955354878423157`*^9}, {3.795535548494914*^9, 3.7955355627823*^9}, {
   3.795535887990759*^9, 3.795535890170864*^9}, {3.79554303132891*^9, 
   3.795543100708798*^9}, {3.795560591521216*^9, 3.7955608880103283`*^9}, {
   3.795561225098794*^9, 3.795561243312892*^9}, {3.795600858858877*^9, 
   3.795600869434511*^9}, {3.795600910026453*^9, 3.795600918113907*^9}, {
   3.795601393822171*^9, 3.7956014136393347`*^9}, {3.7956016866247587`*^9, 
   3.795601839479281*^9}, {3.7956022724436197`*^9, 3.795602304078045*^9}, {
   3.7956177447963963`*^9, 3.795617773875868*^9}, {3.7956198096545057`*^9, 
   3.795619848377397*^9}},
 CellLabel->"In[136]:=",
 CellID->1545692108,ExpressionUUID->"7679a7f1-6422-4828-adea-9ae75b3e63e6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RandomGeneratorState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["958284004029645121", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExtendedCA\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"State hash: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["958284004029645121", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RandomGeneratorState[{
   "ExtendedCA", {80, 4, 0}}, {{
    RawArray["UnsignedInteger64",{14207402798893712043, 10592560195941529422, 
      11976408150162479317, 8774051377267191991, 14262602857408757786, 
      13332953951969174148, 12866821361672866892, 11376658687317901288, 
      10484065355245143367, 9080073627467810268, 11558724656148741915, 
      5229487853297201262, 10145522434373313612, 14283843165186352566, 
      1619006969908428245, 10830484204721094444, 7884004121462288956, 1, 
      8279893860505128769, 2654035645268626087}], 0, 20, 20}, {CompressedData["
1:eJxFlcmKH1UUh4O4cOvwAj5A4Ez3DEuXDS4k4gMoJiGbCElAfHu/W3VLu5t/
d9etOsNvqh//+OvNu69evXr1+Rs+3vz+90+fPv3+z6/f8s9vHz9/eP/x7Z8v
H7+8ff/2U8a7X/Z9X/Px84fPX15+4I/XI5KWYVqxQsxH4j6wNi/hKLpz0sfy
PkiTWcujc8VwyPMv33NgEeIq497eoSOV1/VwyVVlop40qWy/rr+uDtdQd7Gu
1SN9XS8znbTVniGhYVJ3neJrjemi/5Qsu+s080iOixQjpajqdX1RXpwdpMVL
h4nvBZh8rJXPkNSi0jlQWmYusShumB6b+2AtlrNKemSkxJoDkgYT7SW02Tx4
aF29nW3FplXNhkKhB6OJbFYC6gnvqWemlm5X7yVrgVOz5wFpasCUqdrd+HVY
WMYTu4elgVjN8vvAV0SpTlvMGHiUnBZpAawrvSjf8KT3QfkqK8iHViAAlbkB
h64KBzh4rmQHffluL1HFPTLaBbBALDdvQoUSqFdbBUjnencsTTqjJa02Hrsx
Whkw4xvxycWPHuyY2gcMAtFUzhlnsa+FQ+NUIVcEevelH4KAgXSLLaM89Vex
IxSN16asz74GJmiUurvTWhK38BTkfbODKnqmHiH54jYkCUwrS5j/ERIgO8hY
bZkx3NybWQE6IFPZk+9ldeRCu+Q+hbuFhzTu1RA7cCKKRkCZCOBezQdJiKYK
WDlQPNIOpKgIiHK1SvtAx10hi+qJmVmjH+7VnMvQSS02R8p3g0DsANcs7tQs
5HTkhWZL8WCj6Q3qPELdBtgm5CE0F/ZYAdy9wJlFkrxQ+683LoBdnIYhUb/r
DfcQEbTZZcBueMYueTlhoG1LaiGcwm7X5aYZSSFb1Dha/WC6kDUtN9qAYv9b
KvWqXkxEncDMeRWawSIDp50I3J/4woHkF2INFCxQbcdQG2ssNpiYNsyp5yCb
dioMSN4h73g2np0Fsv0GevCEpG6lDrImpmAHUVAo4xGSYBkyEPfnTrm6+TTk
hjN3VFhytx+BbaGwQ253MITC1HUdbpAk2mMmiAnNdSRvO4R2mgIsOWJ6vEB+
LdPk2ERWbBBuLzA5DaXJmUJQZOYFHu8KvI1BKCLkTx2PE+EDxknqYAb63B6E
SuYgTckUchaUHlFsUbsCsm9Vip68uyaBW0KTzNtJcxfSiWtEqDGyZEN/OwSR
bJxZilphduZENzuyGWiH9n76Bo4Ux2qC2BOjEBH6RB1vqK3fud86epjZL7T9
RoM1YrWhQY54Nx8Y38RzL98HCJzG3zDMRs1XPW/N2S8inaF5A58+mcA6vXoX
Gn4h7bZ/AfyAZ8Y=
     "], 4, 0}}, RawArray["UnsignedInteger64",{958284004029645121, 0}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.89956196435855*^9, 3.8995622795129766`*^9},
 CellLabel->"Out[136]=",
 CellID->1632096462,ExpressionUUID->"f6106cca-f070-44b4-86dd-0aa1a61928e6"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
yzBYU7/b9rv/B8C201I=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {1}}]& ], 
          "\"{0.5, 60}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{0.5, 60}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
237/DxEn0Tk=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {2}}]& ], 
          "\"{0.5, 100}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{0.5, 100}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
/QpMsu6rf+uH/wciqMH2
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {3}}]& ], 
          "\"{0.5, 365}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{0.5, 365}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
l8J66K0VGwb8X8Si1Zo=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {4}}]& ], 
          "\"{1, 60}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1, 60}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#4"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.6142719099991583, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxV13lYzfn7x/FD30rNoELLKELWlqnILq+SFhV12vfTvtfZMWUcSxGiJGuZ
morskWnUODozGOVbpEYMIhKylmUqk3z9Lu/7XNfv/HOux7k/93me+88zISKV
Gz2Uw+GkDOFw/u/966t7Mef/v2B4mltf908Q+3wYHqg4Wzi1JzJrIYa7zs7o
GwnzaHDCdMI609OZ9WFzy6nj/tz1zIb49/Zjb4+tmczGKLLivvnDfSvzRMzl
7TwX4J7DbIJ865x1ms55zFMw1FzPZHL5buZp8H5Wa79n3X7mGVCfsmht4YuD
zGZoGBl2/iznZ2YL2Oze4cvvKWW2xObXzmrywHJmKwS9KPUu4h5ntsbw/sen
ZKsrmGfCVf1Xf3PzSuZZsK/t27/Ut4rZBmHTL7zr1Khhng1vC7/AZ7wLzHNg
b6fQcjr/O/NcpH9uaCupvsQ8D2PGT2+4vrCOeT52ZcUZHA5pYF6AMVqv948v
aGJeCP/IXwqbpS3Mi5BlIqwNbW5ltoWx59tnpZfvMC9GZ067ZHviA2ZgzINT
B9oFj75aBmhesVetPtLJ5naQG10TmIu62NwOTR8CXr18+orN7bHUiN82Mq+H
zb84u7tuV/l7Nl+Cmh8L4pa69LH5Erx86OwqzB5gcwdUnbs0ob6Og69zBzTc
Pzp65W8qX81ZCrF6daS1tTqbL8X+SY7i0iXfsLkjgnVXX9JV1WJzR9y4HPd8
TrMOmzvBsTjD+f13umzuhAm9u/69+s6AzZ3hU/P4gZd4HJs7w31ZUmbj3Qls
7oKfMibp2b42YXMX9Cy2vOu+cRqbL8OSi33vrOrM2HwZNs/uWrCk15LNXcFT
/Ll4y6hZbO6KQ6nz9+bfmMPmbpg7Y2PBCLeFbO6Gty1rBG+ug83doR7i/vOH
D0vY3B0zNC78Nrfcic2XY2rOmxfDel3ZfDn+3nZzzcTVHmy+Agf2d/IyPbzY
fAVCGoNHl0p92dwDasETOy0fBHw1PJC+NHTodFkIe94DrTXXpIfLeV+t8IC+
raa4oyyC7Xvi+dMyu8dno9i+J+5Frb1u2RLD9j3xxCc7t2Qwju17wi1l+SJ/
m0S2z4UwtlhRKElm+1wU96lseiFPZftcTLp7/kiSmoDtc2FlPWzHNksh2/fC
zcP6dtXBIrbvheVvPU+HbRGz/S/ztbfk789J2L4Xyhea+bx/KmX73pBsW3S/
XXcV2/dG/A8zW+yXrmb73mgy1VlXLvyB7XtjCP/8w7KDaWzfB6VtazL/qktn
+z6oP6O3o6V7Ddv3gcV+szIn3bVs3wf3wlasSTaUsX1fWMv+KRl3nBm+0O94
06E9fx3b98XkS5P3mPzJrPBFQL6wcbbHerbvB1PzvUtMbzPDD62i535PQzaw
fT8sHPPgX+5DZoUffvvJusQ/YiPb98fuvDFWne3M8MdDjYyOp8EZbN8fWTz1
RdxWZoU/rNX4L/XcM9l+AOJX11da/M6MANS25i/bbr2J7QfAtuxloUMxsyIA
1z68TcobvpntB6Ll9h87969kRiAKo1sHwx8wywJh3ezW2eWQxfYDUcDdd8Cy
nJkThNaAaeWzNLaw/SD0jY1f/DCWWRYE1XBtDFxkVgRhnkx6LdNoK9sPRtTR
lxHZYmYEY6h2ZbFhPbMsGDP7tLzsxm5j+8G4cS89aFgiMycE+1ReVf54jhkh
aEuLDTutks32Q3BKYpFX5casCMGWx2dHXMxj5oSiVR4frfY3M0Ix/5rgvyWG
29l+KA72JX86G8qsCMV5hVGG20/MnDAc67ktW3mfGWEobe0ZtthwB9sPg5Ws
3OmIP7MiDG+i73nV5DFzeIh8pXdX3MhszEO6jZD7amgO+z4e6l3K0qTjmHk8
GKhGC3znMct40K3jybO9mIt4sNQz/WyYzKzgIfPM9o//yWRu58Hrnlax40Fm
TjhG1lXodfzCbByOhojq6rsN1A9HaVmYgXUH9cPRq3lo8Gkf9cMxWD02+vPw
XNYPR+Dd4lU/TGRWhENz/encoNnM7V96waZWZS7MnAik+WoMBAQzG0dgasLr
qvQUZkTAx/a6nZaMmReB4hEn8vRymWURGMzOqMovpn4E8u8KL2afpn4ELDZ9
+2Do79SPwAl99dl916kfiTv5eh/596kfiZ0FBmH8l9SPxPCClXv7+6kfiVVd
f7WOVN/J+pFYnvZyadUo5qJILPv8m2b3eGZFJP62brZTmDK3R8I89/6n6XOY
OVEwy4x3tLRnNo6C2i25bqsbM6JQpPYheJwfMy8KLR3W/d+EUz8KB66/O1+c
QP0opLvvSHgkon4URpmcP9uUTv0o9AW426ZmUD8aa7Me7lNkUz8aZ+uvu1zJ
p340xpv212YUUj8aq1/fDRkspX40HD6uFc88Tv1odLw47DC1kvpf9qubB+9W
Uz8ab5dtuOiloH4M5ApuSc6f1I8B18n5p10N1I/BnvS+8vBm6scgYuqzn/tv
UT8GgSOqeKFt1I/BSt2Nh3MfUT8Ga1ZOt8h/Sv0Y8EoPFia8pH4s8k1n547q
oX4s3u8Ztif3A/VjEZBnbfmkn/qxOFlge0NnkPqxMFkQ+0h/aB7rx+Jm70Bt
vyqzIhahB47VVGkwt8fClXtXz3M4MycOHtp92le1mI3j0GveeHviaGbEYcOE
a7nBesy8OJy2SPJf9R2zLA76zWG2K42oH4eNbn2ugcbUj8PYSdGyiZOoH4cd
uz/faJpM/XiMPpRnETON+vG4XVSS1jGD+vFoNq/Y7WJO/XgMh9Rn3/fUj8ek
SpvMFivqx8NpsOtN30zqx+PkkB1czdnUj4fhQ+/YYXOpn4AVRx+1v5tH/QR4
XMlIbFxA/QRoWglP5C+ifgI+vnzl6L6Y+gk4nLW9+T2onwCvseGd2+ypn4Cb
9SYjdR2on4Bj8tQ7OUupn4gZOU8aPjlSPxGH80NjQ5ypn4hXGjpTKlyonwib
cQrZP8uon4i/Lrc9t3SjfiKudFS2hLlTPxG1c7Yd2rCc+ol4XXz9asEK6ieh
K8u89JgH9ZPwxK1mZ4Un9ZPQv1nr3TEu9ZOws0c47qAX9ZNwP+N5wiZv6idh
8q/+pnE+1E+CpujYKfhSPwlGXY8ctP2onwzx3zY2d8jGyfD9cVrdAX/qJ8P5
wCF73wDqJ0PH7bunGoHUT8aFxg0fqshFyagfs+NYSBD1k+FQccRhkNyejOFG
eh/3BlM/BYHqqioWIdRPgYHfwV1yMlLw7InRI6dQ6qfgKrfdsJEsS8F0H4nY
PYz6KbgTWaFbT1akIKjp3PfgUT8FI+wMnp8hc1Lxz7FrKRPCqZ+KbXLfzq1k
pCLtklz0lsxLRYXecVufCOqnwkdNFH+WXJSK9e4GulqR1E+F+rjY6Dhyeyrk
p3ukcjKHjz9WTokfGcWsxcfe2z4BoWRjPjr3yCOPki35qLm5s+QdGXw8qPxm
5vxoZg8+ThbHmf5I5vFhwP1UWkvm81EeOu/XQbKMj7T9FasWxDDn8GGkP+mz
hFzEx8fHG8NOkiv46E9XPfmYrOBjoE93UD+WuYmPfR/FEa7kdj7Efqav0sjd
fBzNLDh1lMwRYEXzpppbZC0BfFaMHKcSR/cL0FYo7zIjWwpwT7TVzIcMAWzf
P36fRvYQ4ETWCY9iMk+AVJNl7pfJfAE2Py7sfUqWCTBr0ehgjXi6X4CAjyWZ
08lFAtRntKx3JlcIcFxVHhRDVghwxUvHcAO5SYCqJuNrB8ntAmzQuZlWTe4W
YCDpgkULmSNEQoRO9wuylhBNz0/VqSTQ/UJkFE/8/Tvyl/9dYbfLHlqSIYTm
xqnWjmSPL88Pd60JJPOEkOgmrUsh84V4PrF4+zqyTIhtIy88yyPnCHEky3d3
GblICBe+orCKXCHELG1d1StkhRBbTOY1t5KbhJDn3NB8Qm4Xwmykz9n35G4h
oq6q/DU0ke4XYcHxNylaZC0RGtR6s4zIxiKoRTdMn0G2FMEhppc7mwwRzhXd
0LAne4gQoLqD607miXB0xAIrfzJfhBH7qo9EkGUibL7VUJtEzhHhkrf2Sim5
SISZdUNa1pIrRNCx+9i6mawQwVo0KzOX3CTC9yGNHfvI7SLMWHH5bTG5W4Q1
cwd/OaK8Xwx1DTvL08r7xWiRL4g6p7xfjKNm671rlfeL8WtnrsqfyvvFkKde
FzUo7xejc1TW4Wbl/WI8PdlXdFt5vxivPOwi7ivv/9IfLXrVobxfjOJ3Wxy6
lPeLEflIEP9aeb8Ye9w5oe+U94vRVzkwqU95vxjLuIbyAeX9YvTuUTUdkkT3
izGwYHmqKpkjwf39a7ZqkLUkkLR9u2442ViC3cNjPbXJlhJMudH1aTQZEtR9
+2STPtlDgh+9i7rHknkSVAV4zhtP5kvgZz0lciJZJoHlI6ROJudIcKb1XOg0
cpEEu5wOWJuSKyRYvPHFC3OyQgLthSVbLclNEtgMnNGZSW6XYGrW0PU2yvu/
/F5zwZ05yvulsOi5aThfeb8UM7s+uyxU3i/FtIKqCFvl/VKcdKyJhfJ+KfwN
LgXYK++X4nBk5jwH5f1SnOg6ru6ovF8Krxltl5yU90uxdW+VwEV5vxQhV5pH
uCrvl6Jyz+UCN+X9Upxfb2S4XHm/FG2NkdkrlPdLMarasMdDeb8UZnuvOHG/
+H8RwdD2
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {5}}]& ], 
          "\"{1, 100}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1, 100}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#5"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.8503398874989481, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
xmygfhRMTIUNlXnUj4a6xvRxawH1o9Hg7v1IU0T9aAzb9K0q7wD1o6GrI8oy
K6F+NN4mLX8oO0H9aPxhMzJ1Uxn1o5GT52WadY760bi/RBbMv0j9GJyccKuq
8Qr1Y2Ak+udT4A3qx+CNQUefXTXUj8FyOx1+xT3qx8DF1c+j7CH1YyCdUbEz
t5b6MXjpcXuz83Pqx2CFjl5yzUvqi/B6r2OwUyP1RXCYf2dlbjP1RVjS1N+4
opX6IiSEF5jeeU99EcaNFBVf/Uh9ESqXu50s+kJ9Eew+WHjGfKe+CMlp7v49
flI/FvvTcs5t+20968ciz+NsfK9OzIhF77GXrGVdmIWxmOrw9VmZNrMqFvn9
BB5vdZgLYlFgd2isQXdmdSyCxuh5m+oxa2Jh1et6mJEBMy8O2Qtu6/3oSf04
HO57r8ut3tSPwxL3VY0bjagfBye/B/5uxtSPw7Vs/cbXJtSPQ+kxPZv0ftSP
Q2yc6nQXU+rHoUPDT4PfB1A/Hqa7ZpfWD6R+PPiFsVbTB1E/HuPv3G5aP5j6
8fg0rSj23hDqx6Pp52ljvaHUj0fM+cfRk4dRPx7LGmvLg4dTPx5RyyqXyEZQ
PwEX3jf0VY2kfgL6Rlk8y7CgfgLST7+0SxlF/QRkzxgfn2BJ/QTc3tflgbcV
9RNQ7WVbYzua+gkI3ZS/p+sY6iegReCdf5/MS0TFq/yOBdbUT4Rh4cCBQhvq
J7b/f2oea2JL/US8NChccpWsSkTWvlSP+WOpnwh9Wdz1/nbUT0SxytyxjKxJ
hPIAnviOo34S0lrcHjWQzZLgLLiRvGA89ZOQ5Ki8+tsE6ich2UbXLJOsSsLz
kPXbOk+kfhL0jEKTVGR1EqZXmJz7SNYkoXr73TMie+on42b+oJy7ZLNktPJ1
gjGJ+sn4XmznWkQWJmPp1roF2pOp377fQd8ghlyQjPTAUNsKsjoZxo3Tf5hM
oX4yTozpmJtE5okxZ0eprpqsL8aEbnFZPRzo84jxuHf3kYFkazEMxqzrsJsM
MYwjm60byHwxSiaYVVlOpc8rRnyWU0siWSyG8HvWoQNklRhtCr9BDeQcMUpP
WYcMmUb3iFHm9kgZRD4iRqZhQEYuWS1GbnbTugvkajEyYsxPfyJrxIj4WNdt
BJhbxUgYHL/Fj8yTILDFQ7KErC+BxnF14SGymQSNGWuc7pOtJSj5ahnIc6T7
JTDwPfZlGJkvwZZjTaPdyUIJnHgmWmKyWILUlR3WriOrJIhQ8mqOknMkeH24
+UkNuUCCDTb2Z96Rj0iw8MrLxfpOdL8EOV3XD7YiV0ug3XF+mStZI8HPtnjv
CHKrBK/+edOaQuZJERo5ZPtGsr4UaoP7EQfJZu3fsxatmHWe3P69q/y0MPAB
GVLcDMbWFjJfCr26st6dnOl+KfZvHHq9D1ksxfFXGdctyCopUrfl93cg50gx
JenfM57kgvb392s9HUo+IkWM3xITMVktxceVax6nkaulcBGUdF9L1rS/nh94
OJ/cKsVFwdlLf5J5MrhaNwSdJOvL8D73iPgi2UyGq7vVOjVkaxlaDv8xupYM
GX7czNY0kvkyzMm8Zv6Ru1+GscMCf/Km0/0yDPQzkuuSVTIUR5dlGpJzZNDd
+2LSQHKBDP0KO28YQT4iw/EgxUYbslqGzOVxTpPI1TIsLf+R70TWyNCcZfHn
LHKrDNpLqxMEZJ4c/7odqwsg68vxbqnKOIxsJkfblYtaIrK1HH9u5P2dRIYc
eyxyhirIfDkWy8/5LyYL5TC4fcUrnbtfjnGNVT2Xc/fL8Srgfv5q7n45Lv3+
oi2Xu1+OUf0fmGzm7pdjqNHaHtu4++VQ9K28XcDdL8d2R/ukPdz9cgzbn/lo
H3d/e7+Hy6BD3P0KeHp/dSjh7ldAS2+A3d/c/Qrc6dG38ynufgVia2eVlHP3
K9DmynM4x92vwL6LqUXnufsVaP7yteUSd78CriaFfa9y9yswJDBv+HXufgUq
BW19bnL3K2AUceZ1DXe/AklG34rucvcrcCpt98z/cPcr0G9d8Y2H3P0KCJRv
pj3h7leg+2O/LRrufiVezD7x6Bl3vxI9RU906rj7lbgxfb15PXe/EiX7N1o0
cPcr0RK03bSJu1/Z/vsd+u9r7n4lCgyWVr3h7lci6cxfq1q5+5UYmbLc/h13
vxKjNmy/9567X4mtJVnRH7j7lfi374OXH7n7ldA8MAz4zN2vxLav58q/cPcr
EXkgxPBbu/8LcRi1xQ==
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {6}}]& ], 
          "\"{1, 365}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1, 365}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#6"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.08640786499873876, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
09X3K5D/rsxrxnf/D9uTngs=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {7}}]& ], 
          "\"{1.5, 60}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1.5, 60}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#7"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.3224758424985268, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1:eJxVz3lYzfn7x/EzKMpSg0K2SqUiolVqvELaLO1pPy2nfTk7DXGo0KREIYxE
CQlZohKOLY2hsmSyTSEMWYqEUfrO7/K+z3X9Pv+c63Huc3+e59YJS/Lg9eNw
OIk/cTj/9/nj6ZjD+f8P8is9/qjrDmDfD4LSEKdpjq1xzOqAdxXGD5Ywj8Qf
ewODn69cyTwaXz7ee/a39VrmcajU8PJyy1zHrI34cePfXlqUyayLapvEM36L
cpj1cPWiR6qqUy6zAQaaeU7SP7iN2RDOyR6229fsZDbG1cNpibvbC5inYmVP
25FTnH3M06AUnPILv7OY2RT9dWc9rfE/yDwDqUM6tQs9yphnYtWkvo2y5HJm
M6i9jZ1iYnKS2RzdCf1CHXxOM1tAGPi29LlKNbMlRifY9L3knme2QlZV5l8L
ai4yW2Nm9f6tRVVXmGfBL2Iuv8G2jtkGNhNSikuCbjDPRtzSxUsm/t7IbAur
Oaq2t6V3mO0wzGSKQ/Dte8y/IPJDP/fiqw+Y5+Dlot+rsuJamAFTmxWTWwVP
f1gGBPUkJlcees7m9tguSvxjqugVm9uj41Wp7puXb9l8LvZ1TQ1Xy+1k87lo
+MazzDvYxebzsLgvbPd85y9sPg+79PovE2T1sPl82A8zL66r4+DHfD6CXBPX
SM/2/2GOA8arDzo9Y+ZANndAbtWr0qJ5g9l8Ae44mCzRVFJn8wWQjN0WbnV7
OJs7om7T+LKPWpps7oh3R5scr38cw+ZOiDaVqHmKJ7C5E+wDOwbdfKjD5s4o
//lJ58l3emzuDJPLXPuQ7YZs7oJ/d/jZXlQ1YXMXbD0bfDZo9gw2d0XvAOcX
pWnmbO6KY38PkJv9as3mC8G3FAUvtbJj84WIkpmt6Yy3Z/NF6DZSf1cvn8/m
i2BSdODa9QNObL4YI3RLDqfNXMTmi9G82v7lWmt3Nl+Cfd71UydZeLH5ErxZ
Ys6pSPVlczfcES/S3zAq4IfhhufLZnXgRTD7vRti0x9IS0WhPyx3g8Zyo+G3
M8LZvjuqOPtW5p3gsX13jOsM+xDYHsX23aFWqrXzzYxYtu+O3jGcF45p8Wzf
A9eyZQsOtiayfQ+MW5BQULmPz/Y9EKgnG5TXLGD7Hjhp9v265c8itu8J9RrD
yz2uYrbvickTt2e5bpCwfU/ULFvosvmqlO17wjHrUM28/svZvhcyPKzKW5DM
9r1w5aRHzj8pv7J9L+jMCtT7p2oF2/fCvRhzXmLXSrbvDaHsOO9nk1Vs3xvy
uDX2CeGr2b43OldcVN3iKmP73nh+27fn3TNmjg/CAo8nF/+6hu37oHvoveSN
amvZvg+OOvX8nbqPWe4DnfLU+FizVLbvC4/NBdW6l5jhi6r8BoMti9PYvi8K
Mr5eLGxmlvvikJGj7SxuOttfippTQxqcnjNjKW6o9eldiFrH9pfi3Wd/ZL9k
li9FRtC3kNKI9WzfD4/P5z9TaWGGHwqyQqbs99nA9v1QrmY/Mu1PZrkfpl4e
sOuWXQbb90eqweOz+44wwx92xTKlXq3f2L4/PCx+CXiSziz/77/kZN9Z8o6Z
E4CmrrdDnL0y2X4Adhc4Gl48wywLwLebI25ljt7I9gOQdWnvyG1SZk4gejX7
ap/fYkYgXvePq84wzmL7gXCcHNuTI2OWB2KhjU2h6l1mThBSUnvPKOlns/0g
LLDrdNksYpYFYabns54rF5jlQfi4XGtyk8omth+Mju8FIzrdmREMpUmT7Gzz
mWXBaCo9Nvz2I2Z5MO6pH9r7TC2H7YfA7vhPW/NMmRGCxVtt02VuzLIQeO36
Mv9wErM8BE6vik+OyqZ9Lhw8P/arO8yszYVxfFvXuTp6HxftyrqDv7Uxc7m4
UbuzVMbZzN7PxayyRgu3scyFXEh335gYZ8Es56KhecHX24uZW7k4+8ohOSOK
mROKv7Zbrc1ZzawdinsLvPReb2NGKIabdu3OP8LMDcWJvYH+BZepHwqlOP77
3mbqh+JqWb5W9VvqhyLY2+hc009bWD8UE55Imj01mDlhcC++kGFlyKwdBoOv
45TTbJgRhhyOYJvtQmZuGGT66bkRQcyyMBwf5hXWl8BcGIbEklS++ipmeRhW
fdWfsSuL+mHo0Dg1puh36odj3nLnPVMOUz8cOot1za2rqB8OFysfhxu11A/H
Td8G6/Y71A/HaI9Vcfmt1A+H2rXL0/96Q/1w/Hl10I3SL9QPh/rgzGTNAbms
H4EBSb7h49WYtSPgUBWz/9IYZkSgMfytq4oeMzcC6i4HPbpMmGURsPq+tnid
FXNhBLTvGo69DGZ5BB7cP7+qzJm5NQJujtXpDh7U50Fgcu1ujj/1eZgmrPme
E0Z9HrKn7E1ziqU+D8fP1DZVCajPwxHr10teLqc+D+O1A+fcWU19HiwdLFtW
r6M+D7rvf/d7v5H6kXij3q9uUi71I7HJJ9Zs4g7qR0K/4nzeswLqR2KDuU6T
sJj6kdjYg/r6Q9SPhHbZUZevR6kfCeXfbJS7TlI/En5dbkflldSPgpKD11Pu
OepHYd3Wz2b3LlI/CvVb9kzWraV+FLYsvmC+4Dr1o7AzekbtvHrqR6FGkmsz
7jb1ozBFUtTW2ET9KKAif3D4fepHQ7lqefudR9SPxomYpAq9VupH41Ovfo7P
M+pHIyNVIz/2BfWjMftNU0voK+pHo2IVn2/3hvrR2N181Pn7O+pHw6aNF7a/
k/ox2Fp4/qBZF/VjkGu+pl9pN/VjgIaARSpfqR8D7Ur9EI9v1I+Bcp2O8rpe
6segPcleZX8f9WOg8SDWsPynPNaPwQrf3HEH+zNzYhFpY52fpcSsHYt0zTDH
0IHMiEXBvC8Nk1SYubGoM2u/1aTKLIvF5Nn8l8uGMBf+93vejP2qw5jlsQjp
Wr0zW436sZC6proP+Jn6cXBoj1wSP5z6cVgUtn7ktRHUj8Ocwt3jNDSoH4fd
ma/+9tGkfhw+bvWr3ziK+nFwLjnhd2Y09eOw1aCi/d4Y6sfhoubc9nYt6sdj
9+eUs91jqR8P8T8fzn4eR/147FMtd3o/nvrxEOnGVz+eQP14vOAUR16eSP14
jFp/ek+hNvXjobKXUyHRoX48/lnz7cNcXeonILTJt2jQJOonYLrv8KHXyEjA
hAObxav0qJ8A0+CasdP1qZ+A1ja1uffJhQkYp1Wpl2JA/QScul30XWsy9RMQ
Ldkx6CSZk4jHMQuTHQypn4iWoQnpt8lIhO7QCyH+RtRPxIV1xrMek2WJqL3x
JwKMqZ+I5GlKxXfJ8kQU8bKznadQPxGvy9ONq8mcJDS+Tik0mEr9JFySZo7a
REYSbnZ6Vnwkc5OQxR1b4GVC/STYbWvsOk4uTMK39VoPB0+jfhJ4muGCMHJr
EmzOP71XQebwceVTmZHydGZ1PkQJ1es8ydp86PR0qhSQTfk41m5e/5wMPnKU
o98amzK78aGhnyJLIHP5sLoq3nOEzOcjb1JyaDtZxsfMtOuPDGYw5/CRZvnS
gEsu5MPyz5Ve28nlfDgcEyTfIMv5qM/7dLCP3MiHy6X0T6Yz6V4+pnHb+Vxy
Bx9xE52nZpM5AkybomddTVYXoKE1vLiNrC2Am8RHNtSM7hfgEffcA3MyBPi0
t/GiP9lNgIUCu3mryVwBQqUz4veR+QIYjgh1vkKWCfBXifLLNnKOAOtcXroN
MKf7BdjwJmCLLrlcAG8Pz9NzyHIBete7XwsgNwqw8f7yBim5VYBWo+zmHHKH
AN1jv7QfInOEEG6+PPwSWV2I/g6l3vfJ2kIEfRhx7j3ZVIjkAE13JQu6Xwg3
z5VjtMhuQnSfrhs/jcwVYsdeC549mS9Ew9rKbk+yTIj6B8r3eeQcIc7e2jZ8
GblQCO/SPYfWk8uFcJw+sXg7WS6EpPLhwAPkRiGkKeEPKsitQvz2XU3nCrlD
iLvRqk9ukTki2Lk6T2whq4tg+jGvtZ2sLUJ25gajL2RTEVJrc7/3t6T7RTiw
rCdcjewmgv7E1iAtMlcEy0iLDj0yX4QpWTcnTCfLRFC+6f3WmpwjwrzDS0Pm
kgtF+HfunOWu5HIRtqV4zPYiy0WYM7/mcCC5UYTBRRtuRJBbRVhyv6Qwntwh
gvHK18ZiMkeM67uGJK4gq4vRElIWv5asLcZ4SzejDLKpGCq1kSWbFPeLcfy8
44utivvF8Dpm3r5Lcb8YFi1+Z/Yq7hcjWKNh4QHF/WJk+eYfKVPcL8ao4pKH
xxX3i+FW0tx8WnG/GKYR30rOKu4XY+Dz645yxf1iVN76UHNFcb8YH4apDfpD
cb8YT9zLjG8q7pfg+DEng1uK+yU4Ndmr567ifgkiDWccbVbcL0HrMAu7R4r7
JVDdd7C0RXG/BGq/1X1+qrhfgmeXruq/UNwvAVe11uKV4n4JolzaDN8o7pdA
vc+U815xvwQaO07UdCrul6D4ES+kS3G/BOW2v7zqVtwvwcOZBgFfFfdLYJzX
V/FNcb8Ee54W/duruF8K+a42I44V3S+FU1rm/H5kbSl6O/xdB5BNpVgzZNgc
ZTKkWDzWT3sQ2U2K7ppX71XIXCnqjaOODibzpeCJhYFDyTIptleV/DuMnCNF
cdiODHVyoRQ6Pg9UhpPLpWif2rViBFkuhUVEfOtIcqMUl7IuW2mSW6X4JUWy
dtR//h+x6qxt
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {8}}]& ], 
          "\"{1.5, 100}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1.5, 100}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#8"]& ], 
       TagBox[
        TagBox[
         TooltipBox[
          TagBox[{
            Hue[0.5585438199983166, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 180], 0.005555555555555556]], 
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[2]], 
            LineBox[CompressedData["
1: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
wXf/F2o3sKo=
             "]]}, Annotation[#, {{Callout}, Charting`Private`Tag, {9}}]& ], 
          "\"{1.5, 365}\"", TooltipStyle -> "TextStyling"], 
         Annotation[#, "{1.5, 365}", "Tooltip"]& ], 
        Annotation[#, "Charting`Private`Tag#9"]& ]}}, {{{}, {{
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.4052960520653284`, 2.6504986334743887`}, {
               120.85424323964216`, 900.7297621627548}], 
              Offset[{0, 0}, {116.00819672131148`, 956.5717407268536}], 
              Offset[{0, 5}, {116.00819672131148`, 956.5717407268536}], 
              Offset[{0, 10}, {116.00819672131148`, 956.5717407268536}], 
              Offset[{0, 10}, {116.00819672131148`, 956.5717407268536}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.4052960520653284`, 2.6504986334743887`}, {
               120.85424323964216`, 900.7297621627548}], 
              Offset[{0, 0}, {116.00819672131148`, 956.5717407268536}], 
              Offset[{0, 5}, {116.00819672131148`, 956.5717407268536}], 
              Offset[{0, 10}, {116.00819672131148`, 956.5717407268536}], 
              Offset[{0, 10}, {116.00819672131148`, 956.5717407268536}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{18.84338097498636, 24.000000000000004`}, {
               116.00819672131148`, 956.5717407268536}], 
              
              Offset[{18.84338097498636, 10.000000000000004`}, {
               116.00819672131148`, 956.5717407268536}], 
              
              Offset[{-24.15661902501364, 9.999999999999996}, {
               116.00819672131148`, 956.5717407268536}], 
              
              Offset[{-24.15661902501364, 23.999999999999996`}, {
               116.00819672131148`, 956.5717407268536}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{-2.6566190250136392`, 17.}, {116.00819672131148`, 
             956.5717407268536}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.2733106426759258`, 2.716372582553472}, {
               69.75805873718731, 175.50438617925172`}], 
              Offset[{0, 0}, {64.00819672131146, 250.44648510853614`}], 
              Offset[{0, 5}, {64.00819672131146, 250.44648510853614`}], 
              Offset[{0, 10}, {64.00819672131146, 250.44648510853614`}], 
              Offset[{0, 10}, {64.00819672131146, 250.44648510853614`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.2733106426759258`, 2.716372582553472}, {
               69.75805873718731, 175.50438617925172`}], 
              Offset[{0, 0}, {64.00819672131146, 250.44648510853614`}], 
              Offset[{0, 5}, {64.00819672131146, 250.44648510853614`}], 
              Offset[{0, 10}, {64.00819672131146, 250.44648510853614`}], 
              Offset[{0, 10}, {64.00819672131146, 250.44648510853614`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{19.99354680719121, 24.000000000000007`}, {
               64.00819672131146, 250.44648510853614`}], 
              
              Offset[{19.99354680719121, 10.000000000000005`}, {
               64.00819672131146, 250.44648510853614`}], 
              
              Offset[{-28.00645319280879, 9.999999999999995}, {
               64.00819672131146, 250.44648510853614`}], 
              
              Offset[{-28.00645319280879, 23.999999999999993`}, {
               64.00819672131146, 250.44648510853614`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-4.006453192808793, 17.}, {64.00819672131146, 
             250.44648510853614`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.4556665977733247`, 2.6231726508423026`}, {
               154.52964336962782`, 1082.6896713859637`}], 
              Offset[{0, 0}, {150.0081967213115, 1132.469778889293}], 
              Offset[{0, 5}, {150.0081967213115, 1132.469778889293}], 
              Offset[{0, 10}, {150.0081967213115, 1132.469778889293}], 
              Offset[{0, 10}, {150.0081967213115, 1132.469778889293}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.4556665977733247`, 2.6231726508423026`}, {
               154.52964336962782`, 1082.6896713859637`}], 
              Offset[{0, 0}, {150.0081967213115, 1132.469778889293}], 
              Offset[{0, 5}, {150.0081967213115, 1132.469778889293}], 
              Offset[{0, 10}, {150.0081967213115, 1132.469778889293}], 
              Offset[{0, 10}, {150.0081967213115, 1132.469778889293}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{22.20920271766502, 24.000000000000007`}, {
               150.0081967213115, 1132.469778889293}], 
              
              Offset[{22.20920271766502, 10.000000000000005`}, {
               150.0081967213115, 1132.469778889293}], 
              
              Offset[{-25.79079728233498, 9.999999999999995}, {
               150.0081967213115, 1132.469778889293}], 
              
              Offset[{-25.79079728233498, 23.999999999999993`}, {
               150.0081967213115, 1132.469778889293}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{0.5, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-1.7907972823349816`, 17.}, {150.0081967213115, 
             1132.469778889293}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.485614245444388, 2.606328895924822}, {
               142.34993838523712`, 1109.8418656882698`}], 
              Offset[{0, 0}, {138.0081967213115, 1156.3791035982488`}], 
              Offset[{0, 5}, {138.0081967213115, 1156.3791035982488`}], 
              Offset[{0, 10}, {138.0081967213115, 1156.3791035982488`}], 
              Offset[{0, 10}, {138.0081967213115, 1156.3791035982488`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.485614245444388, 2.606328895924822}, {
               142.34993838523712`, 1109.8418656882698`}], 
              Offset[{0, 0}, {138.0081967213115, 1156.3791035982488`}], 
              Offset[{0, 5}, {138.0081967213115, 1156.3791035982488`}], 
              Offset[{0, 10}, {138.0081967213115, 1156.3791035982488`}], 
              Offset[{0, 10}, {138.0081967213115, 1156.3791035982488`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{15.872812676253224`, 24.000000000000004`}, {
               138.0081967213115, 1156.3791035982488`}], 
              
              Offset[{15.872812676253224`, 10.000000000000004`}, {
               138.0081967213115, 1156.3791035982488`}], 
              
              Offset[{-18.127187323746774`, 9.999999999999996}, {
               138.0081967213115, 1156.3791035982488`}], 
              
              Offset[{-18.127187323746774`, 23.999999999999996`}, {
               138.0081967213115, 1156.3791035982488`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            Offset[{-1.1271873237467758`, 17.}, {138.0081967213115, 
             1156.3791035982488`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.8886107074811055, 2.8653744974348343`}, {
               81.94097978050459, 422.05435571840883`}], 
              Offset[{0, 0}, {78.00819672131148, 499.5332296380832}], 
              Offset[{0, 5}, {78.00819672131148, 499.5332296380832}], 
              Offset[{0, 10}, {78.00819672131148, 499.5332296380832}], 
              Offset[{0, 10}, {78.00819672131148, 499.5332296380832}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.8886107074811055, 2.8653744974348343`}, {
               81.94097978050459, 422.05435571840883`}], 
              Offset[{0, 0}, {78.00819672131148, 499.5332296380832}], 
              Offset[{0, 5}, {78.00819672131148, 499.5332296380832}], 
              Offset[{0, 10}, {78.00819672131148, 499.5332296380832}], 
              Offset[{0, 10}, {78.00819672131148, 499.5332296380832}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{15.5723655739751, 24.000000000000004`}, {
               78.00819672131148, 499.5332296380832}], 
              
              Offset[{15.5723655739751, 10.000000000000004`}, {
               78.00819672131148, 499.5332296380832}], 
              
              Offset[{-24.427634426024902`, 9.999999999999996}, {
               78.00819672131148, 499.5332296380832}], 
              
              Offset[{-24.427634426024902`, 23.999999999999996`}, {
               78.00819672131148, 499.5332296380832}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-4.4276344260249, 17.}, {78.00819672131148, 
             499.5332296380832}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.2172596887446614`, 2.741948002817933}, {
               67.57726921792208, 158.69097432215676`}], 
              Offset[{0, 0}, {63.00819672131148, 221.57169118098662`}], 
              Offset[{0, 5}, {63.00819672131148, 221.57169118098662`}], 
              Offset[{0, 10}, {63.00819672131148, 221.57169118098662`}], 
              Offset[{0, 10}, {63.00819672131148, 221.57169118098662`}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.2172596887446614`, 2.741948002817933}, {
               67.57726921792208, 158.69097432215676`}], 
              Offset[{0, 0}, {63.00819672131148, 221.57169118098662`}], 
              Offset[{0, 5}, {63.00819672131148, 221.57169118098662`}], 
              Offset[{0, 10}, {63.00819672131148, 221.57169118098662`}], 
              Offset[{0, 10}, {63.00819672131148, 221.57169118098662`}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{17.00574260555839, 24.000000000000004`}, {
               63.00819672131148, 221.57169118098662`}], 
              
              Offset[{17.00574260555839, 10.000000000000004`}, {
               63.00819672131148, 221.57169118098662`}], 
              
              Offset[{-22.99425739444161, 9.999999999999996}, {
               63.00819672131148, 221.57169118098662`}], 
              
              Offset[{-22.99425739444161, 23.999999999999996`}, {
               63.00819672131148, 221.57169118098662`}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-2.994257394441613, 17.}, {63.00819672131148, 
             221.57169118098662`}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.875648037876738, 2.8693623880163024`}, {
               76.48184264898799, 337.5711386397351}], 
              Offset[{0, 0}, {72.00819672131146, 427.1346044725887}], 
              Offset[{0, 5}, {72.00819672131146, 427.1346044725887}], 
              Offset[{0, 10}, {72.00819672131146, 427.1346044725887}], 
              Offset[{0, 10}, {72.00819672131146, 427.1346044725887}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.875648037876738, 2.8693623880163024`}, {
               76.48184264898799, 337.5711386397351}], 
              Offset[{0, 0}, {72.00819672131146, 427.1346044725887}], 
              Offset[{0, 5}, {72.00819672131146, 427.1346044725887}], 
              Offset[{0, 10}, {72.00819672131146, 427.1346044725887}], 
              Offset[{0, 10}, {72.00819672131146, 427.1346044725887}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{16.378928871759168`, 24.000000000000004`}, {
               72.00819672131146, 427.1346044725887}], 
              
              Offset[{16.378928871759168`, 10.000000000000004`}, {
               72.00819672131146, 427.1346044725887}], 
              
              Offset[{-26.621071128240832`, 9.999999999999996}, {
               72.00819672131146, 427.1346044725887}], 
              
              Offset[{-26.621071128240832`, 23.999999999999996`}, {
               72.00819672131146, 427.1346044725887}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 60}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-5.121071128240832, 17.}, {72.00819672131146, 
             427.1346044725887}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-1.2688210889813014`, 2.7184725571828574`}, {
               157.840452512534, 1213.6950677461732`}], 
              Offset[{0, 0}, {154.0081967213115, 1263.859108773066}], 
              Offset[{0, 5}, {154.0081967213115, 1263.859108773066}], 
              Offset[{0, 10}, {154.0081967213115, 1263.859108773066}], 
              Offset[{0, 10}, {154.0081967213115, 1263.859108773066}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-1.2688210889813014`, 2.7184725571828574`}, {
               157.840452512534, 1213.6950677461732`}], 
              Offset[{0, 0}, {154.0081967213115, 1263.859108773066}], 
              Offset[{0, 5}, {154.0081967213115, 1263.859108773066}], 
              Offset[{0, 10}, {154.0081967213115, 1263.859108773066}], 
              Offset[{0, 10}, {154.0081967213115, 1263.859108773066}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{22.327029286901407`, 24.000000000000007`}, {
               154.0081967213115, 1263.859108773066}], 
              
              Offset[{22.327029286901407`, 10.000000000000005`}, {
               154.0081967213115, 1263.859108773066}], 
              
              Offset[{-25.672970713098593`, 9.999999999999995}, {
               154.0081967213115, 1263.859108773066}], 
              
              Offset[{-25.672970713098593`, 23.999999999999993`}, {
               154.0081967213115, 1263.859108773066}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 100}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-1.672970713098593, 17.}, {154.0081967213115, 
             1263.859108773066}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}], 
         GraphicsGroupBox[{{
            Directive[
             AbsoluteThickness[4], 
             GrayLevel[1], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]]], 
            CapForm["Butt"], 
            JoinForm["Round"], 
            BSplineCurveBox[{
              
              Offset[{-0.8687768107244754, 2.87145030483681}, {
               79.93535591217413, 402.7713891587094}], 
              Offset[{0, 0}, {75.00819672131148, 502.266820396384}], 
              Offset[{0, 5}, {75.00819672131148, 502.266820396384}], 
              Offset[{0, 10}, {75.00819672131148, 502.266820396384}], 
              Offset[{0, 10}, {75.00819672131148, 502.266820396384}]}]}, {
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]], 
            BSplineCurveBox[{
              
              Offset[{-0.8687768107244754, 2.87145030483681}, {
               79.93535591217413, 402.7713891587094}], 
              Offset[{0, 0}, {75.00819672131148, 502.266820396384}], 
              Offset[{0, 5}, {75.00819672131148, 502.266820396384}], 
              Offset[{0, 10}, {75.00819672131148, 502.266820396384}], 
              Offset[{0, 10}, {75.00819672131148, 502.266820396384}]}]}, {
            FaceForm[
             Directive[
              GrayLevel[1], 
              Opacity[
               NCache[
                Rational[2, 3], 0.6666666666666666]]]], 
            EdgeForm[], 
            PolygonBox[{
              
              Offset[{17.56432178330022, 24.000000000000007`}, {
               75.00819672131148, 502.266820396384}], 
              
              Offset[{17.56432178330022, 10.000000000000005`}, {
               75.00819672131148, 502.266820396384}], 
              
              Offset[{-30.43567821669978, 9.999999999999995}, {
               75.00819672131148, 502.266820396384}], 
              
              Offset[{-30.43567821669978, 23.999999999999993`}, {
               75.00819672131148, 502.266820396384}]}]}, {
            EdgeForm[], 
            Directive[
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25]]}, {}, 
           InsetBox[
            FormBox[
             StyleBox[
              RotationBox["\"{1.5, 365}\"", BoxRotation -> 0.], {
               Opacity[1]}, StripOnInput -> False], TraditionalForm], 
            
            Offset[{-6.435678216699781, 17.}, {75.00819672131148, 
             502.266820396384}], 
            NCache[
             ImageScaled[{
               Rational[1, 2], 
               Rational[1, 2]}], 
             ImageScaled[{0.5, 0.5}]]]}]}}}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     ImageSize -> Large, 
     Method -> {
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          AbsoluteThickness[2]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
       "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Deceased Infected Population\"", TraditionalForm], 
     PlotRange -> {{0, 366.}, {0, 1294.3235384665052`}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"{0.5, 60}\"", "\"{0.5, 100}\"", "\"{0.5, 365}\"", "\"{1, 60}\"", 
       "\"{1, 100}\"", "\"{1, 365}\"", "\"{1.5, 60}\"", "\"{1.5, 100}\"", 
       "\"{1.5, 365}\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox[
               "\"Medical supplies\\ndelivery period & disruption start\"", {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False]}, {
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           
           RowBox[{"LegendLabel", "\[Rule]", 
             "\"Medical supplies\\ndelivery period & disruption start\""}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.89956196435855*^9, 3.8995622797652082`*^9},
 CellLabel->"Out[139]=",
 CellID->836613703,ExpressionUUID->"71d46dcf-8cfd-4cf9-9f88-b0c1d8d4ffd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"Last", "/@", "aVals"}], "]"}]], "Input",
 CellChangeTimes->{{3.7956177901665697`*^9, 3.795617799750969*^9}},
 CellLabel->"In[140]:=",
 CellID->337581397,ExpressionUUID->"9617cae9-59c8-466f-96d1-4ec1f728c549"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "60"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "100"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"1.5`", ",", "365"}], "}"}],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "1181.825169116902`", "1181.4868429173675`", "1176.2071686717782`", 
     "1247.3813164386231`", "1243.0803519426945`", "1233.245198691985`", 
     "1294.3235384665052`", "1293.7729585988704`", "1285.028586775483`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 10 -> 
       GrayLevel[0.8], 11 -> GrayLevel[0.8], 11 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.899561964635654*^9, 3.8995622797907143`*^9},
 CellLabel->"Out[140]=",
 CellID->1805710479,ExpressionUUID->"4fe2e25f-4e86-44ed-b636-b46442eea3b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Last", "/@", "aVals"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"\[Pi]", "/", "6"}]}], "]"}], "&"}], ",", 
      RowBox[{"Keys", "[", "aAUCs", "]"}]}], "]"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Pastel\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Deceased Population at day 365\>\""}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.795617812675411*^9, {3.79561792648871*^9, 3.795617942742126*^9}, {
   3.795618452224924*^9, 3.7956184638887053`*^9}},
 CellLabel->"In[141]:=",
 CellID->78744005,ExpressionUUID->"4b480b03-0128-48c3-8613-bfd3e3a81bec"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.3707501820830299, 0.}, {9.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.637], 
     Thickness[Small]}], 
     {RGBColor[0.786934281299785, 0.5308875689474845, 0.9472269389272431], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 1181.825169116902},
          
          RoundingRadius->0],
         StatusArea[#, 1181.825169116902]& ,
         TagBoxNote->"1181.825169116902"],
        StyleBox["1181.825169116902`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1181.825169116902, {}], "Tooltip"]& ]}, 
     {RGBColor[0.7854302244583878, 0.5272709134129482, 0.9468276719527545], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 1181.4868429173675},
          
          RoundingRadius->0],
         StatusArea[#, 1181.4868429173675`]& ,
         TagBoxNote->"1181.4868429173675"],
        StyleBox["1181.4868429173675`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1181.4868429173675`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.761959, 0.470832, 0.940597], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 1176.2071686717782},
          
          RoundingRadius->0],
         StatusArea[#, 1176.2071686717782`]& ,
         TagBoxNote->"1176.2071686717782"],
        StyleBox["1176.2071686717782`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1176.2071686717782`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9533889100759269, 0.9385162796925389, 0.6192324346094399], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 1247.3813164386231},
          
          RoundingRadius->0],
         StatusArea[#, 1247.3813164386231`]& ,
         TagBoxNote->"1247.3813164386231"],
        StyleBox["1247.3813164386231`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1247.3813164386231`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9590037128716422, 0.9225847073427329, 0.6032223559571686], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 1243.0803519426945},
          
          RoundingRadius->0],
         StatusArea[#, 1243.0803519426945`]& ,
         TagBoxNote->"1243.0803519426945"],
        StyleBox["1243.0803519426945`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1243.0803519426945`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.9570064053316351, 0.8644738093648345, 0.5893633704137524], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 1233.245198691985},
          
          RoundingRadius->0],
         StatusArea[#, 1233.245198691985]& ,
         TagBoxNote->"1233.245198691985"],
        StyleBox["1233.245198691985`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1233.245198691985, {}], "Tooltip"]& ]}, 
     {RGBColor[0.431296, 0.709773, 0.927077], EdgeForm[{Opacity[0.637], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 1294.3235384665052},
          
          RoundingRadius->0],
         StatusArea[#, 1294.3235384665052`]& ,
         TagBoxNote->"1294.3235384665052"],
        StyleBox["1294.3235384665052`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1294.3235384665052`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.4396650525510276, 0.7144696577353818, 0.9285343288298328], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 1293.7729585988704},
          
          RoundingRadius->0],
         StatusArea[#, 1293.7729585988704`]& ,
         TagBoxNote->"1293.7729585988704"],
        StyleBox["1293.7729585988704`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1293.7729585988704`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.5725832931507917, 0.7890625078913505, 0.9516797903806629], 
      EdgeForm[{Opacity[0.637], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{8.548798252002912, 0.}, {9.451201747997086, 1285.028586775483},
          
          RoundingRadius->0],
         StatusArea[#, 1285.028586775483]& ,
         TagBoxNote->"1285.028586775483"],
        StyleBox["1285.028586775483`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1285.028586775483, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.3707501820830299, 0.}, {9.632810779315367, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{9.451201747997086, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {9.451201747997086, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}], LineBox[{{6.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
              0.}]}], LineBox[{{6.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
              0.}]}], LineBox[{{7.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 
              0.}]}], LineBox[{{7.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
              0.}]}], LineBox[{{8.451201747997086, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.451201747997086, 
              0.}]}], LineBox[{{8.548798252002912, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {8.548798252002912, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           RotationBox["\<\"{0.5, 60}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {1., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{0.5, 100}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {2., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{0.5, 365}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {3., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1, 60}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {4., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1, 100}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {5., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1, 365}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {6., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1.5, 60}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {7., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1.5, 100}\"\>",
            BoxRotation->0.5235987755982988], 
           Offset[{0, -2}, {7.999999999999999, 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           RotationBox["\<\"{1.5, 365}\"\>",
            BoxRotation->0.5235987755982988], Offset[{0, -2}, {9., 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3707501820830299, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox["\"Deceased Population at day 365\"", TraditionalForm],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.8995619646800327`*^9, 3.899562279837838*^9},
 CellLabel->"Out[141]=",
 CellID->878116379,ExpressionUUID->"9d08e1fd-4574-4181-8909-be17cda8c64f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellChangeTimes->{{3.793819068515966*^9, 3.793819069978736*^9}},
 CellID->600565483,ExpressionUUID->"cf89694d-4eec-4779-834f-2e1b638faf28"],

Cell[CellGroupData[{

Cell["Articles", "Subsection",
 CellChangeTimes->{{3.7938192941283903`*^9, 3.793819299584835*^9}},
 CellID->530931881,ExpressionUUID->"306eb991-06c0-4a9f-acfc-2be6b6053762"],

Cell[TextData[{
 "[Wk1] Wikipedia entry, ",
 ButtonBox["\"Compartmental models in epidemiology\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
     None},
  ButtonNote->
   "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925809029512987`*^9, 3.792580956058198*^9}, {
  3.7951690818496*^9, 3.7951690840996933`*^9}},
 CellID->577570682,ExpressionUUID->"75a075b4-b6bf-45da-b032-72d7d4df90b2"],

Cell[TextData[{
 "[Wl2] Wikipedia entry, ",
 ButtonBox["\"Coronavirus disease 2019\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Coronavirus_disease_2019"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Coronavirus_disease_2019"],
 "."
}], "Text",
 CellChangeTimes->{{3.79516908583174*^9, 3.795169130465127*^9}},
 CellID->604367934,ExpressionUUID->"e9e71790-0650-43ce-8485-67f0e3d6fd80"],

Cell[TextData[{
 "[HH1] Herbert W. Hethcote (2000). ",
 ButtonBox["\"The Mathematics of Infectious Diseases\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://leonidzhukov.net/hse/2014/socialnetworks/papers/2000SiamRev.\
pdf"], None},
  ButtonNote->
   "http://leonidzhukov.net/hse/2014/socialnetworks/papers/2000SiamRev.pdf"],
 ". SIAM Review. 42 (4): 599\[Dash]653. Bibcode:2000SIAMR..42..599H. \
doi:10.1137/s0036144500371907."
}], "Text",
 CellChangeTimes->{{3.792336502490754*^9, 3.792336535278623*^9}, {
  3.792409361602792*^9, 3.792409368869828*^9}},
 CellID->14216428,ExpressionUUID->"35750e5d-9f59-42e8-9326-748e37626843"],

Cell[TextData[{
 "[BC1] Lucia Breierova,  Mark Choudhari,  ",
 ButtonBox["An Introduction to Sensitivity Analysis",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://ocw.mit.edu/courses/sloan-school-of-management/15-988-system-\
dynamics-self-study-fall-1998-spring-1999/readings/sensitivityanalysis.pdf"], 
    None},
  ButtonNote->
   "https://ocw.mit.edu/courses/sloan-school-of-management/15-988-system-\
dynamics-self-study-fall-1998-spring-1999/readings/sensitivityanalysis.pdf"],
 ", (1996), Massachusetts Institute of Technology."
}], "Text",
 CellChangeTimes->{{3.7951006575283747`*^9, 3.795100709469963*^9}, {
  3.795100763074478*^9, 3.795100763076239*^9}},
 CellID->564820579,ExpressionUUID->"9968ed1d-e1a6-479f-93d3-8fb6e6e8b458"],

Cell[TextData[{
 "[AA1] Anton Antonov, ",
 ButtonBox["\"Coronavirus propagation modeling considerations\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Coronavirus-propagation-modeling-\
considerations.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Coronavirus-propagation-modeling-\
considerations.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.792580630613844*^9, 3.79258066346693*^9}, {
  3.792580699618342*^9, 3.792580699619379*^9}},
 CellID->1061751513,ExpressionUUID->"2c50d042-fa5e-4e0c-8d00-39f4bd060ef9"],

Cell[TextData[{
 "[AA2] Anton Antonov, ",
 ButtonBox["\"Basic experiments workflow for simple epidemiological models\"",
  
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Basic-experiments-workflow-for-\
simple-epidemiological-models.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Basic-experiments-workflow-for-\
simple-epidemiological-models.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.792836760631132*^9, 3.792836844502586*^9}, {
  3.792942846010427*^9, 3.792942880222164*^9}},
 CellID->1416056068,ExpressionUUID->"b776df32-0585-45af-8234-a1aab31662dd"],

Cell[TextData[{
 "[AA3] Anton Antonov, ",
 ButtonBox["\"Scaling of Epidemiology Models with Multi-site Compartments\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Scaling-of-epidemiology-models-\
with-multi-site-compartments.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/Scaling-of-epidemiology-models-\
with-multi-site-compartments.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.793819181468184*^9, 3.793819243245372*^9}, {
  3.793819286943555*^9, 3.793819291565818*^9}},
 CellID->1240558822,ExpressionUUID->"1404df9e-5e88-490c-89fa-4c6013ffde50"],

Cell[TextData[{
 "[AA4] Anton Antonov, ",
 ButtonBox["\"SEI2HR model with quarantine scenarios\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/SEI2HR-model-with-quarantine-\
scenarios.md"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/Documents/SEI2HR-model-with-quarantine-\
scenarios.md"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.795256617873764*^9, 3.795256664757248*^9}},
 CellID->153392631,ExpressionUUID->"d869ccff-ce95-46b5-bc11-01d611b98f11"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Repositories, packages", "Subsection",
 CellChangeTimes->{{3.792792973327919*^9, 3.7927929880315247`*^9}, {
   3.7930262856498327`*^9, 3.7930262863136473`*^9}, 3.7956209052449493`*^9, {
   3.795621067270512*^9, 3.7956210710277843`*^9}},
 CellID->1089572817,ExpressionUUID->"00d4ec13-6a6c-469d-9133-9a60adba023e"],

Cell[TextData[{
 "[WRI1] Wolfram Research, Inc., ",
 ButtonBox["\"Epidemic Data for Novel Coronavirus COVID-19\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com/obj/resourcesystem/published/\
DataRepository/resources/Epidemic-Data-for-Novel-Coronavirus-COVID-19"], None},
  ButtonNote->
   "https://www.wolframcloud.com/obj/resourcesystem/published/DataRepository/\
resources/Epidemic-Data-for-Novel-Coronavirus-COVID-19"],
 ", ",
 ButtonBox["WolframCloud",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolframcloud.com"], None},
  ButtonNote->"https://www.wolframcloud.com"],
 "."
}], "Text",
 CellChangeTimes->{{3.79284700154799*^9, 3.792847018423129*^9}, {
  3.792848397923408*^9, 3.792848432986006*^9}},
 CellID->857277350,ExpressionUUID->"92dddfc2-9047-4a5c-8363-41af42dedf96"],

Cell[TextData[{
 "[AAr1] Anton Antonov, ",
 ButtonBox["Coronavirus propagation dynamics project",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/tree/master/Projects/\
Coronavirus-propagation-dynamics"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/tree/master/Projects/\
Coronavirus-propagation-dynamics"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.788089798305283*^9, 3.788089800881453*^9}, {
  3.7882595209218683`*^9, 3.788259579130772*^9}, {3.788259655834017*^9, 
  3.7882596599065332`*^9}, {3.792335102609013*^9, 3.792335162932585*^9}, {
  3.7925188075238953`*^9, 3.792518811281426*^9}},
 CellID->792633727,ExpressionUUID->"9aa4ecf1-4cb3-4a9e-8e77-7d8122500acd"],

Cell[TextData[{
 "[AAr2] Anton Antonov, ",
 ButtonBox["\"Epidemiology Compartmental Modeling Monad in R\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ECMMon-R"], None},
  ButtonNote->"https://github.com/antononcube/ECMMon-R"],
 ", (2020), ",
 ButtonBox["ECMon-R at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/ECMMon-R"], None},
  ButtonNote->"https://github.com/antononcube/ECMMon-R"],
 "."
}], "Text",
 CellChangeTimes->{{3.788089798305283*^9, 3.788089800881453*^9}, {
  3.7882595209218683`*^9, 3.788259579130772*^9}, {3.788259655834017*^9, 
  3.7882596599065332`*^9}, {3.792335102609013*^9, 3.792335162932585*^9}, {
  3.7925188075238953`*^9, 3.792518811281426*^9}, {3.795601050112214*^9, 
  3.795601119254492*^9}},
 CellID->953987348,ExpressionUUID->"1eaa341c-5fa8-4c07-a539-8ba8eb5b9c2f"],

Cell[TextData[{
 "[AAp1] Anton Antonov, ",
 ButtonBox["\"Epidemiology models Mathematica package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModels.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.792782050096183*^9, 
   3.792782085248444*^9}, {3.792793007922522*^9, 3.7927930082592697`*^9}, {
   3.792850913255866*^9, 3.792850913660157*^9}, 3.795595421054535*^9},
 CellID->552449334,ExpressionUUID->"7bed219e-273e-4fa2-aae7-ca6def8aaa42"],

Cell[TextData[{
 "[AAp2] Anton Antonov, ",
 ButtonBox["\"Epidemiology models modifications Mathematica package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m"], None},
  
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.792782050096183*^9, 
   3.792782085248444*^9}, {3.792782191837761*^9, 3.792782197033924*^9}, {
   3.792782233165003*^9, 3.7927822331669693`*^9}, {3.792793010217144*^9, 
   3.792793010914422*^9}, {3.7928509155729322`*^9, 3.7928509156292143`*^9}, 
   3.795595416691061*^9},
 CellID->1444150557,ExpressionUUID->"b65a3c71-f595-4f9f-8c24-f69279365017"],

Cell[TextData[{
 "[AAp3] Anton Antonov, ",
 ButtonBox["\"Epidemiology modeling visualization functions Mathematica \
package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
   3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
   3.792850918205223*^9}, {3.7930250981159153`*^9, 3.793025108307509*^9}, {
   3.793025139244979*^9, 3.793025139245862*^9}, 3.795595412739843*^9},
 CellID->978233105,ExpressionUUID->"dc8c2506-c367-42f7-83ef-51928e199949"],

Cell[TextData[{
 "[AAp4] Anton Antonov, ",
 ButtonBox["\"Epidemiology modeling simulation functions Mathematica \
package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelingSimulationFunctions.\
m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/Projects/\
Coronavirus-propagation-dynamics/WL/EpidemiologyModelingSimulationFunctions.\
m"],
 ", (2020), ",
 ButtonBox["SystemModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
  3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
  3.792850918205223*^9}, {3.7930250837820044`*^9, 3.793025084411715*^9}, {
  3.7955954090394087`*^9, 3.795595435792547*^9}, {3.795595553654883*^9, 
  3.7955955704051523`*^9}},
 CellID->28994303,ExpressionUUID->"6cf840ea-d915-4547-a02d-0cdcd884d7e7"],

Cell[TextData[{
 "[AAp5] Anton Antonov, ",
 ButtonBox["\"System dynamics interactive interfaces functions Mathematica \
package\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling/blob/master/WL/\
SystemDynamicsInteractiveInterfacesFunctions.m"], None},
  ButtonNote->
   "https://github.com/antononcube/SystemModeling/blob/master/WL/\
SystemDynamicsInteractiveInterfacesFunctions.m"],
 ", (2020), ",
 ButtonBox["SystemsModeling at GitHub",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/antononcube/SystemModeling"], None},
  ButtonNote->"https://github.com/antononcube/SystemModeling"],
 "."
}], "Text",
 CellChangeTimes->{{3.7925160899066896`*^9, 3.792516159421608*^9}, {
  3.7925187526504107`*^9, 3.7925188050487967`*^9}, {3.7928509175305853`*^9, 
  3.792850918205223*^9}, {3.7930250837820044`*^9, 3.793025084411715*^9}, {
  3.7955953996237307`*^9, 3.795595399949171*^9}},
 CellID->1975946299,ExpressionUUID->"7d6889d2-7e27-4531-b862-9565d535312e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->953933221,ExpressionUUID->"c645c12b-78c7-4f4a-979c-31759317c783"],

Cell[TextData[ButtonBox["Epidemiological modeling",
 BaseStyle->"Link",
 ButtonData->
  "paclet:AntonAntonov/EpidemiologicalModeling/guide/Epidemiologicalmodeling"]\
], "TutorialMoreAbout",
 CellChangeTimes->{{3.89956171860585*^9, 3.899561731816884*^9}},
 CellID->1790220492,ExpressionUUID->"2aebb94b-060d-4405-9681-6b919a1b7c37"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->1989914574,ExpressionUUID->"08917fff-3048-4705-80bf-0652539c89de"],

Cell[TextData[ButtonBox["SEI2HR model with quarantine scenarios",
 BaseStyle->"Link",
 ButtonData->
  "paclet:AntonAntonov/EpidemiologicalModeling/tutorial/\
SEI2HRmodelwithquarantinescenarios"]], "RelatedTutorials",
 CellChangeTimes->{3.89956165272621*^9, 3.8995617374796543`*^9},
 CellID->1731410487,ExpressionUUID->"fd60fc30-3e76-4a20-a0b6-b89617212ae3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->1412638159,ExpressionUUID->"bdb10dd9-24b5-4cb1-9229-d4ca7cfd6102"],

Cell[TextData[{
 "New in: ",
 Cell["1.0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"cc43dac0-7343-484c-8f9d-0f87d3c34d67"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"aa6d4c84-f9c7-4daa-a8e4-3c3e1d8e274b"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "63508a28-e22d-4d09-bd7f-db5b81c2f435"]
}], "History",
 CellChangeTimes->{{3.899561657942319*^9, 3.899561659937257*^9}},
 CellID->1777820728,ExpressionUUID->"c5114a4f-b411-4903-96ba-a1fde244b749"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1892994785,ExpressionUUID->"08e216c1-4d2d-4245-ba44-e8dd272d5d47"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->593121190,ExpressionUUID->"1d70d8bb-2f10-4da5-b53b-f52efd277dc0"],

Cell["AntonAntonov/EpidemiologicalModeling", "Categorization",
 CellLabel->"Paclet Name",
 CellID->2116234603,ExpressionUUID->"3c33a83d-97b0-4445-9f3d-3275713e50ba"],

Cell["AntonAntonov`EpidemiologicalModeling`", "Categorization",
 CellLabel->"Context",
 CellID->930811007,ExpressionUUID->"f9e29104-d023-40ac-9dba-b059c97973bf"],

Cell["\<\
AntonAntonov/EpidemiologicalModeling/tutorial/SEI2HR-\
Econmodelwithquarantineandsuppliesscenarios\
\>", "Categorization",
 CellLabel->"URI",
 CellID->1869709901,ExpressionUUID->"6814ec33-145b-4abb-a2b0-90d12b53b344"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->86099556,ExpressionUUID->"190ee964-0179-4967-b84e-e228d07718df"],

Cell["Epidemiology", "Keywords",
 CellChangeTimes->{{3.89956166318674*^9, 3.899561680426632*^9}},
 CellID->1818743261,ExpressionUUID->"f5f0c2a1-3e2a-445e-ba80-7d65bba2c563"],

Cell["Epidemiological modeling", "Keywords",
 CellChangeTimes->{{3.89956166318674*^9, 3.899561684967497*^9}},
 CellID->2069684381,ExpressionUUID->"d384a2c3-a555-46ff-87bc-5f63c50f9909"],

Cell["Compartmental modeling", "Keywords",
 CellChangeTimes->{{3.89956166318674*^9, 3.899561696074449*^9}},
 CellID->1639048444,ExpressionUUID->"01313c4b-915e-4e1f-bc02-d07cb8b0c533"],

Cell["ODE", "Keywords",
 CellChangeTimes->{{3.89956166318674*^9, 3.899561707175831*^9}},
 CellID->1621053888,ExpressionUUID->"6a546f9b-71dc-46bf-b376-622217b3b8d4"],

Cell["System dynamics", "Keywords",
 CellChangeTimes->{{3.89956166318674*^9, 3.8995617135195913`*^9}},
 CellID->1477744774,ExpressionUUID->"1efcabe4-f7e7-4586-967b-f0a836833354"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1558, 1336},
WindowMargins->{{Automatic, 837}, {Automatic, 13}},
TaggingRules-><|"Paclet" -> "AntonAntonov/EpidemiologicalModeling"|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"432b3dfd-ef82-4868-9eb5-cbd2b0608ecd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 148, 1, 184, "Title",ExpressionUUID->"1d6e7de6-6d39-49ea-b33d-20b987ec6b5d",
 CellID->607055339],
Cell[CellGroupData[{
Cell[753, 27, 174, 2, 58, "Section",ExpressionUUID->"74910f32-770f-4414-b760-416849dc6dba",
 CellID->649430462],
Cell[CellGroupData[{
Cell[952, 33, 895, 18, 55, "Text",ExpressionUUID->"805503ea-53e9-4a42-ad7d-f1890e6cd0f0",
 CellID->1465880780],
Cell[1850, 53, 218599, 3588, 428, "Output",ExpressionUUID->"03353d51-5d2b-46d8-9e20-0a255d941e74",
 CellID->1755863594]
}, Open  ]],
Cell[220464, 3644, 579, 10, 55, "Text",ExpressionUUID->"2b1e47f7-b04f-4049-9e20-72b63ec5d6dc",
 CellID->1036760615],
Cell[221046, 3656, 595, 10, 55, "Text",ExpressionUUID->"f6a25956-05e3-40b2-a64e-1fd31495d5f9",
 CellID->153344547],
Cell[221644, 3668, 991, 19, 55, "Text",ExpressionUUID->"85573987-751d-4a07-b86e-026948bf61b7",
 CellID->281425029],
Cell[CellGroupData[{
Cell[222660, 3691, 174, 2, 53, "Subsection",ExpressionUUID->"cb28fdf3-3f07-4c82-a639-8388a9bf4d69",
 CellID->1151471709],
Cell[CellGroupData[{
Cell[222859, 3697, 174, 2, 54, "Subsubsection",ExpressionUUID->"5552f16b-9ad2-41f6-b942-d06b56247aba",
 CellID->1809870046],
Cell[223036, 3701, 910, 18, 55, "Text",ExpressionUUID->"464d6508-0ca8-4b7e-9a65-97e5b19a117d",
 CellID->1527487014],
Cell[223949, 3721, 375, 7, 31, "Text",ExpressionUUID->"89cf0258-bec3-4ba8-b19a-28d828c3e10e",
 CellID->1454728060],
Cell[224327, 3730, 378, 7, 31, "Text",ExpressionUUID->"57248b13-15d4-44d1-b13a-4c4310639380",
 CellID->513183325]
}, Open  ]],
Cell[CellGroupData[{
Cell[224742, 3742, 172, 2, 54, "Subsubsection",ExpressionUUID->"994d6c7c-85e5-441c-b566-3cbfd7fb1abe",
 CellID->777816923],
Cell[224917, 3746, 554, 9, 55, "Text",ExpressionUUID->"12a12ded-f536-49eb-9379-289d058a2877",
 CellID->1036065572],
Cell[225474, 3757, 199, 2, 31, "Text",ExpressionUUID->"7910cc67-0520-40a2-b7dd-ef9617047551",
 CellID->1356658728],
Cell[225676, 3761, 271, 4, 27, "Item",ExpressionUUID->"6657d089-62cc-4e11-bbb3-5c60218e2beb",
 CellID->1529361297],
Cell[225950, 3767, 407, 7, 27, "Subitem",ExpressionUUID->"ee37c78a-31eb-4cde-a8a1-9f3b3f9e5200",
 CellID->743547736],
Cell[226360, 3776, 248, 3, 27, "Subitem",ExpressionUUID->"6dbbe714-5203-4098-9ecc-334c45f44c54",
 CellID->599457059],
Cell[226611, 3781, 255, 3, 27, "Subitem",ExpressionUUID->"76c34d74-e7bb-4a2e-9426-9b431b796680",
 CellID->1229002536],
Cell[226869, 3786, 223, 3, 27, "Item",ExpressionUUID->"b419d524-c83d-4356-b481-d423dcbbbc08",
 CellID->1347905706],
Cell[227095, 3791, 331, 6, 27, "Subitem",ExpressionUUID->"cc90dcf5-2c7f-4730-b6a9-78d70a238c94",
 CellID->446208539],
Cell[227429, 3799, 383, 7, 27, "Subitem",ExpressionUUID->"55b311ff-e095-40dd-b13a-9c4ec50eae52",
 CellID->414019649],
Cell[227815, 3808, 344, 6, 27, "Subitem",ExpressionUUID->"3e8ecedc-5e4f-442a-97d9-2fc13f0093ca",
 CellID->581224463],
Cell[228162, 3816, 169, 2, 27, "Item",ExpressionUUID->"58362290-7c9a-45df-a483-b2acbfbf8d4c",
 CellID->1883923085],
Cell[228334, 3820, 278, 3, 27, "Subitem",ExpressionUUID->"b2fe2228-108f-4dc3-b322-dc584d1f6531",
 CellID->596398227],
Cell[228615, 3825, 278, 3, 27, "Subitem",ExpressionUUID->"67daccc0-b501-4aba-84b2-0e34aef94e04",
 CellID->1358820640]
}, Open  ]],
Cell[CellGroupData[{
Cell[228930, 3833, 180, 2, 54, "Subsubsection",ExpressionUUID->"3f8d9b6f-858e-49ef-bcc9-f47c20399d0e",
 CellID->1357394282],
Cell[229113, 3837, 208, 2, 31, "Text",ExpressionUUID->"bb5aebf1-b776-42f6-8499-38339ecc7354",
 CellID->1006915493],
Cell[229324, 3841, 179, 2, 27, "Item",ExpressionUUID->"fcd9e802-84d7-42be-824c-a4e60b6a5aec",
 CellID->1057552491],
Cell[229506, 3845, 261, 3, 27, "Subitem",ExpressionUUID->"2aaf61f2-ab82-4fc3-874b-dd0ca194336c",
 CellID->1710053665],
Cell[229770, 3850, 308, 4, 27, "Subitem",ExpressionUUID->"16d58eb1-3648-4da4-b2cd-ef043aa2da39",
 CellID->1098299854],
Cell[230081, 3856, 361, 6, 27, "Subitem",ExpressionUUID->"5b311966-c842-467a-8fa4-55b1b77d33d1",
 CellID->1503700213],
Cell[230445, 3864, 222, 3, 27, "Subitem",ExpressionUUID->"456e29df-ccef-4203-b613-0c28a69c5f25",
 CellID->1101921995],
Cell[230670, 3869, 174, 2, 27, "Item",ExpressionUUID->"190beb00-6009-4632-ba9a-04936245175a",
 CellID->103998237],
Cell[230847, 3873, 387, 7, 27, "Subitem",ExpressionUUID->"ed207027-4cb1-49ac-9134-59948d203e6a",
 CellID->1994164248],
Cell[231237, 3882, 224, 3, 27, "Item",ExpressionUUID->"c1323bbb-e338-4773-8e5a-19ba081adced",
 CellID->141237407],
Cell[231464, 3887, 285, 3, 27, "Subitem",ExpressionUUID->"3b3c0f64-6db0-44ec-b8c6-f3a978c500a2",
 CellID->807669514]
}, Open  ]],
Cell[CellGroupData[{
Cell[231786, 3895, 323, 5, 54, "Subsubsection",ExpressionUUID->"dc097bac-cead-42b0-b910-48d4e845f9bb",
 CellID->257389111],
Cell[CellGroupData[{
Cell[232134, 3904, 503, 8, 55, "Text",ExpressionUUID->"47d8940a-76f5-43df-b45a-17ca46705569",
 CellID->906723519],
Cell[232640, 3914, 13937, 291, 1035, "Output",ExpressionUUID->"f04a4e30-e467-4847-810a-e8f400b1c159",
 CellID->758224721]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246638, 4212, 185, 2, 53, "Subsection",ExpressionUUID->"11d2101f-0df0-4a21-b6c9-3756273d4b6e",
 CellID->314924549],
Cell[246826, 4216, 218, 2, 31, "Text",ExpressionUUID->"767e7af5-98fb-4f43-9145-4f01ebd42e1f",
 CellID->1537188835],
Cell[247047, 4220, 230, 3, 27, "Item",ExpressionUUID->"198132bd-ac43-4b18-bf20-021d6b4d466a",
 CellID->1304476435],
Cell[247280, 4225, 308, 4, 27, "Item",ExpressionUUID->"8d4eb057-ac19-42fa-bd5b-401f3ce14c63",
 CellID->674890822],
Cell[247591, 4231, 350, 4, 27, "Item",ExpressionUUID->"8325ca57-24fb-4137-80b1-8a97250c5d11",
 CellID->2028905547],
Cell[247944, 4237, 445, 6, 27, "Item",ExpressionUUID->"308d392e-fdac-41fb-b540-be444ffe4171",
 CellID->2070181363],
Cell[248392, 4245, 430, 7, 27, "Item",ExpressionUUID->"0c769d65-7a36-4774-b23d-ad436e41e195",
 CellID->8119247],
Cell[248825, 4254, 250, 3, 27, "Item",ExpressionUUID->"40c619f4-4fce-4374-a654-7a2ecc79709f",
 CellID->1168714568],
Cell[249078, 4259, 396, 6, 27, "Subitem",ExpressionUUID->"452fec85-f095-4d23-8d9d-fdb486d9c435",
 CellID->1700308914],
Cell[249477, 4267, 324, 4, 27, "Item",ExpressionUUID->"01e4ef6e-d111-4d9e-95f1-2a00e38f9098",
 CellID->527026969],
Cell[249804, 4273, 234, 3, 27, "Item",ExpressionUUID->"bfb1c987-8d7c-4b5c-ba05-caacb74a5ccb",
 CellID->1519707755],
Cell[250041, 4278, 230, 3, 27, "Item",ExpressionUUID->"bbaac76c-c135-49ef-8701-a29637c3f112",
 CellID->1705224514]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250320, 4287, 174, 2, 58, "Section",ExpressionUUID->"729f7d84-7b68-4cec-bc19-f07e0375237f",
 CellID->1539137583],
Cell[250497, 4291, 628, 11, 78, "Text",ExpressionUUID->"6a57b3e4-4c30-4fc1-b2a0-8eff6f306a7b",
 CellID->1844829366],
Cell[CellGroupData[{
Cell[251150, 4306, 182, 2, 47, "MathCaption",ExpressionUUID->"5c81abf8-7534-4900-a0b9-0f608e44ffa7",
 CellID->1505550096],
Cell[251335, 4310, 271, 5, 33, "Input",ExpressionUUID->"f00186da-1510-488b-b5ad-2f153a2a1665",
 CellID->2060244881]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[251655, 4321, 383, 5, 58, "Section",ExpressionUUID->"b744aefc-9d5d-4b8a-9b32-24eda6b611ee",
 CellID->655411356],
Cell[252041, 4328, 473, 8, 31, "Text",ExpressionUUID->"b0632cfb-d602-4c34-b437-3b537e7a29b4",
 CellID->1055034829],
Cell[CellGroupData[{
Cell[252539, 4340, 197, 3, 31, "Text",ExpressionUUID->"6b9734d7-e95a-4713-996b-61d130b11414",
 CellID->197897724],
Cell[CellGroupData[{
Cell[252761, 4347, 1438, 32, 178, "Input",ExpressionUUID->"c9e4ad9e-8e9c-4f6f-b6e2-8d1c8f4dd425",
 CellID->1762361712],
Cell[254202, 4381, 96974, 2494, 1038, "Output",ExpressionUUID->"2d2fc2e5-a1d3-4d57-ad3e-26b13ece3b86",
 CellID->2131290380]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[351225, 6881, 227, 3, 31, "Text",ExpressionUUID->"929c88db-390c-45b7-abe6-1ab66e8984aa",
 CellID->1918834160],
Cell[CellGroupData[{
Cell[351477, 6888, 952, 18, 82, "Input",ExpressionUUID->"efd4e37c-9c93-4864-9095-a57c8a135b1a",
 CellID->1083800121],
Cell[352432, 6908, 155268, 3989, 1980, "Output",ExpressionUUID->"70ba95f5-c69b-4582-8c5b-11142f10f422",
 CellID->570184700]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[507749, 10903, 301, 4, 31, "Text",ExpressionUUID->"cd909230-75eb-4536-b4d8-16859b12f0a4",
 CellID->472339793],
Cell[CellGroupData[{
Cell[508075, 10911, 740, 18, 58, "Input",ExpressionUUID->"9c0a127c-bbac-4c18-9c5a-c499a34e9d91",
 CellID->1515341639],
Cell[508818, 10931, 44913, 1192, 1026, "Output",ExpressionUUID->"871edb49-34ac-45ed-af23-6d5f5f5d206e",
 CellID->1022219986]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553792, 12130, 185, 2, 58, "Section",ExpressionUUID->"dea9da7e-c11e-477e-90d3-f7f362fff4a3",
 CellID->1338356900],
Cell[553980, 12134, 584, 9, 31, "Text",ExpressionUUID->"3b6c374a-dd9b-43ba-a767-42161418adbb",
 CellID->1020699622],
Cell[554567, 12145, 855, 13, 102, "Text",ExpressionUUID->"4c659a56-2a3b-4809-9a8b-a0bd9ab35e0c",
 CellID->799174718],
Cell[555425, 12160, 393, 7, 55, "Text",ExpressionUUID->"c5727181-d28b-4581-9eb4-72d7afc55647",
 CellID->1366757088],
Cell[555821, 12169, 373, 8, 31, "Text",ExpressionUUID->"899d229c-88e3-4ad5-ac33-206c0976f71d",
 CellID->1601289704],
Cell[CellGroupData[{
Cell[556219, 12181, 298, 4, 53, "Subsection",ExpressionUUID->"503d4fbe-b939-4c82-9d23-8b7e56efec62",
 CellID->610990924],
Cell[556520, 12187, 1341, 20, 219, "Text",ExpressionUUID->"5d412dee-0e75-47a7-a378-6505522d07c6",
 CellID->1805143361],
Cell[557864, 12209, 1223, 18, 149, "Text",ExpressionUUID->"18ca54b9-5de8-471a-b93c-ee459f6989f5",
 CellID->1542987158],
Cell[559090, 12229, 710, 11, 102, "Text",ExpressionUUID->"0e459d73-45c3-4815-80a2-f194428a1ba5",
 CellID->2120126981],
Cell[559803, 12242, 836, 13, 78, "Text",ExpressionUUID->"2ce0baf8-cbbc-4dbf-9aa0-de4e3443260f",
 CellID->1925498643],
Cell[560642, 12257, 254, 5, 31, "Text",ExpressionUUID->"3898aed7-eac2-4a88-808d-e3513392368c",
 CellID->1424616258]
}, Open  ]],
Cell[CellGroupData[{
Cell[560933, 12267, 188, 2, 53, "Subsection",ExpressionUUID->"d62b6ce5-7368-4f82-9cd6-90ebe6ea7583",
 CellID->1230267803],
Cell[CellGroupData[{
Cell[561146, 12273, 277, 5, 31, "Text",ExpressionUUID->"363a8834-4c1a-4a0d-bbed-77a20df8a6cf",
 CellID->1138411705],
Cell[561426, 12280, 609, 16, 58, "Input",ExpressionUUID->"076c19c2-db77-486a-aedf-ede22c71fffc",
 Evaluatable->False,
 CellID->1353714812]
}, Open  ]],
Cell[562050, 12299, 473, 9, 55, "Text",ExpressionUUID->"145c2961-6f19-489a-822c-4ff0387f8963",
 CellID->1443088966]
}, Open  ]],
Cell[CellGroupData[{
Cell[562560, 12313, 204, 2, 53, "Subsection",ExpressionUUID->"db3809a1-b685-4b6e-ab3b-488030024fa7",
 CellID->315942344],
Cell[562767, 12317, 541, 9, 78, "Text",ExpressionUUID->"7853027e-9aa2-4973-80ab-c65dac9d2aa3",
 CellID->1463400224],
Cell[563311, 12328, 274, 6, 31, "Text",ExpressionUUID->"27846be7-6914-4973-9352-654b481ec39b",
 CellID->237355677],
Cell[CellGroupData[{
Cell[563610, 12338, 267, 3, 31, "Text",ExpressionUUID->"e9212d95-57cc-4182-bf45-b902fbcd942d",
 CellID->1359730860],
Cell[CellGroupData[{
Cell[563902, 12345, 553, 13, 33, "Input",ExpressionUUID->"a323678d-a011-4664-b493-24735bfb99e8",
 CellID->1623076293],
Cell[564458, 12360, 1159, 28, 76, "Output",ExpressionUUID->"cd39ce6e-8711-4493-9575-af2d98d9c49f",
 CellID->582128702]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[565666, 12394, 269, 3, 31, "Text",ExpressionUUID->"00f1b8a6-7a70-44db-bd82-4dc87e2a1d6d",
 CellID->1705972257],
Cell[CellGroupData[{
Cell[565960, 12401, 551, 13, 33, "Input",ExpressionUUID->"2f962c6e-63e3-4a39-9f36-8552e219c795",
 CellID->1221552302],
Cell[566514, 12416, 1270, 33, 97, "Output",ExpressionUUID->"f34c0902-c82f-4460-a248-86deaa4edc3e",
 CellID->2049082429]
}, Open  ]]
}, Open  ]],
Cell[567811, 12453, 470, 9, 55, "Text",ExpressionUUID->"11566673-68a7-4650-92fe-8a0e21ce0c8b",
 CellID->685874394]
}, Open  ]],
Cell[CellGroupData[{
Cell[568318, 12467, 180, 2, 53, "Subsection",ExpressionUUID->"463a7d21-1934-4aa6-9491-9dc3964ab905",
 CellID->1946206509],
Cell[CellGroupData[{
Cell[568523, 12473, 431, 8, 55, "Text",ExpressionUUID->"0fb16545-6503-4650-a26b-64a21495d8c9",
 CellID->1569369306],
Cell[568957, 12483, 3879, 104, 47, "DisplayFormula",ExpressionUUID->"826b2e5d-15a9-4356-89f1-d288b641e551",
 CellID->995773488]
}, Open  ]],
Cell[572851, 12590, 445, 11, 31, "Text",ExpressionUUID->"12733964-96fc-423f-b946-5a7d8e521d48",
 CellID->624951745],
Cell[573299, 12603, 446, 9, 55, "Text",ExpressionUUID->"eb9c1c25-252b-4e38-876d-d89843436aeb",
 CellID->221460738]
}, Open  ]],
Cell[CellGroupData[{
Cell[573782, 12617, 236, 3, 53, "Subsection",ExpressionUUID->"cb75eb3e-3f39-4ccf-a891-2aa5d3e9f7f8",
 CellID->501463315],
Cell[CellGroupData[{
Cell[574043, 12624, 574, 9, 55, "Text",ExpressionUUID->"84859e2a-5311-43d4-a6f9-2a051cf7bd79",
 CellID->1368104377],
Cell[574620, 12635, 9923, 266, 114, "DisplayFormula",ExpressionUUID->"927cb174-6c36-4db0-a0ce-483c3800f3f4",
 CellID->622855810]
}, Open  ]],
Cell[CellGroupData[{
Cell[584580, 12906, 242, 4, 31, "Text",ExpressionUUID->"507caf3e-ddd2-461b-98f3-e51851395222",
 CellID->1502303192],
Cell[584825, 12912, 399, 9, 49, "DisplayFormula",ExpressionUUID->"976ab1fe-53eb-4460-964d-c68cdde5a93d",
 CellID->1244510165]
}, Open  ]],
Cell[CellGroupData[{
Cell[585261, 12926, 176, 2, 31, "Text",ExpressionUUID->"23a0efbd-c169-47ed-8710-f3713a10df1c",
 CellID->2139105022],
Cell[585440, 12930, 5876, 159, 49, "DisplayFormula",ExpressionUUID->"99083e5b-8643-4f8a-8a21-a0b174859e75",
 CellID->914370327]
}, Open  ]],
Cell[591331, 13092, 460, 10, 55, "Text",ExpressionUUID->"5858c26a-2ca1-4442-88b9-37c12e5137d2",
 CellID->429107957],
Cell[CellGroupData[{
Cell[591816, 13106, 179, 2, 49, "Subsubsection",ExpressionUUID->"64dd99d5-ef1d-4e76-b7ac-0f8d4373f317",
 CellID->767346673],
Cell[CellGroupData[{
Cell[592020, 13112, 296, 5, 31, "Text",ExpressionUUID->"3a6b6548-23a7-4708-87ed-44023564a56f",
 CellID->1156232876],
Cell[CellGroupData[{
Cell[592341, 13121, 832, 21, 82, "Input",ExpressionUUID->"1821d1b7-916b-43e1-9cd7-f54edcea2724",
 CellID->226425229],
Cell[593176, 13144, 6530, 183, 99, "Output",ExpressionUUID->"a86e1a86-6eca-4f48-87e9-f704950c5f65",
 CellID->1880620911]
}, Open  ]]
}, Open  ]],
Cell[599733, 13331, 314, 6, 31, "Text",ExpressionUUID->"c20d58ef-8c2d-484c-8690-8acff10bc7d7",
 CellID->187801319]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[600096, 13343, 184, 2, 53, "Subsection",ExpressionUUID->"467bca16-b905-4c84-8955-d3b25f60951c",
 CellID->1723290990],
Cell[CellGroupData[{
Cell[600305, 13349, 1030, 15, 102, "Text",ExpressionUUID->"686a0aea-f90a-4452-9750-b746cd967fd9",
 CellID->239721841],
Cell[601338, 13366, 10488, 281, 114, "DisplayFormula",ExpressionUUID->"ed8ed641-5593-4252-b6cc-e404d31c05a0",
 CellID->325659915]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[611875, 13653, 204, 2, 53, "Subsection",ExpressionUUID->"c8745bef-6d9b-4310-9a32-ce39d505abdd",
 CellID->1577858849],
Cell[CellGroupData[{
Cell[612104, 13659, 547, 9, 102, "Text",ExpressionUUID->"730b7a23-541f-4f6c-a37c-02d5833754b8",
 CellID->1945601987],
Cell[612654, 13670, 4905, 128, 68, "DisplayFormula",ExpressionUUID->"51ed93a1-1989-4f35-82bb-1e09e3572782",
 CellID->2146586287]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[617608, 13804, 204, 2, 53, "Subsection",ExpressionUUID->"03d955dc-805e-4937-be13-74cdc159aae2",
 CellID->2097939656],
Cell[CellGroupData[{
Cell[617837, 13810, 691, 11, 102, "Text",ExpressionUUID->"4236665e-c1fa-49b6-85b0-5910d55efaf6",
 CellID->537798299],
Cell[618531, 13823, 6729, 176, 68, "DisplayFormula",ExpressionUUID->"c90a2e0f-0cc3-4de2-ba4e-07430d7acb96",
 CellID->17341070]
}, Open  ]],
Cell[625275, 14002, 312, 5, 55, "Text",ExpressionUUID->"dcc0ac6f-083f-4fac-8180-47496a815bb1",
 CellID->1541071145]
}, Open  ]],
Cell[CellGroupData[{
Cell[625624, 14012, 238, 3, 53, "Subsection",ExpressionUUID->"f65b0c40-3859-467c-8c6b-5af1f885d110",
 CellID->2129951195],
Cell[625865, 14017, 460, 8, 55, "Text",ExpressionUUID->"9526e094-fa4f-4fcf-bd98-b76583f2811d",
 CellID->1684822522],
Cell[626328, 14027, 269, 5, 31, "Text",ExpressionUUID->"a315b7d0-dded-4d23-b2c2-1bb8c7efe65c",
 CellID->92757912],
Cell[626600, 14034, 429, 7, 27, "Item",ExpressionUUID->"e23bc588-d0fc-4fa5-9bcd-831eccf0753f",
 CellID->2056582909],
Cell[627032, 14043, 497, 8, 48, "Item",ExpressionUUID->"e62149d5-f4ce-4044-a289-a304b3b756a7",
 CellID->1239653098],
Cell[627532, 14053, 488, 8, 27, "Item",ExpressionUUID->"2fb237aa-840a-4f11-bc85-250c85234514",
 CellID->2110758539],
Cell[628023, 14063, 333, 6, 27, "Item",ExpressionUUID->"ffdadea6-4b0a-40ba-8f73-89b5db2d97e3",
 CellID->1236400180],
Cell[628359, 14071, 436, 7, 27, "Item",ExpressionUUID->"1246858b-6c1a-4eed-986d-fd35ff2b9ea3",
 CellID->1126056888],
Cell[CellGroupData[{
Cell[628820, 14082, 182, 2, 31, "Text",ExpressionUUID->"675bba49-998c-47c9-bf32-d9914d58132a",
 CellID->2012219252],
Cell[629005, 14086, 11057, 282, 81, "DisplayFormula",ExpressionUUID->"860c0abc-7071-4ced-8ad3-945436ceb9a4",
 CellID->796495408]
}, Open  ]],
Cell[640077, 14371, 519, 9, 78, "Text",ExpressionUUID->"05bf61a4-3fcb-402d-95ac-95e93aee918f",
 CellID->1432750505]
}, Open  ]],
Cell[CellGroupData[{
Cell[640633, 14385, 183, 2, 53, "Subsection",ExpressionUUID->"ed925532-19d2-4d96-8c1f-17b18d96460a",
 CellID->503603724],
Cell[CellGroupData[{
Cell[640841, 14391, 396, 7, 55, "Text",ExpressionUUID->"95fbc531-5dad-4b80-9d30-cf02adeea16c",
 CellID->834736441],
Cell[641240, 14400, 3442, 92, 67, "DisplayFormula",ExpressionUUID->"c6531211-15af-476b-b60c-69cb649ad443",
 CellID->2052181683]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[644731, 14498, 242, 3, 53, "Subsection",ExpressionUUID->"8b474ee6-2052-4649-8e68-401f464c1fac",
 CellID->282691714],
Cell[CellGroupData[{
Cell[644998, 14505, 385, 7, 55, "Text",ExpressionUUID->"0ad2dd15-5bb8-493e-b3e2-b7a0c0180168",
 CellID->965810034],
Cell[645386, 14514, 5039, 130, 47, "DisplayFormula",ExpressionUUID->"536b4922-56c2-4de2-871e-a0db95a07739",
 CellID->1687837412]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[650474, 14650, 228, 3, 53, "Subsection",ExpressionUUID->"bbc1e304-6a90-41aa-a142-53e1c4f493cb",
 CellID->1371890261],
Cell[CellGroupData[{
Cell[650727, 14657, 588, 10, 78, "Text",ExpressionUUID->"14aa692f-10ca-4a7c-a3e2-8e630f78f608",
 CellID->1975182435],
Cell[651318, 14669, 1505, 41, 47, "DisplayFormula",ExpressionUUID->"13158e1b-317f-420a-9238-191d277c8a87",
 CellID->1088969719]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[652872, 14716, 238, 3, 53, "Subsection",ExpressionUUID->"0d83a69d-364d-45cf-89ad-ef4b1299f740",
 CellID->1458427499],
Cell[653113, 14721, 511, 8, 55, "Text",ExpressionUUID->"8a713671-825a-4e48-8a35-47e7dd66b8c0",
 CellID->412628835],
Cell[653627, 14731, 345, 6, 31, "Text",ExpressionUUID->"71f06649-2fe6-41d6-b5fa-efd0158fe711",
 CellID->828133682],
Cell[653975, 14739, 356, 7, 27, "Item",ExpressionUUID->"85b8e2c2-0eb6-47be-ab3c-1735b93db5c2",
 CellID->601277167],
Cell[654334, 14748, 477, 11, 28, "Item",ExpressionUUID->"f199c9b1-ec20-4973-a467-d003a4465258",
 CellID->1754786634],
Cell[654814, 14761, 433, 10, 28, "Item",ExpressionUUID->"d34bad95-512c-45b9-8f3b-15615bf22594",
 CellID->1306033387],
Cell[655250, 14773, 319, 6, 27, "Item",ExpressionUUID->"59b8b9e4-2656-462c-a6ed-cffd4b56593b",
 CellID->1072779322],
Cell[655572, 14781, 524, 9, 48, "Item",ExpressionUUID->"901ae09d-6183-43ed-8bea-19e409cdc4d9",
 CellID->2076848289],
Cell[656099, 14792, 414, 7, 27, "Item",ExpressionUUID->"41d7292e-dd73-40fb-b91e-19feb9ac79bb",
 CellID->389994885],
Cell[CellGroupData[{
Cell[656538, 14803, 186, 2, 31, "Text",ExpressionUUID->"0d1419c7-201b-4e58-a1be-ba7e32ef6e4d",
 CellID->523941551],
Cell[656727, 14807, 709, 16, 50, "DisplayFormula",ExpressionUUID->"a030dc3f-1f1d-4a30-8940-43fa238cc0e9",
 CellID->1202694957]
}, Open  ]],
Cell[CellGroupData[{
Cell[657473, 14828, 197, 2, 31, "Text",ExpressionUUID->"b458fcbc-4527-425e-be5e-65333fb7dc14",
 CellID->1578056735],
Cell[657673, 14832, 7674, 202, 95, "DisplayFormula",ExpressionUUID->"3663fb06-a173-4854-ad22-56de7baa92ad",
 CellID->976504695]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[665396, 15040, 180, 2, 53, "Subsection",ExpressionUUID->"feaeee52-9ad3-4f67-90fc-181eb54a813c",
 CellID->1044378491],
Cell[665579, 15044, 267, 5, 31, "Text",ExpressionUUID->"8f9d84da-3389-42d4-a515-c9025998b8b0",
 CellID->1485451306],
Cell[665849, 15051, 326, 6, 27, "Item",ExpressionUUID->"1bedc568-4b38-4e04-a9f3-525b22fd63f4",
 CellID->1482703567],
Cell[666178, 15059, 470, 11, 28, "Item",ExpressionUUID->"46f94934-af3d-4fe4-a616-7a23a04e72f9",
 CellID->398610781],
Cell[666651, 15072, 277, 5, 27, "Item",ExpressionUUID->"4ab998fb-e2c3-48c6-8715-5d4eea3b2f9a",
 CellID->1449901274],
Cell[666931, 15079, 403, 7, 48, "Item",ExpressionUUID->"d65ff4b7-843f-48b1-a441-d1ad9399e6cc",
 CellID->993769609],
Cell[667337, 15088, 418, 8, 48, "Item",ExpressionUUID->"15b7d819-6e50-4518-9a4d-4bc3de0d4cdd",
 CellID->1305495744],
Cell[CellGroupData[{
Cell[667780, 15100, 229, 4, 31, "Text",ExpressionUUID->"2732e2c0-ce5a-4299-9659-b8b64f0313ed",
 CellID->626548009],
Cell[668012, 15106, 791, 19, 56, "Input",ExpressionUUID->"92543145-bfa0-43ba-a4c8-18fe88e85b49",
 CellID->1280066022]
}, Open  ]],
Cell[CellGroupData[{
Cell[668840, 15130, 353, 6, 31, "Text",ExpressionUUID->"ffad612d-f4ad-4d71-a1ec-7c1dcd2f4596",
 CellID->578456108],
Cell[CellGroupData[{
Cell[669218, 15140, 706, 17, 58, "Input",ExpressionUUID->"105e686b-321b-438d-8afa-9b4fb0445d4e",
 CellID->453337187],
Cell[669927, 15159, 1322, 39, 81, "Output",ExpressionUUID->"9d39d42e-562c-4b74-8939-204674f1e25b",
 CellID->931334631]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[671298, 15204, 673, 13, 55, "Text",ExpressionUUID->"45953ef6-5cea-4362-bb33-6e0024d9deb3",
 CellID->2113606000],
Cell[671974, 15219, 396, 9, 29, "DisplayFormula",ExpressionUUID->"65b5cf8a-f6b0-413d-bdf9-ac3354c269f6",
 CellID->1849036973]
}, Open  ]],
Cell[CellGroupData[{
Cell[672407, 15233, 488, 8, 55, "Text",ExpressionUUID->"dc48796c-b7eb-442e-865c-a6a3b2c81a36",
 CellID->528549474],
Cell[672898, 15243, 337, 8, 29, "DisplayFormula",ExpressionUUID->"5b1b4d8e-9633-4803-8d4c-9965e941b711",
 CellID->1338645526]
}, Open  ]],
Cell[CellGroupData[{
Cell[673272, 15256, 189, 2, 31, "Text",ExpressionUUID->"299bef40-d675-4074-85cd-cb534322e5b6",
 CellID->1576669510],
Cell[673464, 15260, 2215, 64, 148, "DisplayFormula",ExpressionUUID->"7018ed6f-bbab-439b-9faa-7313d4d7ba50",
 CellID->1283734237]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[675728, 15330, 238, 3, 53, "Subsection",ExpressionUUID->"9de8cc0c-fd38-420b-9630-1e74b6a7ac96",
 CellID->2100603497],
Cell[CellGroupData[{
Cell[675991, 15337, 349, 6, 55, "Text",ExpressionUUID->"7a96038c-73e8-4a99-b63b-a8000f2e7d00",
 CellID->211817399],
Cell[676343, 15345, 5860, 154, 47, "DisplayFormula",ExpressionUUID->"c0476444-3bc2-4fd0-801f-d96f209f0263",
 CellID->1634621914]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[682252, 15505, 218, 3, 53, "Subsection",ExpressionUUID->"0c285b61-3a82-436a-a5aa-42f8ba35406d",
 CellID->332212527],
Cell[CellGroupData[{
Cell[682495, 15512, 556, 9, 55, "Text",ExpressionUUID->"6c5cee7e-1066-4867-941c-f04cdc17e2a7",
 CellID->38459089],
Cell[683054, 15523, 1549, 41, 47, "DisplayFormula",ExpressionUUID->"cc91c72b-0ab4-4015-beec-03e076866577",
 CellID->2136814723]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[684652, 15570, 192, 2, 53, "Subsection",ExpressionUUID->"135031df-abc7-4070-b630-3f6ab9b3bc38",
 CellID->1076020680],
Cell[CellGroupData[{
Cell[684869, 15576, 600, 9, 78, "Text",ExpressionUUID->"fea75b41-fa29-4d9f-8ac4-fed3d59face5",
 CellID->719777373],
Cell[685472, 15587, 7600, 196, 72, "DisplayFormula",ExpressionUUID->"7edce198-b89c-41be-b825-c5bcf7f4e686",
 CellID->522924460]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[693133, 15790, 182, 2, 58, "Section",ExpressionUUID->"9e60b82f-9cd2-4bfb-a159-009cd35143c3",
 CellID->1288315696],
Cell[693318, 15794, 681, 17, 55, "Text",ExpressionUUID->"158a4789-7bb5-44f9-a59b-91cd7650758a",
 CellID->1791773618],
Cell[694002, 15813, 304, 7, 31, "Text",ExpressionUUID->"be9f440d-c107-4187-a089-9fcb0f1c21e7",
 CellID->176015845],
Cell[CellGroupData[{
Cell[694331, 15824, 236, 3, 31, "Text",ExpressionUUID->"39fb7d73-9747-41a0-9b7a-555671ad2bf1",
 CellID->1213324996],
Cell[CellGroupData[{
Cell[694592, 15831, 1732, 43, 130, "Input",ExpressionUUID->"1a04a998-5244-4183-9331-5e18558014fa",
 CellID->1995979507],
Cell[696327, 15876, 12711, 277, 207, "Output",ExpressionUUID->"e1a4e25c-de1d-4f17-b34c-26325c0ab5cc",
 CellID->2080323881]
}, Open  ]]
}, Open  ]],
Cell[709065, 16157, 354, 7, 31, "Text",ExpressionUUID->"467ac358-b4f6-4cd7-bc26-17acfaf33430",
 CellID->585524362],
Cell[709422, 16166, 313, 8, 28, "Item",ExpressionUUID->"cbe03e53-fa9b-4df2-ba4f-21d70a95a063",
 CellID->1137881580],
Cell[709738, 16176, 305, 7, 28, "Item",ExpressionUUID->"f68c1ebe-2da8-42e8-90a9-4c0e86b1cd2d",
 CellID->1033838525],
Cell[710046, 16185, 335, 7, 28, "Item",ExpressionUUID->"83320db3-7e99-491e-a43f-743ce16a4fc1",
 CellID->433901798]
}, Open  ]],
Cell[CellGroupData[{
Cell[710418, 16197, 240, 3, 58, "Section",ExpressionUUID->"f98474ac-54ca-4016-a14d-2e083b6af136",
 CellID->1880537421],
Cell[710661, 16202, 215, 2, 31, "Text",ExpressionUUID->"3e19d562-8000-48cc-9030-71c2a70fff96",
 CellID->1675601848],
Cell[710879, 16206, 302, 5, 32, "ItemNumbered",ExpressionUUID->"f5227400-6187-4c0a-8984-bb96a289d694",
 CellID->1887196225],
Cell[711184, 16213, 215, 2, 32, "ItemNumbered",ExpressionUUID->"035e977f-7402-436a-ac36-9c642fed9a54",
 CellID->1920971032],
Cell[711402, 16217, 210, 2, 32, "ItemNumbered",ExpressionUUID->"30ef86d6-313e-4a1d-b556-504350592f19",
 CellID->490985826],
Cell[711615, 16221, 315, 5, 55, "Text",ExpressionUUID->"85c46cde-0497-4f77-a4bd-25b43466042d",
 CellID->1366605808],
Cell[CellGroupData[{
Cell[711955, 16230, 432, 7, 31, "Text",ExpressionUUID->"84cc4044-bbe3-45a0-bfa3-14490a40a61f",
 CellID->1206210391],
Cell[CellGroupData[{
Cell[712412, 16241, 1882, 44, 130, "Input",ExpressionUUID->"031e6b61-33ad-4de0-8afd-e21d20dea8f6",
 CellID->532413857],
Cell[714297, 16287, 12826, 279, 202, "Output",ExpressionUUID->"03dfed31-74b3-4484-bc01-f977f7b11386",
 CellID->822211160]
}, Open  ]]
}, Open  ]],
Cell[727150, 16570, 413, 7, 31, "Text",ExpressionUUID->"139c84d9-f8fe-4ed1-8079-e7b28bfa8ef5",
 CellID->1862821197],
Cell[727566, 16579, 458, 9, 28, "Item",ExpressionUUID->"90b0db47-e196-4588-ba03-cdb332c25875",
 CellID->271768366],
Cell[728027, 16590, 411, 9, 28, "Item",ExpressionUUID->"a6182589-68ec-4b3b-b840-945d66877fc7",
 CellID->2060693840],
Cell[728441, 16601, 415, 9, 28, "Item",ExpressionUUID->"d7d380ba-243b-4e5a-b061-ad303cfcbe08",
 CellID->1612593711],
Cell[728859, 16612, 486, 9, 28, "Item",ExpressionUUID->"e3714765-a9ab-4e13-8eac-1aa7e8be9e0c",
 CellID->1618875637]
}, Open  ]],
Cell[CellGroupData[{
Cell[729382, 16626, 406, 5, 58, "Section",ExpressionUUID->"bfaa2dad-c9c4-4697-b269-9af2daf2f61d",
 CellID->1972507216],
Cell[CellGroupData[{
Cell[729813, 16635, 242, 4, 31, "Text",ExpressionUUID->"ec66026c-ce7d-424f-81bb-903aa9a07681",
 CellID->1223720573],
Cell[730058, 16641, 3231, 50, 58, "Input",ExpressionUUID->"64d0861f-583a-4f83-bc44-6ac66b7e9088",
 CellID->620783092]
}, Open  ]],
Cell[CellGroupData[{
Cell[733326, 16696, 208, 2, 31, "Text",ExpressionUUID->"eedf11aa-c103-410f-a050-660852631d31",
 CellID->1025870118],
Cell[733537, 16700, 5833, 117, 586, "Input",ExpressionUUID->"ac191dbd-6b76-4e32-9351-ebbeefd95ae5",
 CellID->1800355110]
}, Open  ]],
Cell[739385, 16820, 807, 23, 31, "Text",ExpressionUUID->"0820f768-b38a-4e0f-a20a-4766c1e624ca",
 CellID->523747540],
Cell[CellGroupData[{
Cell[740217, 16847, 447, 9, 31, "Text",ExpressionUUID->"e13cca22-bc6c-4353-94ec-2bdde9c6d72e",
 CellID->89435727],
Cell[CellGroupData[{
Cell[740689, 16860, 1192, 22, 82, "Input",ExpressionUUID->"a2434fd2-dd0c-4149-9481-488106bc0340",
 CellID->2055194436],
Cell[741884, 16884, 26994, 756, 1314, "Output",ExpressionUUID->"21d0d64d-dfa9-4641-9634-26cc23223135",
 CellID->1993181322]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[768939, 17647, 320, 4, 58, "Section",ExpressionUUID->"6c1d1bdc-1f11-4941-98b1-769e76064484",
 CellID->1525907504],
Cell[769262, 17653, 438, 11, 58, "Text",ExpressionUUID->"964f891d-af5b-4878-b35e-5e7e0047f794",
 CellID->677707254],
Cell[CellGroupData[{
Cell[769725, 17668, 191, 2, 53, "Subsection",ExpressionUUID->"70241834-79ca-4981-9507-3ab21e4c58e2",
 CellID->2120037937],
Cell[CellGroupData[{
Cell[769941, 17674, 232, 4, 31, "Text",ExpressionUUID->"52b544ae-710b-459a-9058-c0954fa3038c",
 CellID->428936135],
Cell[CellGroupData[{
Cell[770198, 17682, 1455, 32, 298, "Input",ExpressionUUID->"0e662ebf-b91a-4286-850c-a543558a056c",
 CellID->27017966],
Cell[771656, 17716, 227, 5, 32, "Output",ExpressionUUID->"42b8d0f1-0d07-4fab-8d66-4ec1667b3e44",
 CellID->801069301]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[771932, 17727, 198, 2, 31, "Text",ExpressionUUID->"e59b7cb5-f743-41e0-b4a1-7f648cd4b9f3",
 CellID->971905045],
Cell[CellGroupData[{
Cell[772155, 17733, 2575, 59, 250, "Input",ExpressionUUID->"e2ec9842-9757-4094-ae72-7c2501ad06de",
 CellID->1047472233],
Cell[774733, 17794, 4486, 89, 65, "Output",ExpressionUUID->"6dbba97b-8418-43e4-9349-99242db79744",
 CellID->996758864],
Cell[779222, 17885, 54559, 1096, 472, "Output",ExpressionUUID->"b6d00a48-2484-4208-8c06-57135400616e",
 CellID->6297001]
}, Open  ]]
}, Open  ]],
Cell[833808, 18985, 360, 7, 31, "Text",ExpressionUUID->"e3b9dd12-a478-404a-9168-10ad26ce140c",
 CellID->1942365572]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[834217, 18998, 181, 2, 58, "Section",ExpressionUUID->"6acfc638-af20-472e-bd5d-69ad5cff8a72",
 CellID->1806819801],
Cell[834401, 19002, 600, 9, 78, "Text",ExpressionUUID->"c1f9c3c8-b411-4609-821d-1e67c689e04b",
 CellID->1801626827],
Cell[835004, 19013, 675, 10, 102, "Text",ExpressionUUID->"b6c69873-43d5-4d88-80ef-9a28d6610883",
 CellID->422658689],
Cell[835682, 19025, 517, 10, 55, "Text",ExpressionUUID->"8931d240-3e64-4b0f-9d8b-1b28faeea61e",
 CellID->1896165394],
Cell[836202, 19037, 794, 13, 78, "Text",ExpressionUUID->"174997e3-9769-4bc2-839b-9266713dabd0",
 CellID->194455478],
Cell[CellGroupData[{
Cell[837021, 19054, 249, 3, 53, "Subsection",ExpressionUUID->"b37f1b0b-a24b-4cc6-917c-c5882ae0a69f",
 CellID->1890591659],
Cell[837273, 19059, 476, 8, 55, "Text",ExpressionUUID->"29595657-fae7-41b7-8585-4cf47dc20267",
 CellID->1005971801],
Cell[837752, 19069, 348, 6, 31, "Text",ExpressionUUID->"31eabe4f-1701-4f42-b1cf-28b7b951f86c",
 CellID->229306576],
Cell[838103, 19077, 406, 7, 32, "ItemNumbered",ExpressionUUID->"9e8fc7c6-f10e-40b2-9aa8-fb68e14e475e",
 CellID->1369960114],
Cell[CellGroupData[{
Cell[838534, 19088, 475, 8, 27, "Subitem",ExpressionUUID->"b44c94d2-d6fa-4462-b02f-29cc6f3a19ac",
 CellID->1747456511],
Cell[839012, 19098, 285, 6, 29, "DisplayFormula",ExpressionUUID->"58085121-93e3-4519-87de-910661ea4cf3",
 CellID->515224005]
}, Open  ]],
Cell[839312, 19107, 443, 5, 28, "Subitem",ExpressionUUID->"2f4ece97-8fa5-4076-8935-0c8411402ba7",
 CellID->715787331],
Cell[839758, 19114, 402, 8, 35, "ItemNumbered",ExpressionUUID->"9c55540f-2ce8-4aab-ad19-26f4f40c4c43",
 CellID->34281623],
Cell[840163, 19124, 599, 12, 32, "ItemNumbered",ExpressionUUID->"efcdc3f4-bdab-457b-9dd5-1d41d61cacc0",
 CellID->645620365],
Cell[CellGroupData[{
Cell[840787, 19140, 324, 4, 31, "Text",ExpressionUUID->"d1bf7fae-b793-4a61-8af9-5e38c2175b4a",
 CellID->1854089911],
Cell[841114, 19146, 1269, 39, 106, "Input",ExpressionUUID->"0790dbf6-ddc5-456e-a32e-901a976682a2",
 CellID->893533069],
Cell[842386, 19187, 867, 25, 82, "Input",ExpressionUUID->"88d49345-af98-4edb-9454-17b0231cf040",
 CellID->1519446002]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[843302, 19218, 259, 3, 53, "Subsection",ExpressionUUID->"cf665650-8f5c-4d8a-9b87-f79c9c2730ba",
 CellID->1701416207],
Cell[CellGroupData[{
Cell[843586, 19225, 301, 6, 31, "Text",ExpressionUUID->"c3028bb3-62c1-4a4e-8db3-72a59c3124a2",
 CellID->1957431244],
Cell[CellGroupData[{
Cell[843912, 19235, 2261, 53, 322, "Input",ExpressionUUID->"4f814bab-bf24-4a62-bdad-d175addd9f08",
 CellID->1244929515],
Cell[846176, 19290, 249, 5, 32, "Output",ExpressionUUID->"89f4ba4b-ddf9-4038-9bb8-af0183a1e487",
 CellID->818037198]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[846474, 19301, 266, 5, 31, "Text",ExpressionUUID->"ccdc0942-7471-423a-addc-f48d20073d45",
 CellID->597185884],
Cell[CellGroupData[{
Cell[846765, 19310, 2585, 60, 274, "Input",ExpressionUUID->"372c07cf-bc37-44ef-ae58-12c28e8246ee",
 CellID->1712069957],
Cell[849353, 19372, 4970, 96, 65, "Output",ExpressionUUID->"bfa93276-cbfe-4c7f-881b-cc41cccd8af5",
 CellID->560878692],
Cell[854326, 19470, 88320, 1778, 481, "Output",ExpressionUUID->"14f5cd2a-de87-40a9-bfb4-d8abdf898bb9",
 CellID->1382449761]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[942695, 21254, 196, 2, 31, "Text",ExpressionUUID->"38d1aea2-49fc-408b-8324-de3da25dcf9b",
 CellID->626381146],
Cell[CellGroupData[{
Cell[942916, 21260, 642, 18, 58, "Input",ExpressionUUID->"54de55ac-130c-44f7-9f04-442246aa89d3",
 CellID->623083228],
Cell[943561, 21280, 3810, 103, 60, "Output",ExpressionUUID->"901701e0-9481-4abf-ad49-4772e874eb24",
 CellID->1207556234]
}, Open  ]],
Cell[CellGroupData[{
Cell[947408, 21388, 851, 19, 58, "Input",ExpressionUUID->"d1da1896-0d20-41d9-a423-d42643635db6",
 CellID->1029550224],
Cell[948262, 21409, 10570, 234, 216, "Output",ExpressionUUID->"2e178411-e1a3-4ae4-8a6a-bc6c05aa5e5c",
 CellID->1677160688]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[958893, 21650, 260, 3, 53, "Subsection",ExpressionUUID->"b3348966-8374-4fce-8c70-c88155388def",
 CellID->1374870889],
Cell[959156, 21655, 513, 9, 78, "Text",ExpressionUUID->"2c61564e-3c0f-43fa-aa96-ce211e9b7cb3",
 CellID->530989703],
Cell[CellGroupData[{
Cell[959694, 21668, 251, 5, 31, "Text",ExpressionUUID->"15e19ab1-61d0-41cd-98bc-d97ef3216f97",
 CellID->1549385036],
Cell[CellGroupData[{
Cell[959970, 21677, 4532, 85, 346, "Input",ExpressionUUID->"712b8ee7-0cc0-404d-a5d7-c414706ee3a8",
 CellID->127596530],
Cell[964505, 21764, 250, 5, 32, "Output",ExpressionUUID->"e55b11dc-3940-44e7-9083-bb66c30dba4a",
 CellID->169332694]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[964804, 21775, 190, 2, 54, "Subsubsection",ExpressionUUID->"807149b4-7501-4570-8060-c27301d81a13",
 CellID->1326200004],
Cell[CellGroupData[{
Cell[965019, 21781, 285, 6, 31, "Text",ExpressionUUID->"31d4acbe-12d2-4d76-ab19-b4dbbdb49cdc",
 CellID->710695015],
Cell[CellGroupData[{
Cell[965329, 21791, 2046, 50, 226, "Input",ExpressionUUID->"a60506d7-51cd-409a-9acf-33027268d9f5",
 CellID->347072491],
Cell[967378, 21843, 4986, 97, 65, "Output",ExpressionUUID->"5dba5b37-5fd0-4f26-a3d0-21b0150e28ad",
 CellID->558755783],
Cell[972367, 21942, 73729, 1474, 477, "Output",ExpressionUUID->"6a3aecb6-18fb-4a24-a9ff-6e7ff5d9b053",
 CellID->1292344959]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1046145, 23422, 196, 2, 31, "Text",ExpressionUUID->"1ce65e2b-2359-40e6-b84a-9db00c687dfd",
 CellID->681770985],
Cell[CellGroupData[{
Cell[1046366, 23428, 643, 18, 58, "Input",ExpressionUUID->"e25cb6df-4020-4af8-918a-05219bbccefc",
 CellID->1699688150],
Cell[1047012, 23448, 3158, 86, 60, "Output",ExpressionUUID->"2b807282-9cf4-4826-a511-3c8dca0e15b9",
 CellID->912317332]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050207, 23539, 850, 19, 58, "Input",ExpressionUUID->"cfc6e5cf-6260-4937-a45f-31273c749e29",
 CellID->831264656],
Cell[1051060, 23560, 8612, 194, 209, "Output",ExpressionUUID->"0f54aeaa-0af9-43ef-8d66-8d29705c5a01",
 CellID->1266957579]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1059733, 23761, 183, 2, 54, "Subsubsection",ExpressionUUID->"f8ee6a1d-f68a-47ed-8b5e-226f5c5ce94d",
 CellID->1683949657],
Cell[CellGroupData[{
Cell[1059941, 23767, 243, 4, 31, "Text",ExpressionUUID->"0a7fbb78-a472-4489-80ba-959cc41e4697",
 CellID->454901386],
Cell[CellGroupData[{
Cell[1060209, 23775, 2092, 51, 226, "Input",ExpressionUUID->"be8cb23c-99ca-429b-8552-dedbd4c1acbf",
 CellID->485811182],
Cell[1062304, 23828, 4992, 97, 65, "Output",ExpressionUUID->"de710708-f26b-405b-b9f6-2ac276dc9daf",
 CellID->1455670248],
Cell[1067299, 23927, 66770, 1361, 467, "Output",ExpressionUUID->"2474ae43-392c-4a80-a682-b7268e83fc1b",
 CellID->783330166]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134118, 25294, 243, 3, 31, "Text",ExpressionUUID->"6c0dcaf5-6823-4cae-b382-7f8ac9f86ad2",
 CellID->295709980],
Cell[CellGroupData[{
Cell[1134386, 25301, 643, 18, 58, "Input",ExpressionUUID->"0d727cb4-fce1-4f97-8a74-e597eb7fc95c",
 CellID->720474702],
Cell[1135032, 25321, 3182, 87, 88, "Output",ExpressionUUID->"b117a07c-d094-4959-9023-e9c51d42712d",
 CellID->1355343852]
}, Open  ]],
Cell[CellGroupData[{
Cell[1138251, 25413, 1227, 28, 106, "Input",ExpressionUUID->"7bf03f53-987f-4300-a97d-fd04411de4d5",
 CellID->1505514728],
Cell[1139481, 25443, 9184, 202, 308, "Output",ExpressionUUID->"981b530d-cc29-41bf-b1fb-1e9d77b1449e",
 CellID->46120378]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148738, 25653, 307, 4, 53, "Subsection",ExpressionUUID->"d9143cf0-9eee-4b34-bbd2-fa4555c2c237",
 CellID->1533704542],
Cell[CellGroupData[{
Cell[1149070, 25661, 464, 8, 55, "Text",ExpressionUUID->"eac81493-79e0-4e83-928d-52deeecd7c28",
 CellID->726022453],
Cell[CellGroupData[{
Cell[1149559, 25673, 2775, 57, 322, "Input",ExpressionUUID->"6d2b13ef-c327-48ac-8a50-4970cf91e2d1",
 CellID->257285317],
Cell[1152337, 25732, 249, 5, 32, "Output",ExpressionUUID->"a98b85f4-ded8-41a9-b7da-da15e46ba906",
 CellID->1448919319]
}, Open  ]]
}, Open  ]],
Cell[1152613, 25741, 330, 6, 55, "Text",ExpressionUUID->"c2c1181e-a4d3-45ee-96ea-f77c7e3cfd0c",
 CellID->1309741408],
Cell[CellGroupData[{
Cell[1152968, 25751, 248, 3, 31, "Text",ExpressionUUID->"c1958f80-725c-4ee1-9efe-f5bc4a899133",
 CellID->1116462506],
Cell[CellGroupData[{
Cell[1153241, 25758, 2962, 63, 226, "Input",ExpressionUUID->"fdf69846-5d76-458a-b50a-3ba089b39482",
 CellID->1820714503],
Cell[1156206, 25823, 4897, 95, 65, "Output",ExpressionUUID->"66bcae45-e970-4405-8c7c-fe2a8f13442b",
 CellID->1669921100],
Cell[1161106, 25920, 63749, 1282, 481, "Output",ExpressionUUID->"7f782996-6a6b-4cc6-9121-3cb849175bab",
 CellID->1806763888]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1224904, 27208, 197, 2, 31, "Text",ExpressionUUID->"ee6fa363-9710-4fc1-8a76-50ea74c7a893",
 CellID->1254165818],
Cell[CellGroupData[{
Cell[1225126, 27214, 643, 18, 58, "Input",ExpressionUUID->"f437bb9c-eb01-470e-8e7a-d2cf88ded6b6",
 CellID->1212907821],
Cell[1225772, 27234, 2830, 77, 60, "Output",ExpressionUUID->"3d84defe-dcec-4fe9-b863-7e97c5747248",
 CellID->1149426083]
}, Open  ]],
Cell[CellGroupData[{
Cell[1228639, 27316, 1129, 27, 106, "Input",ExpressionUUID->"dfcb37e3-35ff-497e-b63f-c670bc042505",
 CellID->1426970223],
Cell[1229771, 27345, 8132, 181, 305, "Output",ExpressionUUID->"145dc145-480a-4cba-8910-359b60d79407",
 CellID->1684894204]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1237964, 27533, 266, 3, 53, "Subsection",ExpressionUUID->"29849c5a-3eb1-4484-880d-fb487186c654",
 CellID->2138651912],
Cell[CellGroupData[{
Cell[1238255, 27540, 379, 7, 31, "Text",ExpressionUUID->"41bdb05a-4b32-43fe-8aa7-ec8eda9c9bbb",
 CellID->1888885145],
Cell[CellGroupData[{
Cell[1238659, 27551, 3225, 70, 346, "Input",ExpressionUUID->"426b1f14-f9c6-493c-ae54-fc964227a5e0",
 CellID->241878414],
Cell[1241887, 27623, 249, 5, 32, "Output",ExpressionUUID->"1af87330-1e18-4b4a-acaf-be6565e15ba3",
 CellID->406286929]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1242185, 27634, 326, 6, 31, "Text",ExpressionUUID->"65f5e4e0-32d7-4230-be88-ed4d961e9ce8",
 CellID->63960327],
Cell[CellGroupData[{
Cell[1242536, 27644, 2611, 60, 274, "Input",ExpressionUUID->"6c698161-eb7c-458c-9b49-1a164b7ea0fb",
 CellID->1239392389],
Cell[1245150, 27706, 4906, 95, 65, "Output",ExpressionUUID->"eb70f80f-aa25-4416-aa35-a5251a300425",
 CellID->1613901890],
Cell[1250059, 27803, 93497, 1861, 477, "Output",ExpressionUUID->"7b575ef1-198a-4474-a7ed-876b1d79715a",
 CellID->2130603620]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1343605, 29670, 197, 2, 31, "Text",ExpressionUUID->"3174a930-8b1b-4fa5-af7d-7663c7139cc9",
 CellID->2023989670],
Cell[CellGroupData[{
Cell[1343827, 29676, 643, 18, 58, "Input",ExpressionUUID->"ef70321d-b7d3-4dd0-8ec6-5f2e5f701da9",
 CellID->1053415210],
Cell[1344473, 29696, 4300, 121, 60, "Output",ExpressionUUID->"665d722f-80d2-45a3-ba3f-2fc714a6749d",
 CellID->1912711262]
}, Open  ]],
Cell[CellGroupData[{
Cell[1348810, 29822, 1301, 29, 106, "Input",ExpressionUUID->"ff7c75bb-2101-431a-bee0-20cb153b08de",
 CellID->894248602],
Cell[1350114, 29853, 11229, 245, 322, "Output",ExpressionUUID->"b7f133c3-5128-42cb-a8d5-c71728236956",
 CellID->1255468491]
}, Open  ]],
Cell[CellGroupData[{
Cell[1361380, 30103, 2666, 61, 274, "Input",ExpressionUUID->"7679a7f1-6422-4828-adea-9ae75b3e63e6",
 CellID->1545692108],
Cell[1364049, 30166, 4901, 94, 65, "Output",ExpressionUUID->"f6106cca-f070-44b4-86dd-0aa1a61928e6",
 CellID->1632096462],
Cell[1368953, 30262, 90101, 1811, 480, "Output",ExpressionUUID->"71d46dcf-8cfd-4cf9-9f88-b0c1d8d4ffd5",
 CellID->836613703]
}, Open  ]],
Cell[CellGroupData[{
Cell[1459091, 32078, 316, 6, 33, "Input",ExpressionUUID->"9617cae9-59c8-466f-96d1-4ec1f728c549",
 CellID->337581397],
Cell[1459410, 32086, 4303, 121, 60, "Output",ExpressionUUID->"4fe2e25f-4e86-44ed-b636-b46442eea3b1",
 CellID->1805710479]
}, Open  ]],
Cell[CellGroupData[{
Cell[1463750, 32212, 866, 21, 106, "Input",ExpressionUUID->"4b480b03-0128-48c3-8613-bfd3e3a81bec",
 CellID->78744005],
Cell[1464619, 32235, 11176, 243, 331, "Output",ExpressionUUID->"9d08e1fd-4574-4181-8909-be17cda8c64f",
 CellID->878116379]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1475868, 32486, 170, 2, 58, "Section",ExpressionUUID->"cf89694d-4eec-4779-834f-2e1b638faf28",
 CellID->600565483],
Cell[CellGroupData[{
Cell[1476063, 32492, 173, 2, 53, "Subsection",ExpressionUUID->"306eb991-06c0-4a9f-acfc-2be6b6053762",
 CellID->530931881],
Cell[1476239, 32496, 529, 13, 31, "Text",ExpressionUUID->"75a075b4-b6bf-45da-b032-72d7d4df90b2",
 CellID->577570682],
Cell[1476771, 32511, 432, 10, 31, "Text",ExpressionUUID->"e9e71790-0650-43ce-8485-67f0e3d6fd80",
 CellID->604367934],
Cell[1477206, 32523, 642, 14, 55, "Text",ExpressionUUID->"35750e5d-9f59-42e8-9326-748e37626843",
 CellID->14216428],
Cell[1477851, 32539, 751, 15, 55, "Text",ExpressionUUID->"9968ed1d-e1a6-479f-93d3-8fb6e6e8b458",
 CellID->564820579],
Cell[1478605, 32556, 952, 22, 55, "Text",ExpressionUUID->"2c50d042-fa5e-4e0c-8d00-39f4bd060ef9",
 CellID->1061751513],
Cell[1479560, 32580, 995, 23, 55, "Text",ExpressionUUID->"b776df32-0585-45af-8234-a1aab31662dd",
 CellID->1416056068],
Cell[1480558, 32605, 989, 22, 55, "Text",ExpressionUUID->"1404df9e-5e88-490c-89fa-4c6013ffde50",
 CellID->1240558822],
Cell[1481550, 32629, 876, 21, 31, "Text",ExpressionUUID->"d869ccff-ce95-46b5-bc11-01d611b98f11",
 CellID->153392631]
}, Open  ]],
Cell[CellGroupData[{
Cell[1482463, 32655, 318, 4, 53, "Subsection",ExpressionUUID->"00d4ec13-6a6c-469d-9133-9a60adba023e",
 CellID->1089572817],
Cell[1482784, 32661, 834, 20, 31, "Text",ExpressionUUID->"92dddfc2-9047-4a5c-8363-41af42dedf96",
 CellID->857277350],
Cell[1483621, 32683, 966, 22, 31, "Text",ExpressionUUID->"9aa4ecf1-4cb3-4a9e-8e77-7d8122500acd",
 CellID->792633727],
Cell[1484590, 32707, 878, 20, 31, "Text",ExpressionUUID->"1eaa341c-5fa8-4c07-a539-8ba8eb5b9c2f",
 CellID->953987348],
Cell[1485471, 32729, 1044, 22, 31, "Text",ExpressionUUID->"7bed219e-273e-4fa2-aae7-ca6def8aaa42",
 CellID->552449334],
Cell[1486518, 32753, 1190, 25, 55, "Text",ExpressionUUID->"b65a3c71-f595-4f9f-8c24-f69279365017",
 CellID->1444150557],
Cell[1487711, 32780, 1126, 25, 55, "Text",ExpressionUUID->"dc8c2506-c367-42f7-83ef-51928e199949",
 CellID->978233105],
Cell[1488840, 32807, 1144, 26, 55, "Text",ExpressionUUID->"6cf840ea-d915-4547-a02d-0cdcd884d7e7",
 CellID->28994303],
Cell[1489987, 32835, 1024, 23, 55, "Text",ExpressionUUID->"7d6889d2-7e27-4531-b862-9565d535312e",
 CellID->1975946299]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1491060, 32864, 191, 2, 93, "TutorialMoreAboutSection",ExpressionUUID->"c645c12b-78c7-4f4a-979c-31759317c783",
 CellID->953933221],
Cell[1491254, 32868, 330, 6, 30, "TutorialMoreAbout",ExpressionUUID->"2aebb94b-060d-4405-9681-6b919a1b7c37",
 CellID->1790220492]
}, Open  ]],
Cell[CellGroupData[{
Cell[1491621, 32879, 129, 1, 93, "RelatedTutorialsSection",ExpressionUUID->"08917fff-3048-4705-80bf-0652539c89de",
 CellID->1989914574],
Cell[1491753, 32882, 357, 6, 30, "RelatedTutorials",ExpressionUUID->"fd60fc30-3e76-4a20-a0b6-b89617212ae3",
 CellID->1731410487]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1492159, 32894, 111, 1, 90, "MetadataSection",ExpressionUUID->"bdb10dd9-24b5-4cb1-9229-d4ca7cfd6102",
 CellID->1412638159],
Cell[1492273, 32897, 546, 13, 33, "History",ExpressionUUID->"c5114a4f-b411-4903-96ba-a1fde244b749",
 CellID->1777820728],
Cell[CellGroupData[{
Cell[1492844, 32914, 123, 1, 27, "CategorizationSection",ExpressionUUID->"08e216c1-4d2d-4245-ba44-e8dd272d5d47",
 CellID->1892994785],
Cell[1492970, 32917, 137, 2, 87, "Categorization",ExpressionUUID->"1d70d8bb-2f10-4da5-b53b-f52efd277dc0",
 CellID->593121190],
Cell[1493110, 32921, 165, 2, 87, "Categorization",ExpressionUUID->"3c33a83d-97b0-4445-9f3d-3275713e50ba",
 CellID->2116234603],
Cell[1493278, 32925, 161, 2, 87, "Categorization",ExpressionUUID->"f9e29104-d023-40ac-9dba-b059c97973bf",
 CellID->930811007],
Cell[1493442, 32929, 227, 5, 87, "Categorization",ExpressionUUID->"6814ec33-145b-4abb-a2b0-90d12b53b344",
 CellID->1869709901]
}, Closed]],
Cell[CellGroupData[{
Cell[1493706, 32939, 109, 1, 26, "KeywordsSection",ExpressionUUID->"190ee964-0179-4967-b84e-e228d07718df",
 CellID->86099556],
Cell[1493818, 32942, 173, 2, 26, "Keywords",ExpressionUUID->"f5f0c2a1-3e2a-445e-ba80-7d65bba2c563",
 CellID->1818743261],
Cell[1493994, 32946, 185, 2, 26, "Keywords",ExpressionUUID->"d384a2c3-a555-46ff-87bc-5f63c50f9909",
 CellID->2069684381],
Cell[1494182, 32950, 183, 2, 26, "Keywords",ExpressionUUID->"01313c4b-915e-4e1f-bc02-d07cb8b0c533",
 CellID->1639048444],
Cell[1494368, 32954, 164, 2, 26, "Keywords",ExpressionUUID->"6a546f9b-71dc-46bf-b376-622217b3b8d4",
 CellID->1621053888],
Cell[1494535, 32958, 178, 2, 26, "Keywords",ExpressionUUID->"1efcabe4-f7e7-4586-967b-f0a836833354",
 CellID->1477744774]
}, Open  ]]
}, Open  ]]
}
]
*)

